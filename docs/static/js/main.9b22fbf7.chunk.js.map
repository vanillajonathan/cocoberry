{"version":3,"sources":["components/TagList.tsx","../AddExperienceDialog.tsx","../EditExperienceDialog.tsx","components/ExperienceList.tsx","../OptionsSheet.tsx","components/MaybeAgainCard.tsx","components/NeverCard.tsx","components/PwaInstaller.tsx","../ShortcutsDialog.tsx","components/Toast.tsx","views/Home.tsx","../Preferences.tsx","../App.tsx","../serviceWorker.ts","localStorage.tsx","index.tsx"],"names":["TagList","props","handleClick","event","activeTag","currentTarget","innerText","toLowerCase","onClick","react","className","tags","map","tag","key","AddExperienceDialog_AddExperienceDialog","_useState","Object","name","_useState2","slicedToArray","setName","_useState3","_useState4","setTag","nameInput","handleClose","onClose","current","focus","backdropClassName","isOpen","tabIndex","role","type","data-dismiss","aria-label","aria-hidden","onSubmit","preventDefault","onAdd","htmlFor","id","value","onChange","target","ref","autoFocus","required","TagList_TagList","defaultProps","EditExperienceDialog_EditExperienceDialog","experience","_useState5","last","_useState6","setLast","onSave","parseInt","ExperienceList","compare","a","b","weekAgo","experiences","filter","x","moment","subtract","valueOf","sort","monthAgo","yearAgo","reverse","weekGroup","ExperienceList_ExperienceListGroup","onEdit","monthGroup","yearGroup","length","ExperienceListGroup","Date","toLocaleDateString","dateTime","toISOString","title","toString","fromNow","OptionsSheet_BottomSheet","open","style","zIndex","children","MaybeAgainCard","timeAgo","NeverCard","PwaInstaller","deferredPrompt","useState","showInstallPrompt","setShowInstallPrompt","beforeInstallPrompt","useEffect","window","addEventListener","removeEventListener","prompt","userChoice","then","choiceResult","outcome","console","log","ShortcutsDialog_ShortcutsDialog","Toast","show","aria-live","aria-atomic","message","Home","myExperiences","activeId","setActiveId","activeExperience","setActiveExperience","setExperiences","_useState7","_useState8","maybeAgainCardExperience","setMaybeAgainCardExperience","_useState9","_useState10","neverCardExperience","setNeverCardExperience","_useState11","_useState12","setReverse","_useState13","_useState14","search","setSearch","_useState15","_useState16","showAddDialog","setShowDialog","_useState17","_useState18","showEditDialog","setShowEditDialog","_useState19","_useState20","showShortcutsDialog","setShowShortcutsDialog","_useState21","_useState22","showOptions","setShowOptions","_useState23","_useState24","showTags","setShowTags","_useState25","_useState26","showToast","setShowToast","_useState27","_useState28","_useState29","_useState30","toastMessage","setToastMessage","prefShowMaybeAgainCard","localStorage","getItem","prefShowNeverCard","_useState31","showMaybeAgainCard","_useState33","showNeverCard","timerId","handleAddExperienceButtonClick","handleEditOpenClick","randomExperience","Math","floor","random","maybeExp","undefined","exp","includes","accessKey","placeholder","parentElement","classList","toggle","prevState","onNavigation","MaybeAgainCard_MaybeAgainCard","NeverCard_NeverCard","ExperienceList_ExperienceList","find","uuid","concat","toConsumableArray","i","objectSpread","getTime","clearTimeout","setTimeout","Toast_Toast","Preferences_Preferences","fileInput","preferences","setPreferences","handlePreferenceChanged","assign","checked","setItem","accept","reader","FileReader","onloadend","result","JSON","parse","storage","add_many","e","alert","file","files","readAsText","hidden","document","getElementById","click","json","stringify","get","File","url","URL","createObjectURL","location","href","rel","App_App","seed","nav","setNav","handleNavigation","component","Home_Home","src_App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","LocalStorage","classCallCheck","this","createClass","item","push","data","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","Error","ReactDOM","origin","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9b22fbf7.chunk.js","sourcesContent":["import * as React from \"react\";\r\n\r\ninterface IProps {\r\n    activeTag: string;\r\n    tags: string[];\r\n    onClick(tag: string): void;\r\n}\r\n\r\nexport const TagList: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    function handleClick(event: React.MouseEvent<HTMLElement>): void {\r\n        let activeTag = event.currentTarget.innerText.toLowerCase();\r\n        if (activeTag === props.activeTag) {\r\n            activeTag = \"\";\r\n        }\r\n        props.onClick(activeTag);\r\n    }\r\n\r\n    return (\r\n        <ul className=\"list-inline\">\r\n            {props.tags.map(tag => {\r\n                let className = \"badge \";\r\n                className += (tag.toLowerCase() === props.activeTag ? \"badge-primary\" : \"badge-light\");\r\n                return <li className=\"list-inline-item\" key={tag}><span className={className} onClick={handleClick}>{tag}</span></li>;\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { TagList } from \"./TagList\";\r\nexport const AddExperienceDialog = (props) => {\r\n    const [name, setName] = useState(props.name);\r\n    const [tag, setTag] = useState(\"\");\r\n    const nameInput = React.createRef();\r\n    useEffect(() => {\r\n        if (nameInput.current) {\r\n            nameInput.current.focus();\r\n        }\r\n    });\r\n    function handleChange(event) {\r\n        setName(event.target.value);\r\n    }\r\n    function handleClose() {\r\n        props.onClose();\r\n    }\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        props.onAdd(name, tag);\r\n    }\r\n    let className = \"modal fade\";\r\n    let backdropClassName = \"fade\";\r\n    if (props.isOpen) {\r\n        className += \" d-block show\";\r\n        backdropClassName += \" modal-backdrop show\";\r\n    }\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"div\", { className: className, tabIndex: -1, role: \"dialog\" },\r\n            React.createElement(\"div\", { className: \"modal-dialog\", role: \"document\" },\r\n                React.createElement(\"div\", { className: \"modal-content\" },\r\n                    React.createElement(\"div\", { className: \"modal-header\" },\r\n                        React.createElement(\"h5\", { className: \"modal-title\" }, \"Add experience\"),\r\n                        React.createElement(\"button\", { type: \"button\", className: \"close\", \"data-dismiss\": \"modal\", \"aria-label\": \"Close\", onClick: handleClose },\r\n                            React.createElement(\"span\", { \"aria-hidden\": \"true\" }, \"\\u00D7\"))),\r\n                    React.createElement(\"form\", { onSubmit: handleSubmit },\r\n                        React.createElement(\"div\", { className: \"modal-body\" },\r\n                            React.createElement(\"div\", { className: \"form-group\" },\r\n                                React.createElement(\"label\", { htmlFor: \"name\" }, \"Title\"),\r\n                                React.createElement(\"input\", { className: \"form-control\", id: \"name\", type: \"text\", value: name, onChange: handleChange, ref: nameInput, autoFocus: true, required: true })),\r\n                            React.createElement(\"div\", { className: \"form-group\" },\r\n                                React.createElement(\"label\", null, \"Tag\"),\r\n                                React.createElement(TagList, { activeTag: tag, tags: props.tags, onClick: tag => setTag(tag) }))),\r\n                        React.createElement(\"div\", { className: \"modal-footer\" },\r\n                            React.createElement(\"button\", { type: \"button\", className: \"btn btn-secondary\", \"data-dismiss\": \"modal\", onClick: handleClose }, \"Close\"),\r\n                            React.createElement(\"button\", { type: \"submit\", className: \"btn btn-primary\" }, \"Add\")))))),\r\n        React.createElement(\"div\", { className: backdropClassName })));\r\n};\r\nAddExperienceDialog.defaultProps = {\r\n    name: \"\",\r\n};\r\n//# sourceMappingURL=AddExperienceDialog.js.map","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { TagList } from \"./TagList\";\r\nexport const EditExperienceDialog = (props) => {\r\n    const [name, setName] = useState(props.experience.name);\r\n    const [tag, setTag] = useState(props.experience.tag || \"\");\r\n    const [last, setLast] = useState(props.experience.last || 0);\r\n    const nameInput = React.createRef();\r\n    useEffect(() => {\r\n        if (nameInput.current) {\r\n            nameInput.current.focus();\r\n        }\r\n    });\r\n    function handleChange(event) {\r\n        setName(event.target.value);\r\n    }\r\n    function handleTimeChange(event) {\r\n        setLast(parseInt(event.target.value, 10));\r\n    }\r\n    function handleClose() {\r\n        props.onClose();\r\n    }\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        const experience = { id: \"\", name: name, tag: tag, last: last };\r\n        props.onSave(experience);\r\n    }\r\n    let className = \"modal fade\";\r\n    let backdropClassName = \"fade\";\r\n    if (props.isOpen) {\r\n        className += \" d-block show\";\r\n        backdropClassName += \" modal-backdrop show\";\r\n    }\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"div\", { className: className, tabIndex: -1, role: \"dialog\" },\r\n            React.createElement(\"div\", { className: \"modal-dialog\", role: \"document\" },\r\n                React.createElement(\"div\", { className: \"modal-content\" },\r\n                    React.createElement(\"div\", { className: \"modal-header\" },\r\n                        React.createElement(\"h5\", { className: \"modal-title\" }, \"Edit experience\"),\r\n                        React.createElement(\"button\", { type: \"button\", className: \"close\", \"data-dismiss\": \"modal\", \"aria-label\": \"Close\", onClick: handleClose },\r\n                            React.createElement(\"span\", { \"aria-hidden\": \"true\" }, \"\\u00D7\"))),\r\n                    React.createElement(\"form\", { onSubmit: handleSubmit },\r\n                        React.createElement(\"div\", { className: \"modal-body\" },\r\n                            React.createElement(\"div\", { className: \"form-group\" },\r\n                                React.createElement(\"label\", { htmlFor: \"name\" }, \"Title\"),\r\n                                React.createElement(\"input\", { className: \"form-control\", id: \"name\", type: \"text\", value: name, onChange: handleChange, ref: nameInput, autoFocus: true, required: true })),\r\n                            React.createElement(\"div\", { className: \"form-group\" },\r\n                                React.createElement(\"label\", null, \"Tag\"),\r\n                                React.createElement(TagList, { activeTag: tag, tags: props.tags, onClick: tag => setTag(tag) })),\r\n                            React.createElement(\"div\", { className: \"form-group\" },\r\n                                React.createElement(\"label\", { htmlFor: \"time\" }, \"Last\"),\r\n                                React.createElement(\"input\", { className: \"form-control\", id: \"time\", type: \"datetime-local\", value: last, onChange: handleTimeChange }))),\r\n                        React.createElement(\"div\", { className: \"modal-footer\" },\r\n                            React.createElement(\"button\", { type: \"button\", className: \"btn btn-secondary\", \"data-dismiss\": \"modal\", onClick: handleClose }, \"Close\"),\r\n                            React.createElement(\"button\", { type: \"submit\", className: \"btn btn-primary\" }, \"Save\")))))),\r\n        React.createElement(\"div\", { className: backdropClassName })));\r\n};\r\n//# sourceMappingURL=EditExperienceDialog.js.map","import * as React from \"react\";\r\nimport moment from \"moment\";\r\nimport { IExperience } from \"../IExperience\";\r\n\r\ninterface IProps {\r\n    experiences: IExperience[];\r\n    reverse?: boolean;\r\n    onClick(id: string): void;\r\n    onEdit(id: string): void;\r\n}\r\n\r\nexport const ExperienceList: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    function compare(a: IExperience, b: IExperience): number {\r\n        if (a.last == null || b.last == null) {\r\n            return 0;\r\n        }\r\n        if (a.last < b.last) {\r\n            return -1;\r\n        }\r\n        if (a.last > b.last) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    const weekAgo = props.experiences\r\n        .filter(x => x.last != null &&\r\n            x.last < moment().subtract(1, \"w\").valueOf() &&\r\n            x.last > moment().subtract(2, \"w\").valueOf()).sort(compare);\r\n\r\n    const monthAgo = props.experiences\r\n        .filter(x => x.last != null &&\r\n            x.last < moment().subtract(1, \"m\").valueOf() &&\r\n            x.last > moment().subtract(2, \"m\").valueOf()).sort(compare);\r\n\r\n    const yearAgo = props.experiences\r\n        .filter(x => x.last != null &&\r\n            x.last < moment().subtract(1, \"y\").valueOf() &&\r\n            x.last > moment().subtract(2, \"y\").valueOf()).sort(compare);\r\n\r\n    let experiences = props.experiences.sort(compare);\r\n    if (props.reverse) {\r\n        experiences = experiences.reverse();\r\n    }\r\n\r\n    const weekGroup = (\r\n        <React.Fragment>\r\n            <h2 className=\"h5\">A week ago</h2>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={weekAgo} />\r\n        </React.Fragment>);\r\n\r\n    const monthGroup = (\r\n        <React.Fragment>\r\n            <h2 className=\"h5\">A month ago</h2>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={monthAgo} />\r\n        </React.Fragment>);\r\n\r\n    const yearGroup = (\r\n        <React.Fragment>\r\n            <h2 className=\"h5\">A year ago</h2>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={yearAgo} />\r\n        </React.Fragment>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={experiences} />\r\n            {weekAgo.length > 0 && weekGroup}\r\n            {monthAgo.length > 0 && monthGroup}\r\n            {yearAgo.length > 0 && yearGroup}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\ninterface IExperienceListGroupProps {\r\n    experiences: IExperience[];\r\n    onClick(id: string): void;\r\n    onEdit(id: string): void;\r\n}\r\n\r\nconst ExperienceListGroup: React.FunctionComponent<IExperienceListGroupProps> = (props: IExperienceListGroupProps) => {\r\n    function last(experience: any): JSX.Element {\r\n        return (\r\n            <React.Fragment>\r\n                <div><small className=\"float-right text-muted\">{new Date(experience.last).toLocaleDateString(\"sv-se\")}</small></div>\r\n                <time className=\"d-block text-muted small\" dateTime={new Date(experience.last).toISOString()} title={experience.last.toString()}>{moment(experience.last).fromNow()}</time>\r\n            </React.Fragment>);\r\n    }\r\n\r\n    return (\r\n        <div className=\"list-group mb-3\">\r\n            {props.experiences.map(experience =>\r\n                <a className=\"list-group-item list-group-item-action\" key={experience.id} onClick={() => props.onClick(experience.id)}>\r\n                    {experience.name}\r\n                    {experience.last != null && last(experience)}\r\n                </a>\r\n            )}\r\n        </div>);\r\n};\r\n","import * as React from \"react\";\r\nexport const BottomSheet = (props) => {\r\n    let className = \"fixed-bottom fade\";\r\n    let backdropClassName = \"fade\";\r\n    if (props.open) {\r\n        className += \" d-block show\";\r\n        backdropClassName += \" modal-backdrop show\";\r\n    }\r\n    if (props.open) {\r\n        return (React.createElement(React.Fragment, null,\r\n            React.createElement(\"div\", { className: className, tabIndex: -1, role: \"dialog\", style: { zIndex: 2000 } }, props.children),\r\n            React.createElement(\"div\", { className: backdropClassName, onClick: props.onClose })));\r\n    }\r\n    return null;\r\n};\r\nexport const OptionsSheet = (props) => {\r\n    return (React.createElement(BottomSheet, { open: props.open, onClose: props.onClose },\r\n        React.createElement(\"div\", { className: \"list-group list-group-flush\" },\r\n            React.createElement(\"a\", { className: \"list-group-item list-group-item-action\", onClick: () => props.onDone(props.id) }, \"Mark as done\"),\r\n            React.createElement(\"a\", { className: \"list-group-item list-group-item-action\", onClick: () => props.onEdit(props.id) }, \"Edit\"),\r\n            React.createElement(\"a\", { className: \"list-group-item list-group-item-action\", onClick: () => props.onDelete(props.id) }, \"Delete\"))));\r\n};\r\n//# sourceMappingURL=OptionsSheet.js.map","import * as React from \"react\";\r\nimport moment from \"moment\";\r\nimport { IExperience } from \"../IExperience\";\r\n\r\ninterface IProps {\r\n    experience: IExperience;\r\n    onClick(id: string): void;\r\n}\r\n\r\nexport const MaybeAgainCard: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    const timeAgo = moment(props.experience.last || 0).fromNow();\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n                <small className=\"text-muted text-uppercase\">It was {timeAgo}, Maybe again…</small>\r\n                <div>{props.experience.name}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { IExperience } from \"../IExperience\";\r\n\r\ninterface IProps {\r\n    experience: IExperience;\r\n    onClick(id: string): void;\r\n}\r\n\r\nexport const NeverCard: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n                <small className=\"text-muted text-uppercase\">You have never…</small>\r\n                <div>{props.experience.name}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport const PwaInstaller: React.FunctionComponent = () => {\r\n    let deferredPrompt: any;\r\n    const [showInstallPrompt, setShowInstallPrompt] = useState(false);\r\n\r\n    function handleInstall(): void {\r\n        setShowInstallPrompt(false);\r\n        deferredPrompt.prompt();\r\n        deferredPrompt.userChoice.then((choiceResult: any) => {\r\n            if (choiceResult.outcome === \"accepted\") {\r\n                console.log(\"User accepted the A2HS prompt\");\r\n            } else {\r\n                console.log(\"User dismissed the A2HS prompt\");\r\n            }\r\n            deferredPrompt = null;\r\n        });\r\n    }\r\n\r\n    function beforeInstallPrompt(event: Event): void {\r\n        deferredPrompt = event;\r\n        setShowInstallPrompt(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"beforeinstallprompt\", beforeInstallPrompt);\r\n        return () => {\r\n            window.removeEventListener(\"beforeinstallprompt\", beforeInstallPrompt);\r\n        };\r\n    });\r\n\r\n    if (showInstallPrompt) {\r\n        return (\r\n            <button className=\"btn btn-outline-success mr-sm-2 d-none d-xl-block\" onClick={handleInstall} title=\"Install web application\">Install</button>\r\n        );\r\n    }\r\n\r\n    return null;\r\n};\r\n","import * as React from \"react\";\r\nexport const ShortcutsDialog = (props) => {\r\n    let className = \"modal fade\";\r\n    let backdropClassName = \"fade\";\r\n    if (props.isOpen) {\r\n        className += \" d-block show\";\r\n        backdropClassName += \" modal-backdrop show\";\r\n    }\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"div\", { className: className, tabIndex: -1, role: \"dialog\" },\r\n            React.createElement(\"div\", { className: \"modal-dialog\", role: \"document\" },\r\n                React.createElement(\"div\", { className: \"modal-content\" },\r\n                    React.createElement(\"div\", { className: \"modal-header\" },\r\n                        React.createElement(\"h5\", { className: \"modal-title\" }, \"Keyboard Shortcuts\"),\r\n                        React.createElement(\"button\", { type: \"button\", className: \"close\", \"data-dismiss\": \"modal\", \"aria-label\": \"Close\", onClick: props.onClose },\r\n                            React.createElement(\"span\", { \"aria-hidden\": \"true\" }, \"\\u00D7\"))),\r\n                    React.createElement(\"div\", { className: \"modal-body\" },\r\n                        React.createElement(\"div\", { className: \"container-fluid\" },\r\n                            React.createElement(\"div\", { className: \"row\" },\r\n                                React.createElement(\"div\", { className: \"col-6\" },\r\n                                    React.createElement(\"kbd\", null,\r\n                                        React.createElement(\"kbd\", null, \"Shift\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"Alt\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"N\"))),\r\n                                React.createElement(\"div\", { className: \"col-6\" }, \"Add new experience\"),\r\n                                React.createElement(\"div\", { className: \"col-6\" },\r\n                                    React.createElement(\"kbd\", null,\r\n                                        React.createElement(\"kbd\", null, \"Shift\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"Alt\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"S\"))),\r\n                                React.createElement(\"div\", { className: \"col-6\" }, \"Search\"),\r\n                                React.createElement(\"div\", { className: \"col-6\" },\r\n                                    React.createElement(\"kbd\", null,\r\n                                        React.createElement(\"kbd\", null, \"Shift\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"Alt\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"P\"))),\r\n                                React.createElement(\"div\", { className: \"col-6\" }, \"Preferences\"),\r\n                                React.createElement(\"div\", { className: \"col-6\" },\r\n                                    React.createElement(\"kbd\", null,\r\n                                        React.createElement(\"kbd\", null, \"Shift\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"Alt\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"R\"))),\r\n                                React.createElement(\"div\", { className: \"col-6\" }, \"Reverse sort\")))),\r\n                    React.createElement(\"div\", { className: \"modal-footer\" },\r\n                        React.createElement(\"button\", { type: \"button\", className: \"btn btn-secondary\", \"data-dismiss\": \"modal\", onClick: props.onClose }, \"Close\"))))),\r\n        React.createElement(\"div\", { className: backdropClassName })));\r\n};\r\n//# sourceMappingURL=ShortcutsDialog.js.map","import * as React from \"react\";\r\n\r\ninterface IProps {\r\n    message: string;\r\n    show: boolean;\r\n}\r\n\r\nexport const Toast: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    let className = \"toast fixed-bottom bg-dark text-white mx-auto mb-3 fade\";\r\n    if (props.show) {\r\n        className += \" show\";\r\n    }\r\n    return (\r\n        <div className={className} role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\r\n            <div className=\"toast-body\">\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport uuid from \"uuid/v4\";\r\nimport { AddExperienceDialog } from \"../components/AddExperienceDialog\";\r\nimport { EditExperienceDialog } from \"../components/EditExperienceDialog\";\r\nimport { IExperience } from \"../IExperience\";\r\nimport { ExperienceList } from \"../components/ExperienceList\";\r\nimport { BottomSheet } from \"../components/OptionsSheet\";\r\nimport { MaybeAgainCard } from \"../components/MaybeAgainCard\";\r\nimport { NeverCard } from \"../components/NeverCard\";\r\nimport { PwaInstaller } from \"../components/PwaInstaller\";\r\nimport { ShortcutsDialog } from \"../components/ShortcutsDialog\";\r\nimport { TagList } from \"../components/TagList\";\r\nimport { Toast } from \"../components/Toast\";\r\nimport \"./Home.css\";\r\n\r\ninterface IProps {\r\n    experiences: IExperience[];\r\n    tags: string[];\r\n    onNavigation(component: string): void;\r\n}\r\n\r\nexport const Home: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    const [activeId, setActiveId] = useState(\"\");\r\n    const [activeExperience, setActiveExperience] = useState<IExperience>();\r\n    //const [experiences, setExperiences] = useState(props.storage.get());\r\n    const [experiences, setExperiences] = useState(props.experiences);\r\n    const [maybeAgainCardExperience, setMaybeAgainCardExperience] = useState<IExperience | null>(null);\r\n    const [neverCardExperience, setNeverCardExperience] = useState<IExperience | null>(null);\r\n    const [reverse, setReverse] = useState(false);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [showAddDialog, setShowDialog] = useState(false);\r\n    const [showEditDialog, setShowEditDialog] = useState(false);\r\n    const [showShortcutsDialog, setShowShortcutsDialog] = useState(false);\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [showTags, setShowTags] = useState(false);\r\n    const [showToast, setShowToast] = useState(false);\r\n    const [tag, setTag] = useState(\"\");\r\n    const [toastMessage, setToastMessage] = useState(\"\");\r\n\r\n    const prefShowMaybeAgainCard = localStorage.getItem(\"showMaybeAgainCard\") || \"false\";\r\n    const prefShowNeverCard = localStorage.getItem(\"showNeverCard\") || \"true\";\r\n\r\n    const [showMaybeAgainCard] = useState(prefShowMaybeAgainCard === \"true\");\r\n    const [showNeverCard] = useState(prefShowNeverCard === \"true\");\r\n\r\n    let timerId: number = 0;\r\n\r\n    useEffect(() => {\r\n        if (props.experiences.length !== 0) {\r\n            const maybeExp = randomExperience(props.experiences.filter(x => x.last !== null && x.last !== undefined));\r\n            setMaybeAgainCardExperience(maybeExp);\r\n            const exp = randomExperience(props.experiences.filter(x => x.last === null));\r\n            setNeverCardExperience(exp);\r\n        }\r\n    }, []);\r\n\r\n    function handleAddExperience(name: string, tag: string): void {\r\n        setShowDialog(false);\r\n        const experience: IExperience = {\r\n            id: uuid(),\r\n            name,\r\n            tag,\r\n        };\r\n        setExperiences((prevState: IExperience[]) => [...prevState, experience]);\r\n    }\r\n\r\n    function handleAddExperienceButtonClick(): void {\r\n        setShowDialog(true);\r\n    }\r\n\r\n    function handleClick(key: string): void {\r\n        setShowOptions(false);\r\n        setExperiences((prevState: IExperience[]) => prevState.map(i => i.id === key ? { ...i, last: new Date().getTime() } : i));\r\n        setToastMessage(\"Marked as done\");\r\n        setShowToast(true);\r\n        window.clearTimeout(timerId);\r\n        timerId = window.setTimeout(() => {\r\n            setShowToast(false);\r\n        }, 1500);\r\n    }\r\n\r\n    function handleDelete(key: string): void {\r\n        setShowOptions(false);\r\n        setToastMessage(\"Removed\");\r\n        setShowToast(true);\r\n        window.clearTimeout(timerId);\r\n        timerId = window.setTimeout(() => {\r\n            setShowToast(false);\r\n        }, 1500);\r\n    }\r\n\r\n    function handleOpenOptions(id: string): void {\r\n        setActiveId(id);\r\n        const exp = experiences.find(x => x.id === id);\r\n        setActiveExperience(exp);\r\n        setShowOptions(true);\r\n    }\r\n\r\n    function handleCloseOptions(): void {\r\n        setShowOptions(false);\r\n    }\r\n\r\n    function handleEditOpenClick(tag: string): void {\r\n        setShowOptions(false);\r\n        setShowEditDialog(true);  \r\n    }\r\n\r\n    function handleEditSaveClick(experience: IExperience): void {\r\n        setShowEditDialog(false);\r\n    }\r\n\r\n    function handleChange(event: React.FormEvent<HTMLInputElement>): void {\r\n        setSearch(event.currentTarget.value);\r\n    }\r\n\r\n    function handleDropdownClick(event: any): void {\r\n        event.target.parentElement.classList.toggle(\"dropup\");\r\n        setShowTags((prevState: boolean) => !prevState);\r\n    }\r\n\r\n    function handleSort(): void {\r\n        setReverse((prevState: boolean) => !prevState);\r\n    }\r\n\r\n    function handleTagClick(tag: string): void {\r\n        setTag(tag);\r\n    }\r\n\r\n    function handleClose(): void {\r\n        setShowDialog(false);\r\n        setShowEditDialog(false);\r\n    }\r\n\r\n    function randomExperience(experiences: IExperience[]): IExperience {\r\n        return experiences[Math.floor(Math.random() * experiences.length)];\r\n    }\r\n\r\n    let myExperiences: IExperience[];\r\n    if (search !== \"\" || tag !== \"\") {\r\n        myExperiences = experiences.filter(x => x.name.toLowerCase().includes(search.toLowerCase()));\r\n        if (tag !== \"\") {\r\n            myExperiences = myExperiences.filter(x => x.tag != null && x.tag.includes(tag));\r\n        }\r\n    } else {\r\n        myExperiences = experiences.filter(x => x.last != null);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <header className=\"bg-white fixed-top shadow-sm\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-white\">\r\n                    <span className=\"navbar-brand d-none d-xl-block\">Cocoberry</span>\r\n                    <div className=\"form-inline mr-auto\">\r\n                        <div className=\"input-group\">\r\n                            <input className=\"form-control\" type=\"search\" accessKey=\"s\" placeholder=\"Search…\" title=\"Search\" onChange={handleChange} aria-label=\"Search\" />\r\n                            <div className=\"input-group-append mr-sm-2\">\r\n                                <button className=\"btn btn-outline-success dropdown-toggle\" type=\"button\" onClick={handleDropdownClick} aria-label=\"Show tags\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {PwaInstaller}\r\n                    <button className=\"btn btn-outline-success mr-sm-2 d-none d-xl-block\" accessKey=\"?\" onClick={() => setShowShortcutsDialog(true)} title=\"Shortcuts\">K</button>\r\n                    <button className=\"btn btn-outline-success mr-sm-2 d-none d-xl-block\" accessKey=\"r\" onClick={handleSort} title=\"Sort\">▲</button>\r\n                    <button className=\"btn btn-outline-success mr-sm-2\" accessKey=\"n\" onClick={handleAddExperienceButtonClick} title=\"Add new experience\">+</button>\r\n                    <button className=\"btn btn-outline-success\" accessKey=\"p\" onClick={() => props.onNavigation(\"Preferences\")}>☰</button>\r\n                </nav>\r\n                {showTags &&\r\n                    <div className=\"container\">\r\n                        <TagList activeTag={tag} tags={props.tags} onClick={handleTagClick} />\r\n                    </div>\r\n                }\r\n            </header>\r\n            <main className=\"App container\">\r\n                {showMaybeAgainCard && search === \"\" && tag === \"\" && maybeAgainCardExperience &&\r\n                    <MaybeAgainCard experience={maybeAgainCardExperience} onClick={handleEditOpenClick} />\r\n                }\r\n                {showNeverCard && search === \"\" && tag === \"\" && neverCardExperience &&\r\n                    <NeverCard experience={neverCardExperience} onClick={handleEditOpenClick} />\r\n                }\r\n                <ExperienceList experiences={myExperiences} reverse={reverse} onClick={handleOpenOptions} onEdit={handleEditOpenClick} />\r\n                {search !== \"\" && myExperiences.length === 0 &&\r\n                    <React.Fragment>\r\n                        <p>There are no matched experiences.</p>\r\n                        <button className=\"btn btn-outline-secondary\" onClick={handleAddExperienceButtonClick}>Add new experience</button>\r\n                    </React.Fragment>\r\n                }\r\n            </main>\r\n            <AddExperienceDialog name={search} isOpen={showAddDialog} tags={props.tags} onAdd={handleAddExperience} onClose={handleClose} />\r\n            {showEditDialog && activeExperience &&\r\n                <EditExperienceDialog experience={activeExperience} isOpen={showEditDialog} tags={props.tags} onSave={handleEditSaveClick} onClose={handleClose} />\r\n            }\r\n            <ShortcutsDialog isOpen={showShortcutsDialog} onClose={() => setShowShortcutsDialog(false)} />\r\n            <BottomSheet open={showOptions} onClose={handleCloseOptions}>\r\n                <div className=\"list-group list-group-flush\">\r\n                    <a className=\"list-group-item list-group-item-action\" onClick={() => handleClick(activeId)}>Mark as done</a>\r\n                    <a className=\"list-group-item list-group-item-action\" onClick={() => handleEditOpenClick(activeId)}>Edit</a>\r\n                    <a className=\"list-group-item list-group-item-action\" onClick={() => handleDelete(activeId)}>Delete</a>\r\n                </div>\r\n            </BottomSheet>\r\n            <Toast message={toastMessage} show={showToast} />\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nexport const Preferences = (props) => {\r\n    const fileInput = React.createRef();\r\n    const prefShowMaybeAgainCard = localStorage.getItem(\"showMaybeAgainCard\") || \"false\";\r\n    const prefShowNeverCard = localStorage.getItem(\"showNeverCard\") || \"true\";\r\n    const [preferences, setPreferences] = useState({\r\n        showMaybeAgainCard: prefShowMaybeAgainCard === \"true\",\r\n        showNeverCard: prefShowNeverCard === \"true\",\r\n    });\r\n    function handleExport() {\r\n        const json = JSON.stringify(props.storage.get());\r\n        const file = new File([json], \"cocoberry.json\", { type: \"octet/stream\" });\r\n        const url = window.URL.createObjectURL(file);\r\n        window.location.assign(url);\r\n    }\r\n    function handleBrowse() {\r\n        const elem = document.getElementById(\"file\");\r\n        const input = elem;\r\n        input.click();\r\n    }\r\n    function handleImport() {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n            if (typeof reader.result === \"string\") {\r\n                try {\r\n                    const experiences = JSON.parse(reader.result);\r\n                    //props.onImport(experiences);\r\n                    props.storage.add_many(experiences);\r\n                }\r\n                catch (e) {\r\n                    alert(e);\r\n                }\r\n            }\r\n        };\r\n        const file = fileInput.current.files[0];\r\n        reader.readAsText(file);\r\n    }\r\n    function handlePreferenceChanged(event) {\r\n        const currentTarget = event.currentTarget;\r\n        setPreferences((prevState) => {\r\n            const preferences = Object.assign({}, prevState);\r\n            preferences[currentTarget.id] = currentTarget.checked;\r\n            return preferences;\r\n        });\r\n        localStorage.setItem(currentTarget.id, currentTarget.checked.toString());\r\n    }\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"header\", { className: \"fixed-top shadow-sm\" },\r\n            React.createElement(\"nav\", { className: \"navbar navbar-expand-lg navbar-light bg-white\" },\r\n                React.createElement(\"button\", { className: \"btn btn-outline-success\", accessKey: \"b\", onClick: () => props.onNavigation(\"\") }, \"Back\"))),\r\n        React.createElement(\"main\", { className: \"App container\" },\r\n            React.createElement(\"div\", { className: \"list-group mb-3\" },\r\n                React.createElement(\"div\", { className: \"list-group-item\" },\r\n                    React.createElement(\"div\", { className: \"custom-control custom-switch\" },\r\n                        React.createElement(\"input\", { className: \"custom-control-input\", id: \"showMaybeAgainCard\", type: \"checkbox\", checked: preferences.showMaybeAgainCard, onChange: handlePreferenceChanged }),\r\n                        React.createElement(\"label\", { className: \"custom-control-label\", htmlFor: \"showMaybeAgainCard\" }, \"Show the maybe-again card\"))),\r\n                React.createElement(\"div\", { className: \"list-group-item\" },\r\n                    React.createElement(\"div\", { className: \"custom-control custom-switch\" },\r\n                        React.createElement(\"input\", { className: \"custom-control-input\", id: \"showNeverCard\", type: \"checkbox\", checked: preferences.showNeverCard, onChange: handlePreferenceChanged }),\r\n                        React.createElement(\"label\", { className: \"custom-control-label\", htmlFor: \"showNeverCard\" }, \"Show the you-have-never card\")))),\r\n            React.createElement(\"div\", { className: \"card\" },\r\n                React.createElement(\"div\", { className: \"card-body\" },\r\n                    React.createElement(\"h5\", { className: \"card-title\" }, \"Export and import experiences\"),\r\n                    React.createElement(\"p\", { className: \"card-text\" }, \"Your experiences can be imported and exported. They are stored in the JSON format.\"),\r\n                    React.createElement(\"input\", { className: \"form-control-file\", id: \"file\", type: \"file\", accept: \"application/json\", onChange: handleImport, ref: fileInput, hidden: true, required: true })),\r\n                React.createElement(\"div\", { className: \"list-group list-group-flush\" },\r\n                    React.createElement(\"button\", { className: \"list-group-item list-group-item-action\", type: \"button\", accessKey: \"i\", onClick: handleBrowse }, \"Import from file\"),\r\n                    React.createElement(\"button\", { className: \"list-group-item list-group-item-action\", type: \"button\", accessKey: \"e\", onClick: handleExport }, \"Export to file\")))),\r\n        React.createElement(\"footer\", { className: \"container mt-3\" },\r\n            React.createElement(\"p\", null,\r\n                React.createElement(\"a\", { href: \"https://github.com/vanillajonathan/cocoberry\", rel: \"noopener\", target: \"_blank\" }, \"Cocoberry on GitHub\")),\r\n            React.createElement(\"p\", null, \"Built with \\u2764 by Jonathan\"))));\r\n};\r\n//# sourceMappingURL=Preferences.js.map","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Home } from \"./views/Home\";\r\nimport { Preferences } from \"./views/Preferences\";\r\nconst App = (props) => {\r\n    const experiences = props.storage.get();\r\n    if (experiences.length === 0) {\r\n        props.storage.add_many(props.seed);\r\n    }\r\n    const [nav, setNav] = useState(\"\");\r\n    function handleNavigation(component) {\r\n        setNav(component);\r\n    }\r\n    if (nav === \"Preferences\") {\r\n        return (React.createElement(Preferences, { storage: props.storage, onNavigation: handleNavigation }));\r\n    }\r\n    return (React.createElement(Home, { experiences: props.storage.get(), onNavigation: handleNavigation, tags: props.tags }));\r\n};\r\nApp.defaultProps = {\r\n    seed: [],\r\n    tags: [],\r\n};\r\nexport default App;\r\n//# sourceMappingURL=App.js.map","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log('This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA');\r\n                });\r\n            }\r\n            else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n        registration.onupdatefound = () => {\r\n            const installingWorker = registration.installing;\r\n            if (installingWorker == null) {\r\n                return;\r\n            }\r\n            installingWorker.onstatechange = () => {\r\n                if (installingWorker.state === 'installed') {\r\n                    if (navigator.serviceWorker.controller) {\r\n                        // At this point, the updated precached content has been fetched,\r\n                        // but the previous service worker will still serve the older\r\n                        // content until all client tabs are closed.\r\n                        console.log('New content is available and will be used when all ' +\r\n                            'tabs for this page are closed. See https://bit.ly/CRA-PWA.');\r\n                        // Execute callback\r\n                        if (config && config.onUpdate) {\r\n                            config.onUpdate(registration);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // At this point, everything has been precached.\r\n                        // It's the perfect time to display a\r\n                        // \"Content is cached for offline use.\" message.\r\n                        console.log('Content is cached for offline use.');\r\n                        // Execute callback\r\n                        if (config && config.onSuccess) {\r\n                            config.onSuccess(registration);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        };\r\n    })\r\n        .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (response.status === 404 ||\r\n            (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n            // No service worker found. Probably a different app. Reload the page.\r\n            navigator.serviceWorker.ready.then(registration => {\r\n                registration.unregister().then(() => {\r\n                    window.location.reload();\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            // Service worker found. Proceed as normal.\r\n            registerValidSW(swUrl, config);\r\n        }\r\n    })\r\n        .catch(() => {\r\n        console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=serviceWorker.js.map","import uuid from \"uuid/v4\";\r\nimport { IStorage, INewExperience } from \"./IStorage\";\r\nimport { IExperience } from \"./IExperience\";\r\n\r\nexport class LocalStorage implements IStorage {\r\n    public add(experience: INewExperience): void {\r\n        const experiences = this.get();\r\n        const item: IExperience = {\r\n            id: uuid(),\r\n            last: experience.last,\r\n            name: experience.name,\r\n            tag: experience.tag,\r\n        };\r\n        experiences.push(item);\r\n        localStorage.setItem(\"experiences\", JSON.stringify(experiences));\r\n    }\r\n\r\n    public add_many(experiences: INewExperience[]): void {\r\n        const data = this.get();\r\n        for (const experience of experiences) {\r\n            const item: IExperience = {\r\n                id: uuid(),\r\n                last: experience.last,\r\n                name: experience.name,\r\n                tag: experience.tag,\r\n            };\r\n            data.push(item);\r\n        }\r\n        localStorage.setItem(\"experiences\", JSON.stringify(data));\r\n    }\r\n\r\n    public delete(id: string): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    public get(): IExperience[] {\r\n        const experiences = localStorage.getItem(\"experiences\");\r\n        if (experiences === null) {\r\n            return [];\r\n        }\r\n        return JSON.parse(experiences);\r\n    }\r\n\r\n    public update(experience: IExperience): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { IStorage, INewExperience } from \"./IStorage\";\r\nimport { LocalStorage } from \"./localStorage\";\r\n//import * as data from \"./seed.json\";\r\n\r\nimport seed from \"./seed.json\";\r\n\r\nconst experiences: INewExperience[] = [\r\n    { name: \"Eat apple 🍏\", last: new Date(2018, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat avocado 🥑\", last: new Date(2016, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat banana 🍌\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat broccoli 🥦\", tag: \"vegetable\" },\r\n    { name: \"Eat carrot 🥕\", tag: \"vegetable\" },\r\n    { name: \"Eat cherries 🍒\", last: new Date(2017, 5, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat chili 🌶️\", tag: \"fruit\" },\r\n    { name: \"Eat cucumber 🥒\", last: new Date(2017, 6, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat corn 🌽\", last: new Date(2017, 6, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat coconut 🥥\", last: new Date(2017, 7, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat eggplant 🍆\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat garlic\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat grapes 🍇\", last: new Date(2017, 9, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat leafy green 🥬\", tag: \"fruit\" },\r\n    { name: \"Eat lemon 🍋\", tag: \"fruit\" },\r\n    { name: \"Eat kiwi 🥝\", last: new Date(2017, 10, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat mango 🥭\", last: new Date(2017, 11, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat melon 🍈\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat mushroom 🍄\", last: new Date(2017, 4, 3).getTime() },\r\n    { name: \"Eat onion\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat orange 🍊\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat peach 🍑\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat peanuts 🥜\", tag: \"fruit\" },\r\n    { name: \"Eat pear 🍐\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat pineapple 🍍\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat potato 🥔\", last: new Date(2018, 10, 1).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat tomato 🍅\", last: new Date(2018, 10, 1).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat strawberry 🍓\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat watermelon 🍉\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Get a massage 💆‍♂️💆‍♀️\", tag: \"activity\" },\r\n    { name: \"Bake a applepie 🥧🍪\", last: new Date(2018, 7, 13).getTime() },\r\n    { name: \"Basketball 🏀\", tag: \"activity\" },\r\n    { name: \"Bike 🚴\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Bowling 🎳\", last: null, tag: \"activity\" },\r\n    { name: \"Box 🥊\", last: null, tag: \"activity\" },\r\n    { name: \"Climb 🧗\", last: null, tag: \"activity\" },\r\n    { name: \"Cold shower 🥶🚿\", tag: \"activity\" },\r\n    { name: \"Dance 💃🕺\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Fasting 🍽\" },\r\n    { name: \"Football ⚽\", tag: \"activity\" },\r\n    { name: \"Guitar 🎸\", last: null, tag: \"activity\" },\r\n    { name: \"Ice bath 🥶🛀\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Ice skate ⛸️\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Meditate 🧘‍\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Read 📖\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Run 🏃\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Paint 🎨\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Play chess ♟️\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Play pool 🎱\", last: null, tag: \"activity\" },\r\n    { name: \"Sauna 🧖‍♂️🧖‍♀️\", tag: \"activity\" },\r\n    { name: \"Ski 🎿\", tag: \"activity\" },\r\n    { name: \"Swim 🏊\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Theatre 🎭\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Yoga 🧘\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Watch a movie 🎬\", last: null, tag: \"activity\" },\r\n    { name: \"Wrestle 🤼\", last: null, tag: \"activity\" },\r\n    { name: \"Cook pasta 🍝\", last: null },\r\n    { name: \"Beach 🏖\", last: null, tag: \"places\" },\r\n    { name: \"Botanical garden 🌿\", last: null, tag: \"places\" },\r\n    { name: \"Cemetery ⚱️\", last: null, tag: \"places\" },\r\n    { name: \"Museum 🖼\", last: null, tag: \"places\" },\r\n    { name: \"Park 🏞\", last: null, tag: \"places\" },\r\n];\r\n\r\nconst storage: IStorage = new LocalStorage();\r\nconst tags: string[] = [\"Activity\", \"Fruit\", \"Places\", \"Vegetable\"];\r\n\r\nReactDOM.render(<App seed={experiences} storage={storage} tags={tags} />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}