{"version":3,"sources":["components/TagList.tsx","components/AddExperienceDialog.js","components/EditExperienceDialog.js","components/ExperienceList.tsx","components/OptionsSheet.js","components/MaybeAgainCard.tsx","components/NeverCard.tsx","components/PwaInstaller.tsx","components/ShortcutsDialog.js","components/Toast.tsx","views/Home.tsx","views/Preferences.js","App.js","serviceWorker.js","localStorage.tsx","index.tsx"],"names":["TagList","props","handleClick","event","activeTag","currentTarget","innerText","toLowerCase","onClick","className","tags","map","tag","key","AddExperienceDialog","useState","name","setName","setTag","nameInput","React","handleClose","onClose","useEffect","current","focus","backdropClassName","isOpen","tabIndex","role","type","onSubmit","preventDefault","onAdd","htmlFor","id","value","onChange","target","ref","autoFocus","required","defaultProps","EditExperienceDialog","experience","last","setLast","onSave","parseInt","ExperienceList","compare","a","b","weekAgo","experiences","filter","x","moment","subtract","valueOf","sort","monthAgo","yearAgo","reverse","weekGroup","onEdit","monthGroup","yearGroup","length","ExperienceListGroup","Date","toLocaleDateString","dateTime","toISOString","title","toString","fromNow","BottomSheet","open","style","zIndex","children","MaybeAgainCard","timeAgo","NeverCard","PwaInstaller","deferredPrompt","showInstallPrompt","setShowInstallPrompt","beforeInstallPrompt","window","addEventListener","removeEventListener","prompt","userChoice","then","choiceResult","outcome","console","log","ShortcutsDialog","Toast","show","aria-live","aria-atomic","message","Home","myExperiences","activeId","setActiveId","activeExperience","setActiveExperience","setExperiences","maybeAgainCardExperience","setMaybeAgainCardExperience","neverCardExperience","setNeverCardExperience","setReverse","search","setSearch","showAddDialog","setShowDialog","showEditDialog","setShowEditDialog","showShortcutsDialog","setShowShortcutsDialog","showOptions","setShowOptions","showTags","setShowTags","showToast","setShowToast","toastMessage","setToastMessage","prefShowMaybeAgainCard","localStorage","getItem","prefShowNeverCard","showMaybeAgainCard","showNeverCard","timerId","handleAddExperienceButtonClick","prevState","i","getTime","clearTimeout","setTimeout","handleEditOpenClick","randomExperience","Math","floor","random","maybeExp","undefined","exp","includes","accessKey","placeholder","aria-label","parentElement","classList","toggle","onNavigation","find","uuid","Preferences","fileInput","preferences","setPreferences","handlePreferenceChanged","Object","assign","checked","setItem","accept","reader","FileReader","onloadend","result","JSON","parse","storage","add_many","e","alert","file","files","readAsText","hidden","document","getElementById","click","json","stringify","get","File","url","URL","createObjectURL","location","href","rel","App","seed","nav","setNav","handleNavigation","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","LocalStorage","this","item","push","data","Error","ReactDOM","process","origin","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.828f2ecd.chunk.js","sourcesContent":["import * as React from \"react\";\r\n\r\ninterface IProps {\r\n    activeTag: string;\r\n    tags: string[];\r\n    onClick(tag: string): void;\r\n}\r\n\r\nexport const TagList: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    function handleClick(event: React.MouseEvent<HTMLElement>): void {\r\n        let activeTag = event.currentTarget.innerText.toLowerCase();\r\n        if (activeTag === props.activeTag) {\r\n            activeTag = \"\";\r\n        }\r\n        props.onClick(activeTag);\r\n    }\r\n\r\n    return (\r\n        <ul className=\"list-inline\">\r\n            {props.tags.map(tag => {\r\n                let className = \"badge \";\r\n                className += (tag.toLowerCase() === props.activeTag ? \"badge-primary\" : \"badge-light\");\r\n                return <li className=\"list-inline-item\" key={tag}><span className={className} onClick={handleClick}>{tag}</span></li>;\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { TagList } from \"./TagList\";\r\nexport const AddExperienceDialog = (props) => {\r\n    const [name, setName] = useState(props.name);\r\n    const [tag, setTag] = useState(\"\");\r\n    const nameInput = React.createRef();\r\n    useEffect(() => {\r\n        if (nameInput.current) {\r\n            nameInput.current.focus();\r\n        }\r\n    });\r\n    function handleChange(event) {\r\n        setName(event.target.value);\r\n    }\r\n    function handleClose() {\r\n        props.onClose();\r\n    }\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        props.onAdd(name, tag);\r\n    }\r\n    let className = \"modal fade\";\r\n    let backdropClassName = \"fade\";\r\n    if (props.isOpen) {\r\n        className += \" d-block show\";\r\n        backdropClassName += \" modal-backdrop show\";\r\n    }\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"div\", { className: className, tabIndex: -1, role: \"dialog\" },\r\n            React.createElement(\"div\", { className: \"modal-dialog\", role: \"document\" },\r\n                React.createElement(\"div\", { className: \"modal-content\" },\r\n                    React.createElement(\"div\", { className: \"modal-header\" },\r\n                        React.createElement(\"h5\", { className: \"modal-title\" }, \"Add experience\"),\r\n                        React.createElement(\"button\", { type: \"button\", className: \"close\", \"data-dismiss\": \"modal\", \"aria-label\": \"Close\", onClick: handleClose },\r\n                            React.createElement(\"span\", { \"aria-hidden\": \"true\" }, \"\\u00D7\"))),\r\n                    React.createElement(\"form\", { onSubmit: handleSubmit },\r\n                        React.createElement(\"div\", { className: \"modal-body\" },\r\n                            React.createElement(\"div\", { className: \"form-group\" },\r\n                                React.createElement(\"label\", { htmlFor: \"name\" }, \"Title\"),\r\n                                React.createElement(\"input\", { className: \"form-control\", id: \"name\", type: \"text\", value: name, onChange: handleChange, ref: nameInput, autoFocus: true, required: true })),\r\n                            React.createElement(\"div\", { className: \"form-group\" },\r\n                                React.createElement(\"label\", null, \"Tag\"),\r\n                                React.createElement(TagList, { activeTag: tag, tags: props.tags, onClick: tag => setTag(tag) }))),\r\n                        React.createElement(\"div\", { className: \"modal-footer\" },\r\n                            React.createElement(\"button\", { type: \"button\", className: \"btn btn-secondary\", \"data-dismiss\": \"modal\", onClick: handleClose }, \"Close\"),\r\n                            React.createElement(\"button\", { type: \"submit\", className: \"btn btn-primary\" }, \"Add\")))))),\r\n        React.createElement(\"div\", { className: backdropClassName })));\r\n};\r\nAddExperienceDialog.defaultProps = {\r\n    name: \"\",\r\n};\r\n//# sourceMappingURL=AddExperienceDialog.js.map","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { TagList } from \"./TagList\";\r\nexport const EditExperienceDialog = (props) => {\r\n    const [name, setName] = useState(props.experience.name);\r\n    const [tag, setTag] = useState(props.experience.tag || \"\");\r\n    const [last, setLast] = useState(props.experience.last || 0);\r\n    const nameInput = React.createRef();\r\n    useEffect(() => {\r\n        if (nameInput.current) {\r\n            nameInput.current.focus();\r\n        }\r\n    });\r\n    function handleChange(event) {\r\n        setName(event.target.value);\r\n    }\r\n    function handleTimeChange(event) {\r\n        setLast(parseInt(event.target.value, 10));\r\n    }\r\n    function handleClose() {\r\n        props.onClose();\r\n    }\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        const experience = { id: \"\", name: name, tag: tag, last: last };\r\n        props.onSave(experience);\r\n    }\r\n    let className = \"modal fade\";\r\n    let backdropClassName = \"fade\";\r\n    if (props.isOpen) {\r\n        className += \" d-block show\";\r\n        backdropClassName += \" modal-backdrop show\";\r\n    }\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"div\", { className: className, tabIndex: -1, role: \"dialog\" },\r\n            React.createElement(\"div\", { className: \"modal-dialog\", role: \"document\" },\r\n                React.createElement(\"div\", { className: \"modal-content\" },\r\n                    React.createElement(\"div\", { className: \"modal-header\" },\r\n                        React.createElement(\"h5\", { className: \"modal-title\" }, \"Edit experience\"),\r\n                        React.createElement(\"button\", { type: \"button\", className: \"close\", \"data-dismiss\": \"modal\", \"aria-label\": \"Close\", onClick: handleClose },\r\n                            React.createElement(\"span\", { \"aria-hidden\": \"true\" }, \"\\u00D7\"))),\r\n                    React.createElement(\"form\", { onSubmit: handleSubmit },\r\n                        React.createElement(\"div\", { className: \"modal-body\" },\r\n                            React.createElement(\"div\", { className: \"form-group\" },\r\n                                React.createElement(\"label\", { htmlFor: \"name\" }, \"Title\"),\r\n                                React.createElement(\"input\", { className: \"form-control\", id: \"name\", type: \"text\", value: name, onChange: handleChange, ref: nameInput, autoFocus: true, required: true })),\r\n                            React.createElement(\"div\", { className: \"form-group\" },\r\n                                React.createElement(\"label\", null, \"Tag\"),\r\n                                React.createElement(TagList, { activeTag: tag, tags: props.tags, onClick: tag => setTag(tag) })),\r\n                            React.createElement(\"div\", { className: \"form-group\" },\r\n                                React.createElement(\"label\", { htmlFor: \"time\" }, \"Last\"),\r\n                                React.createElement(\"input\", { className: \"form-control\", id: \"time\", type: \"datetime-local\", value: last, onChange: handleTimeChange }))),\r\n                        React.createElement(\"div\", { className: \"modal-footer\" },\r\n                            React.createElement(\"button\", { type: \"button\", className: \"btn btn-secondary\", \"data-dismiss\": \"modal\", onClick: handleClose }, \"Close\"),\r\n                            React.createElement(\"button\", { type: \"submit\", className: \"btn btn-primary\" }, \"Save\")))))),\r\n        React.createElement(\"div\", { className: backdropClassName })));\r\n};\r\n//# sourceMappingURL=EditExperienceDialog.js.map","import * as React from \"react\";\r\nimport moment from \"moment\";\r\nimport { IExperience } from \"../IExperience\";\r\n\r\ninterface IProps {\r\n    experiences: IExperience[];\r\n    reverse?: boolean;\r\n    onClick(id: string): void;\r\n    onEdit(id: string): void;\r\n}\r\n\r\nexport const ExperienceList: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    function compare(a: IExperience, b: IExperience): number {\r\n        if (a.last == null || b.last == null) {\r\n            return 0;\r\n        }\r\n        if (a.last < b.last) {\r\n            return -1;\r\n        }\r\n        if (a.last > b.last) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    const weekAgo = props.experiences\r\n        .filter(x => x.last != null &&\r\n            x.last < moment().subtract(1, \"w\").valueOf() &&\r\n            x.last > moment().subtract(2, \"w\").valueOf()).sort(compare);\r\n\r\n    const monthAgo = props.experiences\r\n        .filter(x => x.last != null &&\r\n            x.last < moment().subtract(1, \"m\").valueOf() &&\r\n            x.last > moment().subtract(2, \"m\").valueOf()).sort(compare);\r\n\r\n    const yearAgo = props.experiences\r\n        .filter(x => x.last != null &&\r\n            x.last < moment().subtract(1, \"y\").valueOf() &&\r\n            x.last > moment().subtract(2, \"y\").valueOf()).sort(compare);\r\n\r\n    let experiences = props.experiences.sort(compare);\r\n    if (props.reverse) {\r\n        experiences = experiences.reverse();\r\n    }\r\n\r\n    const weekGroup = (\r\n        <React.Fragment>\r\n            <h2 className=\"h5\">A week ago</h2>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={weekAgo} />\r\n        </React.Fragment>);\r\n\r\n    const monthGroup = (\r\n        <React.Fragment>\r\n            <h2 className=\"h5\">A month ago</h2>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={monthAgo} />\r\n        </React.Fragment>);\r\n\r\n    const yearGroup = (\r\n        <React.Fragment>\r\n            <h2 className=\"h5\">A year ago</h2>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={yearAgo} />\r\n        </React.Fragment>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={experiences} />\r\n            {weekAgo.length > 0 && weekGroup}\r\n            {monthAgo.length > 0 && monthGroup}\r\n            {yearAgo.length > 0 && yearGroup}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\ninterface IExperienceListGroupProps {\r\n    experiences: IExperience[];\r\n    onClick(id: string): void;\r\n    onEdit(id: string): void;\r\n}\r\n\r\nconst ExperienceListGroup: React.FunctionComponent<IExperienceListGroupProps> = (props: IExperienceListGroupProps) => {\r\n    function last(experience: any): JSX.Element {\r\n        return (\r\n            <React.Fragment>\r\n                <div><small className=\"float-right text-muted\">{new Date(experience.last).toLocaleDateString(\"sv-se\")}</small></div>\r\n                <time className=\"d-block text-muted small\" dateTime={new Date(experience.last).toISOString()} title={experience.last.toString()}>{moment(experience.last).fromNow()}</time>\r\n            </React.Fragment>);\r\n    }\r\n\r\n    return (\r\n        <div className=\"list-group mb-3\">\r\n            {props.experiences.map(experience =>\r\n                <a className=\"list-group-item list-group-item-action\" key={experience.id} onClick={() => props.onClick(experience.id)}>\r\n                    {experience.name}\r\n                    {experience.last != null && last(experience)}\r\n                </a>\r\n            )}\r\n        </div>);\r\n};\r\n","import * as React from \"react\";\r\nexport const BottomSheet = (props) => {\r\n    let className = \"fixed-bottom fade\";\r\n    let backdropClassName = \"fade\";\r\n    if (props.open) {\r\n        className += \" d-block show\";\r\n        backdropClassName += \" modal-backdrop show\";\r\n    }\r\n    if (props.open) {\r\n        return (React.createElement(React.Fragment, null,\r\n            React.createElement(\"div\", { className: className, tabIndex: -1, role: \"dialog\", style: { zIndex: 2000 } }, props.children),\r\n            React.createElement(\"div\", { className: backdropClassName, onClick: props.onClose })));\r\n    }\r\n    return null;\r\n};\r\nexport const OptionsSheet = (props) => {\r\n    return (React.createElement(BottomSheet, { open: props.open, onClose: props.onClose },\r\n        React.createElement(\"div\", { className: \"list-group list-group-flush\" },\r\n            React.createElement(\"a\", { className: \"list-group-item list-group-item-action\", onClick: () => props.onDone(props.id) }, \"Mark as done\"),\r\n            React.createElement(\"a\", { className: \"list-group-item list-group-item-action\", onClick: () => props.onEdit(props.id) }, \"Edit\"),\r\n            React.createElement(\"a\", { className: \"list-group-item list-group-item-action\", onClick: () => props.onDelete(props.id) }, \"Delete\"))));\r\n};\r\n//# sourceMappingURL=OptionsSheet.js.map","import * as React from \"react\";\r\nimport moment from \"moment\";\r\nimport { IExperience } from \"../IExperience\";\r\n\r\ninterface IProps {\r\n    experience: IExperience;\r\n    onClick(id: string): void;\r\n}\r\n\r\nexport const MaybeAgainCard: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    const timeAgo = moment(props.experience.last || 0).fromNow();\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n                <small className=\"text-muted text-uppercase\">It was {timeAgo}, Maybe again…</small>\r\n                <div>{props.experience.name}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { IExperience } from \"../IExperience\";\r\n\r\ninterface IProps {\r\n    experience: IExperience;\r\n    onClick(id: string): void;\r\n}\r\n\r\nexport const NeverCard: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n                <small className=\"text-muted text-uppercase\">You have never…</small>\r\n                <div>{props.experience.name}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport const PwaInstaller: React.FunctionComponent = () => {\r\n    let deferredPrompt: any;\r\n    const [showInstallPrompt, setShowInstallPrompt] = useState(false);\r\n\r\n    function handleInstall(): void {\r\n        setShowInstallPrompt(false);\r\n        deferredPrompt.prompt();\r\n        deferredPrompt.userChoice.then((choiceResult: any) => {\r\n            if (choiceResult.outcome === \"accepted\") {\r\n                console.log(\"User accepted the A2HS prompt\");\r\n            } else {\r\n                console.log(\"User dismissed the A2HS prompt\");\r\n            }\r\n            deferredPrompt = null;\r\n        });\r\n    }\r\n\r\n    function beforeInstallPrompt(event: Event): void {\r\n        deferredPrompt = event;\r\n        setShowInstallPrompt(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"beforeinstallprompt\", beforeInstallPrompt);\r\n        return () => {\r\n            window.removeEventListener(\"beforeinstallprompt\", beforeInstallPrompt);\r\n        };\r\n    });\r\n\r\n    if (showInstallPrompt) {\r\n        return (\r\n            <button className=\"btn btn-outline-success mr-sm-2 d-none d-xl-block\" onClick={handleInstall} title=\"Install web application\">Install</button>\r\n        );\r\n    }\r\n\r\n    return null;\r\n};\r\n","import * as React from \"react\";\r\nexport const ShortcutsDialog = (props) => {\r\n    let className = \"modal fade\";\r\n    let backdropClassName = \"fade\";\r\n    if (props.isOpen) {\r\n        className += \" d-block show\";\r\n        backdropClassName += \" modal-backdrop show\";\r\n    }\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"div\", { className: className, tabIndex: -1, role: \"dialog\" },\r\n            React.createElement(\"div\", { className: \"modal-dialog\", role: \"document\" },\r\n                React.createElement(\"div\", { className: \"modal-content\" },\r\n                    React.createElement(\"div\", { className: \"modal-header\" },\r\n                        React.createElement(\"h5\", { className: \"modal-title\" }, \"Keyboard Shortcuts\"),\r\n                        React.createElement(\"button\", { type: \"button\", className: \"close\", \"data-dismiss\": \"modal\", \"aria-label\": \"Close\", onClick: props.onClose },\r\n                            React.createElement(\"span\", { \"aria-hidden\": \"true\" }, \"\\u00D7\"))),\r\n                    React.createElement(\"div\", { className: \"modal-body\" },\r\n                        React.createElement(\"div\", { className: \"container-fluid\" },\r\n                            React.createElement(\"div\", { className: \"row\" },\r\n                                React.createElement(\"div\", { className: \"col-6\" },\r\n                                    React.createElement(\"kbd\", null,\r\n                                        React.createElement(\"kbd\", null, \"Shift\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"Alt\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"N\"))),\r\n                                React.createElement(\"div\", { className: \"col-6\" }, \"Add new experience\"),\r\n                                React.createElement(\"div\", { className: \"col-6\" },\r\n                                    React.createElement(\"kbd\", null,\r\n                                        React.createElement(\"kbd\", null, \"Shift\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"Alt\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"S\"))),\r\n                                React.createElement(\"div\", { className: \"col-6\" }, \"Search\"),\r\n                                React.createElement(\"div\", { className: \"col-6\" },\r\n                                    React.createElement(\"kbd\", null,\r\n                                        React.createElement(\"kbd\", null, \"Shift\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"Alt\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"P\"))),\r\n                                React.createElement(\"div\", { className: \"col-6\" }, \"Preferences\"),\r\n                                React.createElement(\"div\", { className: \"col-6\" },\r\n                                    React.createElement(\"kbd\", null,\r\n                                        React.createElement(\"kbd\", null, \"Shift\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"Alt\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"R\"))),\r\n                                React.createElement(\"div\", { className: \"col-6\" }, \"Reverse sort\")))),\r\n                    React.createElement(\"div\", { className: \"modal-footer\" },\r\n                        React.createElement(\"button\", { type: \"button\", className: \"btn btn-secondary\", \"data-dismiss\": \"modal\", onClick: props.onClose }, \"Close\"))))),\r\n        React.createElement(\"div\", { className: backdropClassName })));\r\n};\r\n//# sourceMappingURL=ShortcutsDialog.js.map","import * as React from \"react\";\r\n\r\ninterface IProps {\r\n    message: string;\r\n    show: boolean;\r\n}\r\n\r\nexport const Toast: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    let className = \"toast fixed-bottom bg-dark text-white mx-auto mb-3 fade\";\r\n    if (props.show) {\r\n        className += \" show\";\r\n    }\r\n    return (\r\n        <div className={className} role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\r\n            <div className=\"toast-body\">\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport uuid from \"uuid/v4\";\r\nimport { AddExperienceDialog } from \"../components/AddExperienceDialog\";\r\nimport { EditExperienceDialog } from \"../components/EditExperienceDialog\";\r\nimport { IExperience } from \"../IExperience\";\r\nimport { ExperienceList } from \"../components/ExperienceList\";\r\nimport { BottomSheet } from \"../components/OptionsSheet\";\r\nimport { MaybeAgainCard } from \"../components/MaybeAgainCard\";\r\nimport { NeverCard } from \"../components/NeverCard\";\r\nimport { PwaInstaller } from \"../components/PwaInstaller\";\r\nimport { ShortcutsDialog } from \"../components/ShortcutsDialog\";\r\nimport { TagList } from \"../components/TagList\";\r\nimport { Toast } from \"../components/Toast\";\r\nimport \"./Home.css\";\r\n\r\ninterface IProps {\r\n    experiences: IExperience[];\r\n    tags: string[];\r\n    onNavigation(component: string): void;\r\n}\r\n\r\nexport const Home: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    const [activeId, setActiveId] = useState(\"\");\r\n    const [activeExperience, setActiveExperience] = useState<IExperience>();\r\n    //const [experiences, setExperiences] = useState(props.storage.get());\r\n    const [experiences, setExperiences] = useState(props.experiences);\r\n    const [maybeAgainCardExperience, setMaybeAgainCardExperience] = useState<IExperience | null>(null);\r\n    const [neverCardExperience, setNeverCardExperience] = useState<IExperience | null>(null);\r\n    const [reverse, setReverse] = useState(false);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [showAddDialog, setShowDialog] = useState(false);\r\n    const [showEditDialog, setShowEditDialog] = useState(false);\r\n    const [showShortcutsDialog, setShowShortcutsDialog] = useState(false);\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [showTags, setShowTags] = useState(false);\r\n    const [showToast, setShowToast] = useState(false);\r\n    const [tag, setTag] = useState(\"\");\r\n    const [toastMessage, setToastMessage] = useState(\"\");\r\n\r\n    const prefShowMaybeAgainCard = localStorage.getItem(\"showMaybeAgainCard\") || \"false\";\r\n    const prefShowNeverCard = localStorage.getItem(\"showNeverCard\") || \"true\";\r\n\r\n    const [showMaybeAgainCard] = useState(prefShowMaybeAgainCard === \"true\");\r\n    const [showNeverCard] = useState(prefShowNeverCard === \"true\");\r\n\r\n    let timerId: number = 0;\r\n\r\n    useEffect(() => {\r\n        if (props.experiences.length !== 0) {\r\n            const maybeExp = randomExperience(props.experiences.filter(x => x.last !== null && x.last !== undefined));\r\n            setMaybeAgainCardExperience(maybeExp);\r\n            const exp = randomExperience(props.experiences.filter(x => x.last === null));\r\n            setNeverCardExperience(exp);\r\n        }\r\n    }, []);\r\n\r\n    function handleAddExperience(name: string, tag: string): void {\r\n        setShowDialog(false);\r\n        const experience: IExperience = {\r\n            id: uuid(),\r\n            name,\r\n            tag,\r\n        };\r\n        setExperiences((prevState: IExperience[]) => [...prevState, experience]);\r\n    }\r\n\r\n    function handleAddExperienceButtonClick(): void {\r\n        setShowDialog(true);\r\n    }\r\n\r\n    function handleClick(key: string): void {\r\n        setShowOptions(false);\r\n        setExperiences((prevState: IExperience[]) => prevState.map(i => i.id === key ? { ...i, last: new Date().getTime() } : i));\r\n        setToastMessage(\"Marked as done\");\r\n        setShowToast(true);\r\n        window.clearTimeout(timerId);\r\n        timerId = window.setTimeout(() => {\r\n            setShowToast(false);\r\n        }, 1500);\r\n    }\r\n\r\n    function handleDelete(key: string): void {\r\n        setShowOptions(false);\r\n        setToastMessage(\"Removed\");\r\n        setShowToast(true);\r\n        window.clearTimeout(timerId);\r\n        timerId = window.setTimeout(() => {\r\n            setShowToast(false);\r\n        }, 1500);\r\n    }\r\n\r\n    function handleOpenOptions(id: string): void {\r\n        setActiveId(id);\r\n        const exp = experiences.find(x => x.id === id);\r\n        setActiveExperience(exp);\r\n        setShowOptions(true);\r\n    }\r\n\r\n    function handleCloseOptions(): void {\r\n        setShowOptions(false);\r\n    }\r\n\r\n    function handleEditOpenClick(tag: string): void {\r\n        setShowOptions(false);\r\n        setShowEditDialog(true);  \r\n    }\r\n\r\n    function handleEditSaveClick(experience: IExperience): void {\r\n        setShowEditDialog(false);\r\n    }\r\n\r\n    function handleChange(event: React.FormEvent<HTMLInputElement>): void {\r\n        setSearch(event.currentTarget.value);\r\n    }\r\n\r\n    function handleDropdownClick(event: any): void {\r\n        event.target.parentElement.classList.toggle(\"dropup\");\r\n        setShowTags((prevState: boolean) => !prevState);\r\n    }\r\n\r\n    function handleSort(): void {\r\n        setReverse((prevState: boolean) => !prevState);\r\n    }\r\n\r\n    function handleTagClick(tag: string): void {\r\n        setTag(tag);\r\n    }\r\n\r\n    function handleClose(): void {\r\n        setShowDialog(false);\r\n        setShowEditDialog(false);\r\n    }\r\n\r\n    function randomExperience(experiences: IExperience[]): IExperience {\r\n        return experiences[Math.floor(Math.random() * experiences.length)];\r\n    }\r\n\r\n    let myExperiences: IExperience[];\r\n    if (search !== \"\" || tag !== \"\") {\r\n        myExperiences = experiences.filter(x => x.name.toLowerCase().includes(search.toLowerCase()));\r\n        if (tag !== \"\") {\r\n            myExperiences = myExperiences.filter(x => x.tag != null && x.tag.includes(tag));\r\n        }\r\n    } else {\r\n        myExperiences = experiences.filter(x => x.last != null);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <header className=\"bg-white fixed-top shadow-sm\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-white\">\r\n                    <span className=\"navbar-brand d-none d-xl-block\">Cocoberry</span>\r\n                    <div className=\"form-inline mr-auto\">\r\n                        <div className=\"input-group\">\r\n                            <input className=\"form-control\" type=\"search\" accessKey=\"s\" placeholder=\"Search…\" title=\"Search\" onChange={handleChange} aria-label=\"Search\" />\r\n                            <div className=\"input-group-append mr-sm-2\">\r\n                                <button className=\"btn btn-outline-success dropdown-toggle\" type=\"button\" onClick={handleDropdownClick} aria-label=\"Show tags\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {PwaInstaller}\r\n                    <button className=\"btn btn-outline-success mr-sm-2 d-none d-xl-block\" accessKey=\"?\" onClick={() => setShowShortcutsDialog(true)} title=\"Shortcuts\">K</button>\r\n                    <button className=\"btn btn-outline-success mr-sm-2 d-none d-xl-block\" accessKey=\"r\" onClick={handleSort} title=\"Sort\">▲</button>\r\n                    <button className=\"btn btn-outline-success mr-sm-2\" accessKey=\"n\" onClick={handleAddExperienceButtonClick} title=\"Add new experience\">+</button>\r\n                    <button className=\"btn btn-outline-success\" accessKey=\"p\" onClick={() => props.onNavigation(\"Preferences\")}>☰</button>\r\n                </nav>\r\n                {showTags &&\r\n                    <div className=\"container\">\r\n                        <TagList activeTag={tag} tags={props.tags} onClick={handleTagClick} />\r\n                    </div>\r\n                }\r\n            </header>\r\n            <main className=\"App container\">\r\n                {showMaybeAgainCard && search === \"\" && tag === \"\" && maybeAgainCardExperience &&\r\n                    <MaybeAgainCard experience={maybeAgainCardExperience} onClick={handleEditOpenClick} />\r\n                }\r\n                {showNeverCard && search === \"\" && tag === \"\" && neverCardExperience &&\r\n                    <NeverCard experience={neverCardExperience} onClick={handleEditOpenClick} />\r\n                }\r\n                <ExperienceList experiences={myExperiences} reverse={reverse} onClick={handleOpenOptions} onEdit={handleEditOpenClick} />\r\n                {search !== \"\" && myExperiences.length === 0 &&\r\n                    <React.Fragment>\r\n                        <p>There are no matched experiences.</p>\r\n                        <button className=\"btn btn-outline-secondary\" onClick={handleAddExperienceButtonClick}>Add new experience</button>\r\n                    </React.Fragment>\r\n                }\r\n            </main>\r\n            <AddExperienceDialog name={search} isOpen={showAddDialog} tags={props.tags} onAdd={handleAddExperience} onClose={handleClose} />\r\n            {showEditDialog && activeExperience &&\r\n                <EditExperienceDialog experience={activeExperience} isOpen={showEditDialog} tags={props.tags} onSave={handleEditSaveClick} onClose={handleClose} />\r\n            }\r\n            <ShortcutsDialog isOpen={showShortcutsDialog} onClose={() => setShowShortcutsDialog(false)} />\r\n            <BottomSheet open={showOptions} onClose={handleCloseOptions}>\r\n                <div className=\"list-group list-group-flush\">\r\n                    <a className=\"list-group-item list-group-item-action\" onClick={() => handleClick(activeId)}>Mark as done</a>\r\n                    <a className=\"list-group-item list-group-item-action\" onClick={() => handleEditOpenClick(activeId)}>Edit</a>\r\n                    <a className=\"list-group-item list-group-item-action\" onClick={() => handleDelete(activeId)}>Delete</a>\r\n                </div>\r\n            </BottomSheet>\r\n            <Toast message={toastMessage} show={showToast} />\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nexport const Preferences = (props) => {\r\n    const fileInput = React.createRef();\r\n    const prefShowMaybeAgainCard = localStorage.getItem(\"showMaybeAgainCard\") || \"false\";\r\n    const prefShowNeverCard = localStorage.getItem(\"showNeverCard\") || \"true\";\r\n    const [preferences, setPreferences] = useState({\r\n        showMaybeAgainCard: prefShowMaybeAgainCard === \"true\",\r\n        showNeverCard: prefShowNeverCard === \"true\",\r\n    });\r\n    function handleExport() {\r\n        const json = JSON.stringify(props.storage.get());\r\n        const file = new File([json], \"cocoberry.json\", { type: \"octet/stream\" });\r\n        const url = window.URL.createObjectURL(file);\r\n        window.location.assign(url);\r\n    }\r\n    function handleBrowse() {\r\n        const elem = document.getElementById(\"file\");\r\n        const input = elem;\r\n        input.click();\r\n    }\r\n    function handleImport() {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n            if (typeof reader.result === \"string\") {\r\n                try {\r\n                    const experiences = JSON.parse(reader.result);\r\n                    //props.onImport(experiences);\r\n                    props.storage.add_many(experiences);\r\n                }\r\n                catch (e) {\r\n                    alert(e);\r\n                }\r\n            }\r\n        };\r\n        const file = fileInput.current.files[0];\r\n        reader.readAsText(file);\r\n    }\r\n    function handlePreferenceChanged(event) {\r\n        const currentTarget = event.currentTarget;\r\n        setPreferences((prevState) => {\r\n            const preferences = Object.assign({}, prevState);\r\n            preferences[currentTarget.id] = currentTarget.checked;\r\n            return preferences;\r\n        });\r\n        localStorage.setItem(currentTarget.id, currentTarget.checked.toString());\r\n    }\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"header\", { className: \"fixed-top shadow-sm\" },\r\n            React.createElement(\"nav\", { className: \"navbar navbar-expand-lg navbar-light bg-white\" },\r\n                React.createElement(\"button\", { className: \"btn btn-outline-success\", accessKey: \"b\", onClick: () => props.onNavigation(\"\") }, \"Back\"))),\r\n        React.createElement(\"main\", { className: \"App container\" },\r\n            React.createElement(\"div\", { className: \"list-group mb-3\" },\r\n                React.createElement(\"div\", { className: \"list-group-item\" },\r\n                    React.createElement(\"div\", { className: \"custom-control custom-switch\" },\r\n                        React.createElement(\"input\", { className: \"custom-control-input\", id: \"showMaybeAgainCard\", type: \"checkbox\", checked: preferences.showMaybeAgainCard, onChange: handlePreferenceChanged }),\r\n                        React.createElement(\"label\", { className: \"custom-control-label\", htmlFor: \"showMaybeAgainCard\" }, \"Show the maybe-again card\"))),\r\n                React.createElement(\"div\", { className: \"list-group-item\" },\r\n                    React.createElement(\"div\", { className: \"custom-control custom-switch\" },\r\n                        React.createElement(\"input\", { className: \"custom-control-input\", id: \"showNeverCard\", type: \"checkbox\", checked: preferences.showNeverCard, onChange: handlePreferenceChanged }),\r\n                        React.createElement(\"label\", { className: \"custom-control-label\", htmlFor: \"showNeverCard\" }, \"Show the you-have-never card\")))),\r\n            React.createElement(\"div\", { className: \"card\" },\r\n                React.createElement(\"div\", { className: \"card-body\" },\r\n                    React.createElement(\"h5\", { className: \"card-title\" }, \"Export and import experiences\"),\r\n                    React.createElement(\"p\", { className: \"card-text\" }, \"Your experiences can be imported and exported. They are stored in the JSON format.\"),\r\n                    React.createElement(\"input\", { className: \"form-control-file\", id: \"file\", type: \"file\", accept: \"application/json\", onChange: handleImport, ref: fileInput, hidden: true, required: true })),\r\n                React.createElement(\"div\", { className: \"list-group list-group-flush\" },\r\n                    React.createElement(\"button\", { className: \"list-group-item list-group-item-action\", type: \"button\", accessKey: \"i\", onClick: handleBrowse }, \"Import from file\"),\r\n                    React.createElement(\"button\", { className: \"list-group-item list-group-item-action\", type: \"button\", accessKey: \"e\", onClick: handleExport }, \"Export to file\")))),\r\n        React.createElement(\"footer\", { className: \"container mt-3\" },\r\n            React.createElement(\"p\", null,\r\n                React.createElement(\"a\", { href: \"https://github.com/vanillajonathan/cocoberry\", rel: \"noopener\", target: \"_blank\" }, \"Cocoberry on GitHub\")),\r\n            React.createElement(\"p\", null, \"Built with \\u2764 by Jonathan\"))));\r\n};\r\n//# sourceMappingURL=Preferences.js.map","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Home } from \"./views/Home\";\r\nimport { Preferences } from \"./views/Preferences\";\r\nconst App = (props) => {\r\n    const experiences = props.storage.get();\r\n    if (experiences.length === 0) {\r\n        props.storage.add_many(props.seed);\r\n    }\r\n    const [nav, setNav] = useState(\"\");\r\n    function handleNavigation(component) {\r\n        setNav(component);\r\n    }\r\n    if (nav === \"Preferences\") {\r\n        return (React.createElement(Preferences, { storage: props.storage, onNavigation: handleNavigation }));\r\n    }\r\n    return (React.createElement(Home, { experiences: props.storage.get(), onNavigation: handleNavigation, tags: props.tags }));\r\n};\r\nApp.defaultProps = {\r\n    seed: [],\r\n    tags: [],\r\n};\r\nexport default App;\r\n//# sourceMappingURL=App.js.map","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log('This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA');\r\n                });\r\n            }\r\n            else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n        registration.onupdatefound = () => {\r\n            const installingWorker = registration.installing;\r\n            if (installingWorker == null) {\r\n                return;\r\n            }\r\n            installingWorker.onstatechange = () => {\r\n                if (installingWorker.state === 'installed') {\r\n                    if (navigator.serviceWorker.controller) {\r\n                        // At this point, the updated precached content has been fetched,\r\n                        // but the previous service worker will still serve the older\r\n                        // content until all client tabs are closed.\r\n                        console.log('New content is available and will be used when all ' +\r\n                            'tabs for this page are closed. See https://bit.ly/CRA-PWA.');\r\n                        // Execute callback\r\n                        if (config && config.onUpdate) {\r\n                            config.onUpdate(registration);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // At this point, everything has been precached.\r\n                        // It's the perfect time to display a\r\n                        // \"Content is cached for offline use.\" message.\r\n                        console.log('Content is cached for offline use.');\r\n                        // Execute callback\r\n                        if (config && config.onSuccess) {\r\n                            config.onSuccess(registration);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        };\r\n    })\r\n        .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (response.status === 404 ||\r\n            (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n            // No service worker found. Probably a different app. Reload the page.\r\n            navigator.serviceWorker.ready.then(registration => {\r\n                registration.unregister().then(() => {\r\n                    window.location.reload();\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            // Service worker found. Proceed as normal.\r\n            registerValidSW(swUrl, config);\r\n        }\r\n    })\r\n        .catch(() => {\r\n        console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=serviceWorker.js.map","import uuid from \"uuid/v4\";\r\nimport { IStorage, INewExperience } from \"./IStorage\";\r\nimport { IExperience } from \"./IExperience\";\r\n\r\nexport class LocalStorage implements IStorage {\r\n    public add(experience: INewExperience): void {\r\n        const experiences = this.get();\r\n        const item: IExperience = {\r\n            id: uuid(),\r\n            last: experience.last,\r\n            name: experience.name,\r\n            tag: experience.tag,\r\n        };\r\n        experiences.push(item);\r\n        localStorage.setItem(\"experiences\", JSON.stringify(experiences));\r\n    }\r\n\r\n    public add_many(experiences: INewExperience[]): void {\r\n        const data = this.get();\r\n        for (const experience of experiences) {\r\n            const item: IExperience = {\r\n                id: uuid(),\r\n                last: experience.last,\r\n                name: experience.name,\r\n                tag: experience.tag,\r\n            };\r\n            data.push(item);\r\n        }\r\n        localStorage.setItem(\"experiences\", JSON.stringify(data));\r\n    }\r\n\r\n    public delete(id: string): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    public get(): IExperience[] {\r\n        const experiences = localStorage.getItem(\"experiences\");\r\n        if (experiences === null) {\r\n            return [];\r\n        }\r\n        return JSON.parse(experiences);\r\n    }\r\n\r\n    public update(experience: IExperience): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { IStorage, INewExperience } from \"./IStorage\";\r\nimport { LocalStorage } from \"./localStorage\";\r\n//import * as data from \"./seed.json\";\r\n\r\nimport seed from \"./seed.json\";\r\n\r\nconst experiences: INewExperience[] = [\r\n    { name: \"Eat apple 🍏\", last: new Date(2018, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat avocado 🥑\", last: new Date(2016, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat banana 🍌\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat broccoli 🥦\", tag: \"vegetable\" },\r\n    { name: \"Eat carrot 🥕\", tag: \"vegetable\" },\r\n    { name: \"Eat cherries 🍒\", last: new Date(2017, 5, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat chili 🌶️\", tag: \"fruit\" },\r\n    { name: \"Eat cucumber 🥒\", last: new Date(2017, 6, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat corn 🌽\", last: new Date(2017, 6, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat coconut 🥥\", last: new Date(2017, 7, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat eggplant 🍆\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat garlic\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat grapes 🍇\", last: new Date(2017, 9, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat leafy green 🥬\", tag: \"fruit\" },\r\n    { name: \"Eat lemon 🍋\", tag: \"fruit\" },\r\n    { name: \"Eat kiwi 🥝\", last: new Date(2017, 10, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat mango 🥭\", last: new Date(2017, 11, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat melon 🍈\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat mushroom 🍄\", last: new Date(2017, 4, 3).getTime() },\r\n    { name: \"Eat onion\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat orange 🍊\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat peach 🍑\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat peanuts 🥜\", tag: \"fruit\" },\r\n    { name: \"Eat pear 🍐\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat pineapple 🍍\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat potato 🥔\", last: new Date(2018, 10, 1).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat tomato 🍅\", last: new Date(2018, 10, 1).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat strawberry 🍓\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat watermelon 🍉\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Get a massage 💆‍♂️💆‍♀️\", tag: \"activity\" },\r\n    { name: \"Bake a applepie 🥧🍪\", last: new Date(2018, 7, 13).getTime() },\r\n    { name: \"Basketball 🏀\", tag: \"activity\" },\r\n    { name: \"Bike 🚴\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Bowling 🎳\", last: null, tag: \"activity\" },\r\n    { name: \"Box 🥊\", last: null, tag: \"activity\" },\r\n    { name: \"Climb 🧗\", last: null, tag: \"activity\" },\r\n    { name: \"Cold shower 🥶🚿\", tag: \"activity\" },\r\n    { name: \"Dance 💃🕺\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Fasting 🍽\" },\r\n    { name: \"Football ⚽\", tag: \"activity\" },\r\n    { name: \"Guitar 🎸\", last: null, tag: \"activity\" },\r\n    { name: \"Ice bath 🥶🛀\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Ice skate ⛸️\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Meditate 🧘‍\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Read 📖\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Run 🏃\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Paint 🎨\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Play chess ♟️\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Play pool 🎱\", last: null, tag: \"activity\" },\r\n    { name: \"Sauna 🧖‍♂️🧖‍♀️\", tag: \"activity\" },\r\n    { name: \"Ski 🎿\", tag: \"activity\" },\r\n    { name: \"Swim 🏊\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Theatre 🎭\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Yoga 🧘\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Watch a movie 🎬\", last: null, tag: \"activity\" },\r\n    { name: \"Volleyball 🏐\", last: null, tag: \"activity\" },\r\n    { name: \"Wrestle 🤼\", last: null, tag: \"activity\" },\r\n    { name: \"Cook pasta 🍝\", last: null },\r\n    { name: \"Beach 🏖\", last: null, tag: \"places\" },\r\n    { name: \"Botanical garden 🌿\", last: null, tag: \"places\" },\r\n    { name: \"Cemetery ⚱️\", last: null, tag: \"places\" },\r\n    { name: \"Museum 🖼\", last: null, tag: \"places\" },\r\n    { name: \"Park 🏞\", last: null, tag: \"places\" },\r\n];\r\n\r\nconst storage: IStorage = new LocalStorage();\r\nconst tags: string[] = [\"Activity\", \"Fruit\", \"Places\", \"Vegetable\"];\r\n\r\nReactDOM.render(<App seed={experiences} storage={storage} tags={tags} />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}