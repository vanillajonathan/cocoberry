{"version":3,"sources":["../TagList.tsx","../AddExperienceDialog.tsx","../EditExperienceDialog.tsx","components/ExperienceList.tsx","../OptionsSheet.tsx","components/MaybeAgainCard.tsx","../NeverCard.tsx","../Home.tsx","../Preferences.tsx","../Toast.tsx","App.tsx","../serviceWorker.ts","localStorage.tsx","index.tsx"],"names":["TagList_TagList","props","handleClick","event","activeTag","currentTarget","innerText","toLowerCase","onClick","react","className","tags","map","tag","key","AddExperienceDialog_AddExperienceDialog","_useState","Object","name","_useState2","slicedToArray","setName","_useState3","_useState4","setTag","nameInput","handleClose","onClose","current","focus","backdropClassName","isOpen","tabIndex","role","type","data-dismiss","aria-label","aria-hidden","onSubmit","preventDefault","onAdd","htmlFor","id","value","onChange","target","ref","autoFocus","required","defaultProps","EditExperienceDialog_EditExperienceDialog","_useState5","_useState6","last","setLast","experience","onSave","parseInt","ExperienceList","compare","a","b","weekAgo","experiences","filter","x","moment","subtract","valueOf","sort","monthAgo","yearAgo","weekGroup","ExperienceList_ExperienceListGroup","onEdit","monthGroup","yearGroup","length","ExperienceListGroup","Date","toLocaleDateString","dateTime","toISOString","title","toString","fromNow","OptionsSheet_BottomSheet","show","style","zIndex","children","OptionsSheet_OptionsSheet","onDone","onDelete","MaybeAgainCard","timeAgo","NeverCard_NeverCard","Home_Home","activeId","maybeAgainCardExperience","setMaybeAgainCardExperience","neverCardExperience","setNeverCardExperience","_useState7","_useState8","search","setSearch","_useState9","_useState10","showDialog","setShowDialog","_useState11","_useState12","showEditDialog","setShowEditDialog","_useState13","_useState14","showOptions","setShowOptions","_useState15","_useState16","showTags","setShowTags","_useState17","_useState18","handleAddExperienceButtonClick","handleCloseOptions","handleEditOpenClick","randomExperience","Math","floor","random","maybeExp","undefined","exp","includes","accessKey","placeholder","parentElement","classList","toggle","prevState","onNavigation","showMaybeAgainCard","MaybeAgainCard_MaybeAgainCard","showNeverCard","ExperienceList_ExperienceList","onAddExperience","Preferences_Preferences","fileInput","handlePreferenceChanged","preferences","assign","checked","accept","reader","FileReader","onloadend","result","JSON","parse","onImport","e","alert","file","files","readAsText","hidden","document","getElementById","click","json","stringify","export","File","url","window","URL","createObjectURL","location","href","rel","Toast_Toast","aria-live","aria-atomic","App","storage","get","add_many","seed","useState","setExperiences","nav","setNav","setPreferences","showToast","setShowToast","timerId","handleNavigation","component","uuid","concat","toConsumableArray","i","objectSpread","getTime","clearTimeout","setTimeout","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","LocalStorage","classCallCheck","this","createClass","item","push","localStorage","setItem","data","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","Error","getItem","ReactDOM","src_App","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"wNAQaA,EAA2C,SAACC,GACrD,SAASC,EAAYC,GACjB,IAAIC,EAAYD,EAAME,cAAcC,UAAUC,cAC1CH,IAAcH,EAAMG,YACpBA,EAAY,IAEhBH,EAAMO,QAAQJ,GAGlB,OACIK,EAAA,oBAAIC,UAAU,eACTT,EAAMU,KAAKC,IAAI,SAAAC,GACZ,IAAIH,EAAY,SAEhB,OADAA,GAAcG,EAAIN,gBAAkBN,EAAMG,UAAY,gBAAkB,cACjEK,EAAA,oBAAIC,UAAU,mBAAmBI,IAAKD,GAAKJ,EAAA,sBAAMC,UAAWA,EAAWF,QAASN,GAAcW,QCVxGE,EAAuD,SAACd,GAAiB,IAAAe,EAC1DC,OAAAR,EAAA,SAAAQ,CAAShB,EAAMiB,MAD2CC,EAAAF,OAAAG,EAAA,EAAAH,CAAAD,EAAA,GAC3EE,EAD2EC,EAAA,GACrEE,EADqEF,EAAA,GAAAG,EAE5DL,OAAAR,EAAA,SAAAQ,CAAS,IAFmDM,EAAAN,OAAAG,EAAA,EAAAH,CAAAK,EAAA,GAE3ET,EAF2EU,EAAA,GAEtEC,EAFsED,EAAA,GAG5EE,EAAYhB,EAAA,YAYlB,SAASiB,IACLzB,EAAM0B,UAXVV,OAAAR,EAAA,UAAAQ,CAAU,WACFQ,EAAUG,SACVH,EAAUG,QAAQC,UAiB1B,IAAInB,EAAY,aACZoB,EAAoB,OAMxB,OALI7B,EAAM8B,SACNrB,GAAa,gBACboB,GAAqB,wBAIrBrB,EAAA,cAACA,EAAA,SAAc,KACXA,EAAA,qBAAKC,UAAWA,EAAWsB,UAAW,EAAGC,KAAK,UAC1CxB,EAAA,qBAAKC,UAAU,eAAeuB,KAAK,YAC/BxB,EAAA,qBAAKC,UAAU,iBACXD,EAAA,qBAAKC,UAAU,gBACXD,EAAA,oBAAIC,UAAU,eAAa,kBAC3BD,EAAA,wBAAQyB,KAAK,SAASxB,UAAU,QAAOyB,eAAc,QAAOC,aAAY,QAAQ5B,QAASkB,GACrFjB,EAAA,sBAAA4B,cAAkB,QAAM,UAGhC5B,EAAA,sBAAM6B,SAvB1B,SAAsBnC,GAClBA,EAAMoC,iBACNtC,EAAMuC,MAAMtB,EAAML,KAsBEJ,EAAA,qBAAKC,UAAU,cACXD,EAAA,qBAAKC,UAAU,cACXD,EAAA,uBAAOgC,QAAQ,QAAM,SACrBhC,EAAA,uBAAOC,UAAU,eAAegC,GAAG,OAAOR,KAAK,OAAOS,MAAOzB,EAAM0B,SAnCnG,SAAsBzC,GAClBkB,EAAQlB,EAAM0C,OAAOF,QAkCkGG,IAAKrB,EAAWsB,WAAS,EAACC,UAAQ,KAEjIvC,EAAA,qBAAKC,UAAU,cACXD,EAAA,kCACAA,EAAA,cAACT,EAAO,CACJI,UAAWS,EACXF,KAAMV,EAAMU,KACZH,QAAS,SAAAK,GAAG,OAAIW,EAAOX,QAInCJ,EAAA,qBAAKC,UAAU,gBACXD,EAAA,wBAAQyB,KAAK,SAASxB,UAAU,oBAAmByB,eAAc,QAAQ3B,QAASkB,GAAW,SAC7FjB,EAAA,wBAAQyB,KAAK,SAASxB,UAAU,mBAAiB,YAMrED,EAAA,qBAAKC,UAAWoB,MAK5Bf,EAAoBkC,aAAe,CAC/B/B,KAAM,ICtEH,IAAMgC,EAAwD,SAACjD,GAAiB,IAAAe,EAC3DC,OAAAR,EAAA,SAAAQ,CAAShB,EAAMiB,MAD4CC,EAAAF,OAAAG,EAAA,EAAAH,CAAAD,EAAA,GAC5EE,EAD4EC,EAAA,GACtEE,EADsEF,EAAA,GAAAG,EAE7DL,OAAAR,EAAA,SAAAQ,CAAS,IAFoDM,EAAAN,OAAAG,EAAA,EAAAH,CAAAK,EAAA,GAE5ET,EAF4EU,EAAA,GAEvEC,EAFuED,EAAA,GAAA4B,EAG3DlC,OAAAR,EAAA,SAAAQ,CAAS,GAHkDmC,EAAAnC,OAAAG,EAAA,EAAAH,CAAAkC,EAAA,GAG5EE,EAH4ED,EAAA,GAGtEE,EAHsEF,EAAA,GAI7E3B,EAAYhB,EAAA,YAgBlB,SAASiB,IACLzB,EAAM0B,UAfVV,OAAAR,EAAA,UAAAQ,CAAU,WACFQ,EAAUG,SACVH,EAAUG,QAAQC,UAsB1B,IAAInB,EAAY,aACZoB,EAAoB,OAMxB,OALI7B,EAAM8B,SACNrB,GAAa,gBACboB,GAAqB,wBAIrBrB,EAAA,cAACA,EAAA,SAAc,KACXA,EAAA,qBAAKC,UAAWA,EAAWsB,UAAW,EAAGC,KAAK,UAC1CxB,EAAA,qBAAKC,UAAU,eAAeuB,KAAK,YAC/BxB,EAAA,qBAAKC,UAAU,iBACXD,EAAA,qBAAKC,UAAU,gBACXD,EAAA,oBAAIC,UAAU,eAAa,mBAC3BD,EAAA,wBAAQyB,KAAK,SAASxB,UAAU,QAAOyB,eAAc,QAAOC,aAAY,QAAQ5B,QAASkB,GACrFjB,EAAA,sBAAA4B,cAAkB,QAAM,UAGhC5B,EAAA,sBAAM6B,SAxB1B,SAAsBnC,GAClBA,EAAMoC,iBACN,IAAMgB,EAA0B,CAAEb,GAAI,GAAIxB,KAAMA,EAAML,IAAKA,EAAKwC,KAAMA,GACtEpD,EAAMuD,OAAOD,KAsBO9C,EAAA,qBAAKC,UAAU,cACXD,EAAA,qBAAKC,UAAU,cACXD,EAAA,uBAAOgC,QAAQ,QAAM,SACrBhC,EAAA,uBAAOC,UAAU,eAAegC,GAAG,OAAOR,KAAK,OAAOS,MAAOzB,EAAM0B,SAxCnG,SAAsBzC,GAClBkB,EAAQlB,EAAM0C,OAAOF,QAuCkGG,IAAKrB,EAAWsB,WAAS,EAACC,UAAQ,KAEjIvC,EAAA,qBAAKC,UAAU,cACXD,EAAA,kCACAA,EAAA,cAACT,EAAO,CAACI,UAAWS,EAAKF,KAAMV,EAAMU,KAAMH,QAAS,SAAAK,GAAG,OAAIW,EAAOX,OAEtEJ,EAAA,qBAAKC,UAAU,cACXD,EAAA,uBAAOgC,QAAQ,QAAM,QACrBhC,EAAA,uBAAOC,UAAU,eAAegC,GAAG,OAAOR,KAAK,iBAAiBU,SA5ChG,SAA0BzC,GACtBmD,EAAQG,SAAStD,EAAM0C,OAAOF,MAAO,UA8CjBlC,EAAA,qBAAKC,UAAU,gBACXD,EAAA,wBAAQyB,KAAK,SAASxB,UAAU,oBAAmByB,eAAc,QAAQ3B,QAASkB,GAAW,SAC7FjB,EAAA,wBAAQyB,KAAK,SAASxB,UAAU,mBAAiB,aAMrED,EAAA,qBAAKC,UAAWoB,MAK5BoB,EAAqBD,aAAe,CAChC/B,KAAM,wBChFGwC,EAAkD,SAACzD,GAC5D,SAAS0D,EAAQC,EAAgBC,GAC7B,OAAc,MAAVD,EAAEP,MAA0B,MAAVQ,EAAER,KACb,EAEPO,EAAEP,KAAOQ,EAAER,MACH,EAERO,EAAEP,KAAOQ,EAAER,KACJ,EAEJ,EAGX,IAAMS,EAAU7D,EAAM8D,YACjBC,OAAO,SAAAC,GAAC,OAAc,MAAVA,EAAEZ,MACXY,EAAEZ,KAAOa,MAASC,SAAS,EAAG,KAAKC,WACnCH,EAAEZ,KAAOa,MAASC,SAAS,EAAG,KAAKC,YAAWC,KAAKV,GAErDW,EAAWrE,EAAM8D,YAClBC,OAAO,SAAAC,GAAC,OAAc,MAAVA,EAAEZ,MACXY,EAAEZ,KAAOa,MAASC,SAAS,EAAG,KAAKC,WACnCH,EAAEZ,KAAOa,MAASC,SAAS,EAAG,KAAKC,YAAWC,KAAKV,GAErDY,EAAUtE,EAAM8D,YACjBC,OAAO,SAAAC,GAAC,OAAc,MAAVA,EAAEZ,MACXY,EAAEZ,KAAOa,MAASC,SAAS,EAAG,KAAKC,WACnCH,EAAEZ,KAAOa,MAASC,SAAS,EAAG,KAAKC,YAAWC,KAAKV,GAErDa,EACF/D,EAAA,cAACA,EAAA,SAAD,KACIA,EAAA,oBAAIC,UAAU,MAAd,cACAD,EAAA,cAACgE,EAAD,CAAqBjE,QAASP,EAAMO,QAASkE,OAAQzE,EAAMyE,OAAQX,YAAaD,KAGlFa,EACFlE,EAAA,cAACA,EAAA,SAAD,KACIA,EAAA,oBAAIC,UAAU,MAAd,eACAD,EAAA,cAACgE,EAAD,CAAqBjE,QAASP,EAAMO,QAASkE,OAAQzE,EAAMyE,OAAQX,YAAaO,KAGlFM,EACFnE,EAAA,cAACA,EAAA,SAAD,KACIA,EAAA,oBAAIC,UAAU,MAAd,cACAD,EAAA,cAACgE,EAAD,CAAqBjE,QAASP,EAAMO,QAASkE,OAAQzE,EAAMyE,OAAQX,YAAaQ,KAGxF,OACI9D,EAAA,cAACA,EAAA,SAAD,KACIA,EAAA,cAACgE,EAAD,CAAqBjE,QAASP,EAAMO,QAASkE,OAAQzE,EAAMyE,OAAQX,YAAa9D,EAAM8D,YAAYM,KAAKV,KACtGG,EAAQe,OAAS,GAAKL,EACtBF,EAASO,OAAS,GAAKF,EACvBJ,EAAQM,OAAS,GAAKD,IAW7BE,EAA0E,SAAC7E,GAS7E,OACIQ,EAAA,qBAAKC,UAAU,mBACVT,EAAM8D,YAAYnD,IAAI,SAAA2C,GAAU,OAC7B9C,EAAA,mBAAGC,UAAU,yCAAyCI,IAAKyC,EAAWb,GAAIlC,QAAS,kBAAMP,EAAMO,QAAQ+C,EAAWb,MAC7Ga,EAAWrC,KACQ,MAAnBqC,EAAWF,MAb5B,SAAcE,GACV,OACI9C,EAAA,cAACA,EAAA,SAAD,KACIA,EAAA,yBAAKA,EAAA,uBAAOC,UAAU,0BAA0B,IAAIqE,KAAKxB,EAAWF,MAAM2B,mBAAmB,WAC7FvE,EAAA,sBAAMC,UAAU,2BAA2BuE,SAAU,IAAIF,KAAKxB,EAAWF,MAAM6B,cAAeC,MAAO5B,EAAWF,KAAK+B,YAAalB,IAAOX,EAAWF,MAAMgC,YAS1HhC,CAAKE,QC/ExC+B,EAA0D,SAACrF,GACpE,IAAIS,EAAY,oBACZoB,EAAoB,OAMxB,OALI7B,EAAMsF,OACN7E,GAAa,gBACboB,GAAqB,wBAGrB7B,EAAMsF,KAEF9E,EAAA,cAACA,EAAA,SAAc,KACXA,EAAA,qBAAKC,UAAWA,EAAWsB,UAAW,EAAGC,KAAK,SAASuD,MAAO,CAAEC,OAAQ,MACnExF,EAAMyF,UAEXjF,EAAA,qBAAKC,UAAWoB,EAAmBtB,QAASP,EAAM0B,WAKvD,MAYEgE,EAA2D,SAAC1F,GACrE,OACIQ,EAAA,cAAC6E,EAAW,CAACC,KAAMtF,EAAMsF,KAAM5D,QAAS1B,EAAM0B,SAC1ClB,EAAA,qBAAKC,UAAU,cACXD,EAAA,mBAAGC,UAAU,kBAAkBF,QAAS,kBAAMP,EAAM2F,OAAO3F,EAAMyC,MAAG,gBACpEjC,EAAA,mBAAGC,UAAU,kBAAkBF,QAAS,kBAAMP,EAAMyE,OAAOzE,EAAMyC,MAAG,QACpEjC,EAAA,mBAAGC,UAAU,kBAAkBF,QAAS,kBAAMP,EAAM4F,SAAS5F,EAAMyC,MAAG,aCpCzEoD,EAAkD,SAAC7F,GAC5D,IAAM8F,EAAU7B,IAAOjE,EAAMsD,WAAWF,MAAQ,GAAGgC,UACnD,OACI5E,EAAA,qBAAKC,UAAU,aACXD,EAAA,qBAAKC,UAAU,aACXD,EAAA,uBAAOC,UAAU,6BAAjB,UAAqDqF,EAArD,uBACAtF,EAAA,yBAAMR,EAAMsD,WAAWrC,SCP1B8E,EAA6C,SAAC/F,GACvD,OACIQ,EAAA,qBAAKC,UAAU,aACXD,EAAA,qBAAKC,UAAU,aACXD,EAAA,uBAAOC,UAAU,6BAA2B,wBAC5CD,EAAA,yBAAMR,EAAMsD,WAAWrC,SCS1B+E,SAAwC,SAAChG,GAAiB,IAkE/D8D,EAlE+D/C,EACnCC,OAAAR,EAAA,SAAAQ,CAAS,IAD0BE,EAAAF,OAAAG,EAAA,EAAAH,CAAAD,EAAA,GAC5DkF,EAD4D/E,EAAA,GAAAG,GAAAH,EAAA,GAEHF,OAAAR,EAAA,SAAAQ,CAA6B,OAF1BM,EAAAN,OAAAG,EAAA,EAAAH,CAAAK,EAAA,GAE5D6E,EAF4D5E,EAAA,GAElC6E,EAFkC7E,EAAA,GAAA4B,EAGblC,OAAAR,EAAA,SAAAQ,CAA6B,MAHhBmC,EAAAnC,OAAAG,EAAA,EAAAH,CAAAkC,EAAA,GAG5DkD,EAH4DjD,EAAA,GAGvCkD,EAHuClD,EAAA,GAAAmD,EAIvCtF,OAAAR,EAAA,SAAAQ,CAAS,IAJ8BuF,EAAAvF,OAAAG,EAAA,EAAAH,CAAAsF,EAAA,GAI5DE,EAJ4DD,EAAA,GAIpDE,EAJoDF,EAAA,GAAAG,EAK/B1F,OAAAR,EAAA,SAAAQ,EAAS,GALsB2F,EAAA3F,OAAAG,EAAA,EAAAH,CAAA0F,EAAA,GAK5DE,EAL4DD,EAAA,GAKhDE,EALgDF,EAAA,GAAAG,EAMvB9F,OAAAR,EAAA,SAAAQ,EAAS,GANc+F,EAAA/F,OAAAG,EAAA,EAAAH,CAAA8F,EAAA,GAM5DE,EAN4DD,EAAA,GAM5CE,EAN4CF,EAAA,GAAAG,EAO7BlG,OAAAR,EAAA,SAAAQ,EAAS,GAPoBmG,EAAAnG,OAAAG,EAAA,EAAAH,CAAAkG,EAAA,GAO5DE,EAP4DD,EAAA,GAO/CE,EAP+CF,EAAA,GAAAG,EAQnCtG,OAAAR,EAAA,SAAAQ,EAAS,GAR0BuG,EAAAvG,OAAAG,EAAA,EAAAH,CAAAsG,EAAA,GAQ5DE,EAR4DD,EAAA,GAQlDE,EARkDF,EAAA,GAAAG,EAS7C1G,OAAAR,EAAA,SAAAQ,CAAS,IAToC2G,EAAA3G,OAAAG,EAAA,EAAAH,CAAA0G,EAAA,GAS5D9G,EAT4D+G,EAAA,GASvDpG,EATuDoG,EAAA,GAyBnE,SAASC,IACLf,GAAc,GAOlB,SAASgB,IACLR,GAAe,GAGnB,SAASS,EAAoBlH,GACzBqG,GAAkB,GAoBtB,SAASxF,IACLoF,GAAc,GAGlB,SAASkB,EAAiBjE,GACtB,OAAOA,EAAYkE,KAAKC,MAAMD,KAAKE,SAAWpE,EAAYc,SAa9D,OAjEA5D,OAAAR,EAAA,UAAAQ,CAAU,WACN,GAAiC,IAA7BhB,EAAM8D,YAAYc,OAAc,CAChC,IAAMuD,EAAWJ,EAAiB/H,EAAM8D,YAAYC,OAAO,SAAAC,GAAC,OAAe,OAAXA,EAAEZ,WAA4BgF,IAAXpE,EAAEZ,QACrF+C,EAA4BgC,GAC5B,IAAME,EAAMN,EAAiB/H,EAAM8D,YAAYC,OAAO,SAAAC,GAAC,OAAe,OAAXA,EAAEZ,QAC7DiD,EAAuBgC,KAE5B,IAiDY,KAAX7B,GAAyB,KAAR5F,GACjBkD,EAAc9D,EAAM8D,YAAYC,OAAO,SAAAC,GAAC,OAAIA,EAAE/C,KAAKX,cAAcgI,SAAS9B,EAAOlG,iBACrE,KAARM,IACAkD,EAAcA,EAAYC,OAAO,SAAAC,GAAC,OAAa,MAATA,EAAEpD,KAAeoD,EAAEpD,IAAI0H,SAAS1H,OAG1EkD,EAAc9D,EAAM8D,YAAYC,OAAO,SAAAC,GAAC,OAAc,MAAVA,EAAEZ,OAI9C5C,EAAA,cAACA,EAAA,SAAc,KACXA,EAAA,wBAAQC,UAAU,gCACdD,EAAA,qBAAKC,UAAU,iDACXD,EAAA,sBAAMC,UAAU,kCAAgC,aAChDD,EAAA,qBAAKC,UAAU,uBACXD,EAAA,qBAAKC,UAAU,eACXD,EAAA,uBAAOC,UAAU,eAAewB,KAAK,SAASsG,UAAU,IAAIC,YAAY,eAAUtD,MAAM,SAASvC,SAtCzH,SAAsBzC,GAClBuG,EAAUvG,EAAME,cAAcsC,QAqC6GP,aAAa,WACpI3B,EAAA,qBAAKC,UAAU,8BACXD,EAAA,wBAAQC,UAAU,0CAA0CwB,KAAK,SAAS1B,QApCtG,SAA6BL,GACzBA,EAAM0C,OAAO6F,cAAcC,UAAUC,OAAO,UAC5ClB,EAAY,SAACmB,GAAD,OAAyBA,KAkCyFzG,aAAa,iBAI/H3B,EAAA,wBAAQC,UAAU,kCAAkC8H,UAAU,IAAIhI,QAASqH,EAAgC1C,MAAM,sBAAoB,KACrI1E,EAAA,wBAAQC,UAAU,0BAA0B8H,UAAU,IAAIhI,QAAS,kBAAMP,EAAM6I,aAAa,iBAAc,WAE7GrB,GACGhH,EAAA,qBAAKC,UAAU,aACXD,EAAA,cAACT,EAAO,CAACI,UAAWS,EAAKF,KAAMV,EAAMU,KAAMH,QAxC/D,SAAwBK,GACpBW,EAAOX,QA2CHJ,EAAA,sBAAMC,UAAU,iBACXT,EAAM8I,oBAAiC,KAAXtC,GAAyB,KAAR5F,GAAcsF,GACxD1F,EAAA,cAACuI,EAAc,CAACzF,WAAY4C,EAA0B3F,QAASuH,IAElE9H,EAAMgJ,eAA4B,KAAXxC,GAAyB,KAAR5F,GAAcwF,GACnD5F,EAAA,cAACuF,EAAS,CAACzC,WAAY8C,EAAqB7F,QAASuH,IAEzDtH,EAAA,cAACyI,EAAc,CAACnF,YAAaA,EAAavD,QAASP,EAAMO,QAASkE,OAAQqD,IAC9D,KAAXtB,GAAwC,IAAvB1C,EAAYc,QAC1BpE,EAAA,cAACA,EAAA,SAAc,KACXA,EAAA,4DACAA,EAAA,wBAAQC,UAAU,4BAA4BF,QAASqH,GAA8B,wBAIjGpH,EAAA,cAACM,EAAmB,CAACG,KAAMuF,EAAQ1E,OAAQ8E,EAAYlG,KAAMV,EAAMU,KAAM6B,MA7FjF,SAA6BtB,EAAcL,GACvCiG,GAAc,GACd7G,EAAMkJ,gBAAgBjI,EAAML,IA2F6Ec,QAASD,IAC9GjB,EAAA,cAACyC,EAAoB,CAAChC,KAAMuF,EAAQ1E,OAAQkF,EAAgBtG,KAAMV,EAAMU,KAAM6C,OAzEtF,SAA6BD,GACzB2D,GAAkB,IAwE6FvF,QAASD,IACpHjB,EAAA,cAACkF,EAAY,CACTjD,GAAIwD,EACJX,KAAM8B,EACN1F,QAASmG,EACTjC,SAAUiC,EACVlC,OAAQkC,EACRpD,OAAQoD,OC/HXsB,EAA+C,SAACnJ,GACzD,IAAMoJ,EAAiB5I,EAAA,YA+BvB,SAAS6I,EAAwBnJ,GAC7B,IAAMoJ,EAAWtI,OAAAuI,OAAA,GAAavJ,EAAMsJ,aACpCA,EAAYpJ,EAAME,cAAcqC,IAAMvC,EAAME,cAAcoJ,QAC1DxJ,EAAM2C,SAAS2G,GAGnB,OACI9I,EAAA,cAACA,EAAA,SAAc,KACXA,EAAA,wBAAQC,UAAU,uBACdD,EAAA,qBAAKC,UAAU,iDACXD,EAAA,wBAAQC,UAAU,0BAA0B8H,UAAU,IAAIhI,QAAS,kBAAMP,EAAM6I,aAAa,MAAG,UAGvGrI,EAAA,sBAAMC,UAAU,iBAEZD,EAAA,qBAAKC,UAAU,mBACXD,EAAA,qBAAKC,UAAU,mBACXD,EAAA,qBAAKC,UAAU,gCACXD,EAAA,uBACIC,UAAU,uBACVgC,GAAG,qBACHR,KAAK,WACLuH,QAASxJ,EAAMsJ,YAAYR,mBAC3BnG,SAAU0G,IAEd7I,EAAA,uBAAOC,UAAU,uBAAuB+B,QAAQ,sBAAoB,+BAG5EhC,EAAA,qBAAKC,UAAU,mBACXD,EAAA,qBAAKC,UAAU,gCACXD,EAAA,uBACIC,UAAU,uBACVgC,GAAG,gBACHR,KAAK,WACLuH,QAASxJ,EAAMsJ,YAAYN,cAC3BrG,SAAU0G,IAEd7I,EAAA,uBAAOC,UAAU,uBAAuB+B,QAAQ,iBAAe,mCAK3EhC,EAAA,qBAAKC,UAAU,QACXD,EAAA,qBAAKC,UAAU,aACXD,EAAA,oBAAIC,UAAU,cAAY,iCAC1BD,EAAA,mBAAGC,UAAU,aAAW,sFACxBD,EAAA,uBAAOC,UAAU,oBAAoBgC,GAAG,OAAOR,KAAK,OAAOwH,OAAO,mBAAmB9G,SA9DzG,WACI,IAAM+G,EAAS,IAAIC,WACnBD,EAAOE,UAAY,WACf,GAA6B,kBAAlBF,EAAOG,OACd,IACI,IAAM/F,EAAcgG,KAAKC,MAAML,EAAOG,QACtC7J,EAAMgK,SAASlG,GACjB,MAAOmG,GACLC,MAAMD,KAIlB,IAAME,EAAaf,EAAUzH,QAAQyI,MAAM,GAC3CV,EAAOW,WAAWF,IAiD2GtH,IAAKuG,EAAWkB,QAAM,EAACvH,UAAQ,KAEhJvC,EAAA,qBAAKC,UAAU,+BACXD,EAAA,wBAAQC,UAAU,yCAAyCwB,KAAK,SAASsG,UAAU,IAAIhI,QAvE3G,WACiBgK,SAASC,eAAe,QAE/BC,UAoEsH,oBAC5GjK,EAAA,wBAAQC,UAAU,yCAAyCwB,KAAK,SAASsG,UAAU,IAAIhI,QA/E3G,WACI,IAAMmK,EAAOZ,KAAKa,UAAU3K,EAAM4K,QAC5BT,EAAO,IAAIU,KAAK,CAACH,GAAO,iBAAkB,CAAEzI,KAAM,iBAClD6I,EAAMC,OAAOC,IAAIC,gBAAgBd,GACvCY,OAAOG,SAAS3B,OAAOuB,KA2EqG,qBAMxHtK,EAAA,wBAAQC,UAAU,kBACdD,EAAA,uBAAGA,EAAA,mBAAG2K,KAAK,+CAA+CC,IAAI,WAAWxI,OAAO,UAAQ,wBACxFpC,EAAA,2DCpGH6K,EAAyC,SAACrL,GACnD,IAAIS,EAAY,0DAIhB,OAHIT,EAAMsF,OACN7E,GAAa,SAGbD,EAAA,qBAAKC,UAAWA,EAAWuB,KAAK,QAAOsJ,YAAW,YAAWC,cAAa,QACtE/K,EAAA,qBAAKC,UAAU,cAAY,oBCGjC+K,EAAuC,SAACxL,GAET,IADPA,EAAMyL,QAAQC,MAClB9G,QAClB5E,EAAMyL,QAAQE,SAAS3L,EAAM4L,MAH2B,IAAA7K,EAMtB8K,mBAAS7L,EAAMyL,QAAQC,OANDxK,EAAAF,OAAAG,EAAA,EAAAH,CAAAD,EAAA,GAMrD+C,EANqD5C,EAAA,GAMxC4K,EANwC5K,EAAA,GAAAG,EAOtCwK,mBAAS,IAP6BvK,EAAAN,OAAAG,EAAA,EAAAH,CAAAK,EAAA,GAOrD0K,EAPqDzK,EAAA,GAOhD0K,EAPgD1K,EAAA,GAAA4B,EAQtB2I,mBAAS,CAAE/C,oBAAoB,EAAOE,eAAe,IAR/B7F,EAAAnC,OAAAG,EAAA,EAAAH,CAAAkC,EAAA,GAQrDoG,EARqDnG,EAAA,GAQxC8I,EARwC9I,EAAA,GAAAmD,EAS1BuF,oBAAS,GATiBtF,EAAAvF,OAAAG,EAAA,EAAAH,CAAAsF,EAAA,GASrD4F,EATqD3F,EAAA,GAS1C4F,EAT0C5F,EAAA,GAWxD6F,EAAkB,EAwBtB,SAASC,EAAiBC,GACtBN,EAAOM,GAOX,MAAY,gBAARP,EAEIvL,EAAA,cAAC2I,EAAD,CACIyB,OAAQ9G,EACRkG,SAhBZ,SAAsBlG,GAClBgI,EAAehI,IAgBP+E,aAAcwD,EACd1J,SAVZ,SAAgC2G,GAC5B2C,EAAe3C,IAUPA,YAAaA,IAMrB9I,EAAA,cAACA,EAAA,SAAD,KACIA,EAAA,cAACwF,EAAD,CACIlC,YAAaA,EACboF,gBA9CZ,SAA6BjI,EAAcL,GACvC,IAAM0C,EAA0B,CAC5Bb,GAAI8J,MACJtL,OACAL,OAEJkL,EAAe,SAAClD,GAAD,SAAA4D,OAAAxL,OAAAyL,EAAA,EAAAzL,CAAkC4H,GAAlC,CAA6CtF,OAyCpD/C,QAtCZ,SAAqBM,GACjBiL,EAAe,SAAClD,GAAD,OAA8BA,EAAUjI,IAAI,SAAA+L,GAAC,OAAIA,EAAEjK,KAAO5B,EAATG,OAAA2L,EAAA,EAAA3L,CAAA,GAAoB0L,EAApB,CAAuBtJ,MAAM,IAAI0B,MAAO8H,YAAcF,MACtHP,GAAa,GACbpB,OAAO8B,aAAaT,GACpBA,EAAUrB,OAAO+B,WAAW,WACxBX,GAAa,IACd,OAiCKtD,aAAcwD,EACdvD,mBAAoBQ,EAAYR,mBAChCE,cAAeM,EAAYN,cAC3BtI,KAAMV,EAAMU,OAGhBF,EAAA,cAAC6K,EAAD,CAAO/F,KAAM4G,MAKzBV,EAAIxI,aAAe,CACf4I,KAAM,GACNlL,KAAM,IAGK8K,QCjFTuB,EAAcC,QACW,cAA7BjC,OAAOG,SAAS+B,UAEe,UAA7BlC,OAAOG,SAAS+B,UAEhBlC,OAAOG,SAAS+B,SAASC,MACvB,2DA8CN,SAASC,EAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,gHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,UAO5BW,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,uBCpGpDC,EAAb,oBAAAA,IAAAvN,OAAAwN,EAAA,EAAAxN,CAAAyN,KAAAF,GAAA,OAAAvN,OAAA0N,EAAA,EAAA1N,CAAAuN,EAAA,EAAA1N,IAAA,MAAA6B,MAAA,SACeY,GACP,IAAMQ,EAAc2K,KAAK/C,MACnBiD,EAAoB,CACtBlM,GAAI8J,MACJnJ,KAAME,EAAWF,KACjBnC,KAAMqC,EAAWrC,KACjBL,IAAK0C,EAAW1C,KAEpBkD,EAAY8K,KAAKD,GACjBE,aAAaC,QAAQ,cAAehF,KAAKa,UAAU7G,MAV3D,CAAAjD,IAAA,WAAA6B,MAAA,SAaoBoB,GACZ,IAAMiL,EAAON,KAAK/C,MAD+BsD,GAAA,EAAAC,GAAA,EAAAC,OAAA9G,EAAA,IAEjD,QAAA+G,EAAAC,EAAyBtL,EAAzBuL,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAsC,KAA3B1L,EAA2B6L,EAAAzM,MAC5BiM,EAAoB,CACtBlM,GAAI8J,MACJnJ,KAAME,EAAWF,KACjBnC,KAAMqC,EAAWrC,KACjBL,IAAK0C,EAAW1C,KAEpBmO,EAAKH,KAAKD,IATmC,MAAAc,GAAAR,GAAA,EAAAC,EAAAO,EAAA,YAAAT,GAAA,MAAAI,EAAAM,QAAAN,EAAAM,SAAA,WAAAT,EAAA,MAAAC,GAWjDL,aAAaC,QAAQ,cAAehF,KAAKa,UAAUoE,MAxB3D,CAAAlO,IAAA,SAAA6B,MAAA,SA2BkBD,GACV,MAAM,IAAIkN,MAAM,6BA5BxB,CAAA9O,IAAA,MAAA6B,MAAA,WAgCQ,IAAMoB,EAAc+K,aAAae,QAAQ,eACzC,OAAoB,OAAhB9L,EACO,GAEJgG,KAAKC,MAAMjG,KApC1B,CAAAjD,IAAA,SAAA6B,MAAA,SAuCkBY,GACV,MAAM,IAAIqM,MAAM,+BAxCxBpB,EAAA,GCOMzK,EAAgC,CAClC,CAAE7C,KAAM,yBAAgBmC,KAAM,IAAI0B,KAAK,KAAM,EAAG,GAAG8H,UAAWhM,IAAK,SACnE,CAAEK,KAAM,2BAAkBmC,KAAM,IAAI0B,KAAK,KAAM,EAAG,GAAG8H,UAAWhM,IAAK,SACrE,CAAEK,KAAM,0BAAiBmC,KAAM,IAAI0B,KAAK,KAAM,EAAG,GAAG8H,UAAWhM,IAAK,SACpE,CAAEK,KAAM,4BAAmBL,IAAK,aAChC,CAAEK,KAAM,0BAAiBL,IAAK,aAC9B,CAAEK,KAAM,4BAAmBmC,KAAM,IAAI0B,KAAK,KAAM,EAAG,GAAG8H,UAAWhM,IAAK,SACtE,CAAEK,KAAM,+BAAiBL,IAAK,SAC9B,CAAEK,KAAM,4BAAmBmC,KAAM,IAAI0B,KAAK,KAAM,EAAG,GAAG8H,UAAWhM,IAAK,aACtE,CAAEK,KAAM,wBAAemC,KAAM,IAAI0B,KAAK,KAAM,EAAG,GAAG8H,UAAWhM,IAAK,aAClE,CAAEK,KAAM,2BAAkBmC,KAAM,IAAI0B,KAAK,KAAM,EAAG,GAAG8H,UAAWhM,IAAK,SACrE,CAAEK,KAAM,4BAAmBmC,KAAM,IAAI0B,KAAK,KAAM,EAAG,GAAG8H,UAAWhM,IAAK,aACtE,CAAEK,KAAM,0BAAiBmC,KAAM,IAAI0B,KAAK,KAAM,EAAG,GAAG8H,UAAWhM,IAAK,SACpE,CAAEK,KAAM,+BAAsBL,IAAK,SACnC,CAAEK,KAAM,yBAAgBL,IAAK,SAC7B,CAAEK,KAAM,wBAAemC,KAAM,IAAI0B,KAAK,KAAM,GAAI,GAAG8H,UAAWhM,IAAK,SACnE,CAAEK,KAAM,yBAAgBmC,KAAM,IAAI0B,KAAK,KAAM,GAAI,GAAG8H,UAAWhM,IAAK,SACpE,CAAEK,KAAM,yBAAgBmC,KAAM,IAAI0B,KAAK,KAAM,EAAG,GAAG8H,UAAWhM,IAAK,SACnE,CAAEK,KAAM,4BAAmBmC,KAAM,IAAI0B,KAAK,KAAM,EAAG,GAAG8H,WACtD,CAAE3L,KAAM,0BAAiBmC,KAAM,IAAI0B,KAAK,KAAM,EAAG,GAAG8H,UAAWhM,IAAK,SACpE,CAAEK,KAAM,yBAAgBmC,KAAM,IAAI0B,KAAK,KAAM,GAAI,GAAG8H,UAAWhM,IAAK,SACpE,CAAEK,KAAM,2BAAkBL,IAAK,SAC/B,CAAEK,KAAM,wBAAemC,KAAM,IAAI0B,KAAK,KAAM,GAAI,GAAG8H,UAAWhM,IAAK,SACnE,CAAEK,KAAM,6BAAoBmC,KAAM,IAAI0B,KAAK,KAAM,GAAI,GAAG8H,UAAWhM,IAAK,SACxE,CAAEK,KAAM,0BAAiBmC,KAAM,IAAI0B,KAAK,KAAM,GAAI,GAAG8H,UAAWhM,IAAK,aACrE,CAAEK,KAAM,0BAAiBmC,KAAM,IAAI0B,KAAK,KAAM,GAAI,GAAG8H,UAAWhM,IAAK,aACrE,CAAEK,KAAM,8BAAqBmC,KAAM,IAAI0B,KAAK,KAAM,GAAI,GAAG8H,UAAWhM,IAAK,SACzE,CAAEK,KAAM,8BAAqBmC,KAAM,IAAI0B,KAAK,KAAM,EAAG,GAAG8H,UAAWhM,IAAK,SACxE,CAAEK,KAAM,6EAA4BL,IAAK,YACzC,CAAEK,KAAM,2CAAwBmC,KAAM,IAAI0B,KAAK,KAAM,EAAG,IAAI8H,WAC5D,CAAE3L,KAAM,0BAAiBL,IAAK,YAC9B,CAAEK,KAAM,oBAAWmC,KAAM,IAAI0B,KAAK,KAAM,EAAG,IAAI8H,UAAWhM,IAAK,YAC/D,CAAEK,KAAM,qBAAYmC,KAAM,KAAMxC,IAAK,YACrC,CAAEK,KAAM,uCAAoBL,IAAK,YACjC,CAAEK,KAAM,iCAAcmC,KAAM,IAAI0B,KAAK,KAAM,EAAG,IAAI8H,UAAWhM,IAAK,YAClE,CAAEK,KAAM,wBACR,CAAEA,KAAM,kBAAcL,IAAK,YAC3B,CAAEK,KAAM,sBAAamC,KAAM,KAAMxC,IAAK,YACtC,CAAEK,KAAM,oCAAiBmC,KAAM,IAAI0B,KAAK,KAAM,EAAG,IAAI8H,UAAWhM,IAAK,YACrE,CAAEK,KAAM,yBAAgBmC,KAAM,IAAI0B,KAAK,KAAM,EAAG,IAAI8H,UAAWhM,IAAK,YACpE,CAAEK,KAAM,8BAAgBmC,KAAM,IAAI0B,KAAK,KAAM,EAAG,IAAI8H,UAAWhM,IAAK,YACpE,CAAEK,KAAM,oBAAWmC,KAAM,IAAI0B,KAAK,KAAM,EAAG,IAAI8H,UAAWhM,IAAK,YAC/D,CAAEK,KAAM,mBAAUmC,KAAM,IAAI0B,KAAK,KAAM,EAAG,IAAI8H,UAAWhM,IAAK,YAC9D,CAAEK,KAAM,qBAAYmC,KAAM,IAAI0B,KAAK,KAAM,EAAG,IAAI8H,UAAWhM,IAAK,YAChE,CAAEK,KAAM,0BAAiBmC,KAAM,IAAI0B,KAAK,KAAM,EAAG,IAAI8H,UAAWhM,IAAK,YACrE,CAAEK,KAAM,qEAAoBL,IAAK,YACjC,CAAEK,KAAM,mBAAUL,IAAK,YACvB,CAAEK,KAAM,oBAAWmC,KAAM,IAAI0B,KAAK,KAAM,EAAG,IAAI8H,UAAWhM,IAAK,YAC/D,CAAEK,KAAM,uBAAcmC,KAAM,IAAI0B,KAAK,KAAM,EAAG,IAAI8H,UAAWhM,IAAK,YAClE,CAAEK,KAAM,oBAAWmC,KAAM,IAAI0B,KAAK,KAAM,EAAG,IAAI8H,UAAWhM,IAAK,YAC/D,CAAEK,KAAM,6BAAoBmC,KAAM,KAAMxC,IAAK,YAC7C,CAAEK,KAAM,uBAAcmC,KAAM,KAAMxC,IAAK,YACvC,CAAEK,KAAM,0BAAiBmC,KAAM,MAC/B,CAAEnC,KAAM,qBAAYmC,KAAM,KAAMxC,IAAK,UACrC,CAAEK,KAAM,gCAAuBmC,KAAM,KAAMxC,IAAK,UAChD,CAAEK,KAAM,wBAAemC,KAAM,KAAMxC,IAAK,UACxC,CAAEK,KAAM,sBAAamC,KAAM,KAAMxC,IAAK,UACtC,CAAEK,KAAM,oBAAWmC,KAAM,KAAMxC,IAAK,WAGlC6K,EAAoB,IAAI8C,EAG9BsB,SAAgBrP,EAAA,cAACsP,EAAD,CAAKlE,KAAM9H,EAAa2H,QAASA,EAAS/K,KAFnC,CAAC,WAAY,QAAS,SAAU,eAEmB6J,SAASC,eAAe,SF/C3F,SAAkB6C,GACvB,GAA6C,kBAAmBC,UAAW,CAMzE,GAJkB,IAAItC,IACnB,aACDD,OAAOG,SAASC,MAEJ4E,SAAWhF,OAAOG,SAAS6E,OAIvC,OAGFhF,OAAOiF,iBAAiB,OAAQ,WAC9B,IAAM5C,EAAK,GAAAZ,OAAM,aAAN,sBAEPO,GAgEV,SAAiCK,EAAeC,GAE9C4C,MAAM7C,GACHK,KAAK,SAAAyC,GAEJ,IAAMC,EAAcD,EAASE,QAAQ1E,IAAI,gBAEnB,MAApBwE,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5ChD,UAAUC,cAAcgD,MAAM9C,KAAK,SAAAC,GACjCA,EAAa8C,aAAa/C,KAAK,WAC7B1C,OAAOG,SAASuF,aAKpBtD,EAAgBC,EAAOC,KAG1BgB,MAAM,WACLJ,QAAQC,IACN,mEArFAwC,CAAwBtD,EAAOC,GAI/BC,UAAUC,cAAcgD,MAAM9C,KAAK,WACjCQ,QAAQC,IACN,+GAMJf,EAAgBC,EAAOC,MEkB/BE","file":"static/js/main.406351a1.chunk.js","sourcesContent":["import * as React from \"react\";\r\nexport const TagList = (props) => {\r\n    function handleClick(event) {\r\n        let activeTag = event.currentTarget.innerText.toLowerCase();\r\n        if (activeTag === props.activeTag) {\r\n            activeTag = \"\";\r\n        }\r\n        props.onClick(activeTag);\r\n    }\r\n    return (React.createElement(\"ul\", { className: \"list-inline\" }, props.tags.map(tag => {\r\n        let className = \"badge \";\r\n        className += (tag.toLowerCase() === props.activeTag ? \"badge-primary\" : \"badge-light\");\r\n        return React.createElement(\"li\", { className: \"list-inline-item\", key: tag },\r\n            React.createElement(\"span\", { className: className, onClick: handleClick }, tag));\r\n    })));\r\n};\r\n//# sourceMappingURL=TagList.js.map","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { TagList } from \"./TagList\";\r\nexport const AddExperienceDialog = (props) => {\r\n    const [name, setName] = useState(props.name);\r\n    const [tag, setTag] = useState(\"\");\r\n    const nameInput = React.createRef();\r\n    useEffect(() => {\r\n        if (nameInput.current) {\r\n            nameInput.current.focus();\r\n        }\r\n    });\r\n    function handleChange(event) {\r\n        setName(event.target.value);\r\n    }\r\n    function handleClose() {\r\n        props.onClose();\r\n    }\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        props.onAdd(name, tag);\r\n    }\r\n    let className = \"modal fade\";\r\n    let backdropClassName = \"fade\";\r\n    if (props.isOpen) {\r\n        className += \" d-block show\";\r\n        backdropClassName += \" modal-backdrop show\";\r\n    }\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"div\", { className: className, tabIndex: -1, role: \"dialog\" },\r\n            React.createElement(\"div\", { className: \"modal-dialog\", role: \"document\" },\r\n                React.createElement(\"div\", { className: \"modal-content\" },\r\n                    React.createElement(\"div\", { className: \"modal-header\" },\r\n                        React.createElement(\"h5\", { className: \"modal-title\" }, \"Add experience\"),\r\n                        React.createElement(\"button\", { type: \"button\", className: \"close\", \"data-dismiss\": \"modal\", \"aria-label\": \"Close\", onClick: handleClose },\r\n                            React.createElement(\"span\", { \"aria-hidden\": \"true\" }, \"\\u00D7\"))),\r\n                    React.createElement(\"form\", { onSubmit: handleSubmit },\r\n                        React.createElement(\"div\", { className: \"modal-body\" },\r\n                            React.createElement(\"div\", { className: \"form-group\" },\r\n                                React.createElement(\"label\", { htmlFor: \"name\" }, \"Title\"),\r\n                                React.createElement(\"input\", { className: \"form-control\", id: \"name\", type: \"text\", value: name, onChange: handleChange, ref: nameInput, autoFocus: true, required: true })),\r\n                            React.createElement(\"div\", { className: \"form-group\" },\r\n                                React.createElement(\"label\", null, \"Tag\"),\r\n                                React.createElement(TagList, { activeTag: tag, tags: props.tags, onClick: tag => setTag(tag) }))),\r\n                        React.createElement(\"div\", { className: \"modal-footer\" },\r\n                            React.createElement(\"button\", { type: \"button\", className: \"btn btn-secondary\", \"data-dismiss\": \"modal\", onClick: handleClose }, \"Close\"),\r\n                            React.createElement(\"button\", { type: \"submit\", className: \"btn btn-primary\" }, \"Add\")))))),\r\n        React.createElement(\"div\", { className: backdropClassName })));\r\n};\r\nAddExperienceDialog.defaultProps = {\r\n    name: \"\"\r\n};\r\n//# sourceMappingURL=AddExperienceDialog.js.map","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { TagList } from \"./TagList\";\r\nexport const EditExperienceDialog = (props) => {\r\n    const [name, setName] = useState(props.name);\r\n    const [tag, setTag] = useState(\"\");\r\n    const [last, setLast] = useState(0);\r\n    const nameInput = React.createRef();\r\n    useEffect(() => {\r\n        if (nameInput.current) {\r\n            nameInput.current.focus();\r\n        }\r\n    });\r\n    function handleChange(event) {\r\n        setName(event.target.value);\r\n    }\r\n    function handleTimeChange(event) {\r\n        setLast(parseInt(event.target.value, 10));\r\n    }\r\n    function handleClose() {\r\n        props.onClose();\r\n    }\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        const experience = { id: \"\", name: name, tag: tag, last: last };\r\n        props.onSave(experience);\r\n    }\r\n    let className = \"modal fade\";\r\n    let backdropClassName = \"fade\";\r\n    if (props.isOpen) {\r\n        className += \" d-block show\";\r\n        backdropClassName += \" modal-backdrop show\";\r\n    }\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"div\", { className: className, tabIndex: -1, role: \"dialog\" },\r\n            React.createElement(\"div\", { className: \"modal-dialog\", role: \"document\" },\r\n                React.createElement(\"div\", { className: \"modal-content\" },\r\n                    React.createElement(\"div\", { className: \"modal-header\" },\r\n                        React.createElement(\"h5\", { className: \"modal-title\" }, \"Edit experience\"),\r\n                        React.createElement(\"button\", { type: \"button\", className: \"close\", \"data-dismiss\": \"modal\", \"aria-label\": \"Close\", onClick: handleClose },\r\n                            React.createElement(\"span\", { \"aria-hidden\": \"true\" }, \"\\u00D7\"))),\r\n                    React.createElement(\"form\", { onSubmit: handleSubmit },\r\n                        React.createElement(\"div\", { className: \"modal-body\" },\r\n                            React.createElement(\"div\", { className: \"form-group\" },\r\n                                React.createElement(\"label\", { htmlFor: \"name\" }, \"Title\"),\r\n                                React.createElement(\"input\", { className: \"form-control\", id: \"name\", type: \"text\", value: name, onChange: handleChange, ref: nameInput, autoFocus: true, required: true })),\r\n                            React.createElement(\"div\", { className: \"form-group\" },\r\n                                React.createElement(\"label\", null, \"Tag\"),\r\n                                React.createElement(TagList, { activeTag: tag, tags: props.tags, onClick: tag => setTag(tag) })),\r\n                            React.createElement(\"div\", { className: \"form-group\" },\r\n                                React.createElement(\"label\", { htmlFor: \"time\" }, \"Last\"),\r\n                                React.createElement(\"input\", { className: \"form-control\", id: \"time\", type: \"datetime-local\", onChange: handleTimeChange }))),\r\n                        React.createElement(\"div\", { className: \"modal-footer\" },\r\n                            React.createElement(\"button\", { type: \"button\", className: \"btn btn-secondary\", \"data-dismiss\": \"modal\", onClick: handleClose }, \"Close\"),\r\n                            React.createElement(\"button\", { type: \"submit\", className: \"btn btn-primary\" }, \"Save\")))))),\r\n        React.createElement(\"div\", { className: backdropClassName })));\r\n};\r\nEditExperienceDialog.defaultProps = {\r\n    name: \"\"\r\n};\r\n//# sourceMappingURL=EditExperienceDialog.js.map","import * as React from \"react\";\r\nimport moment from \"moment\";\r\nimport { IExperience } from \"../IExperience\";\r\n\r\ninterface IProps {\r\n    experiences: IExperience[];\r\n    onClick(id: string): void;\r\n    onEdit(id: string): void;\r\n}\r\n\r\nexport const ExperienceList: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    function compare(a: IExperience, b: IExperience): number {\r\n        if (a.last == null || b.last == null) {\r\n            return 0;\r\n        }\r\n        if (a.last < b.last) {\r\n            return -1;\r\n        }\r\n        if (a.last > b.last) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    const weekAgo = props.experiences\r\n        .filter(x => x.last != null &&\r\n            x.last < moment().subtract(1, \"w\").valueOf() &&\r\n            x.last > moment().subtract(2, \"w\").valueOf()).sort(compare);\r\n\r\n    const monthAgo = props.experiences\r\n        .filter(x => x.last != null &&\r\n            x.last < moment().subtract(1, \"m\").valueOf() &&\r\n            x.last > moment().subtract(2, \"m\").valueOf()).sort(compare);\r\n\r\n    const yearAgo = props.experiences\r\n        .filter(x => x.last != null &&\r\n            x.last < moment().subtract(1, \"y\").valueOf() &&\r\n            x.last > moment().subtract(2, \"y\").valueOf()).sort(compare);\r\n\r\n    const weekGroup = (\r\n        <React.Fragment>\r\n            <h2 className=\"h5\">A week ago</h2>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={weekAgo} />\r\n        </React.Fragment>);\r\n\r\n    const monthGroup = (\r\n        <React.Fragment>\r\n            <h2 className=\"h5\">A month ago</h2>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={monthAgo} />\r\n        </React.Fragment>);\r\n\r\n    const yearGroup = (\r\n        <React.Fragment>\r\n            <h2 className=\"h5\">A year ago</h2>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={yearAgo} />\r\n        </React.Fragment>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={props.experiences.sort(compare)} />\r\n            {weekAgo.length > 0 && weekGroup}\r\n            {monthAgo.length > 0 && monthGroup}\r\n            {yearAgo.length > 0 && yearGroup}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\ninterface IExperienceListGroupProps {\r\n    experiences: IExperience[];\r\n    onClick(id: string): void;\r\n    onEdit(id: string): void;\r\n}\r\n\r\nconst ExperienceListGroup: React.FunctionComponent<IExperienceListGroupProps> = (props: IExperienceListGroupProps) => {\r\n    function last(experience: any): JSX.Element {\r\n        return (\r\n            <React.Fragment>\r\n                <div><small className=\"float-right text-muted\">{new Date(experience.last).toLocaleDateString(\"sv-se\")}</small></div>\r\n                <time className=\"d-block text-muted small\" dateTime={new Date(experience.last).toISOString()} title={experience.last.toString()}>{moment(experience.last).fromNow()}</time>\r\n            </React.Fragment>);\r\n    }\r\n\r\n    return (\r\n        <div className=\"list-group mb-3\">\r\n            {props.experiences.map(experience =>\r\n                <a className=\"list-group-item list-group-item-action\" key={experience.id} onClick={() => props.onClick(experience.id)}>\r\n                    {experience.name}\r\n                    {experience.last != null && last(experience)}\r\n                </a>\r\n            )}\r\n        </div>);\r\n};\r\n","import * as React from \"react\";\r\nexport const BottomSheet = (props) => {\r\n    let className = \"fixed-bottom fade\";\r\n    let backdropClassName = \"fade\";\r\n    if (props.show) {\r\n        className += \" d-block show\";\r\n        backdropClassName += \" modal-backdrop show\";\r\n    }\r\n    if (props.show) {\r\n        return (React.createElement(React.Fragment, null,\r\n            React.createElement(\"div\", { className: className, tabIndex: -1, role: \"dialog\", style: { zIndex: 2000 } }, props.children),\r\n            React.createElement(\"div\", { className: backdropClassName, onClick: props.onClose })));\r\n    }\r\n    return null;\r\n};\r\nexport const OptionsSheet = (props) => {\r\n    return (React.createElement(BottomSheet, { show: props.show, onClose: props.onClose },\r\n        React.createElement(\"div\", { className: \"list-group\" },\r\n            React.createElement(\"a\", { className: \"list-group-item\", onClick: () => props.onDone(props.id) }, \"Mark as done\"),\r\n            React.createElement(\"a\", { className: \"list-group-item\", onClick: () => props.onEdit(props.id) }, \"Edit\"),\r\n            React.createElement(\"a\", { className: \"list-group-item\", onClick: () => props.onDelete(props.id) }, \"Delete\"))));\r\n};\r\n//# sourceMappingURL=OptionsSheet.js.map","import * as React from \"react\";\r\nimport moment from \"moment\";\r\nimport { IExperience } from \"../IExperience\";\r\n\r\ninterface IProps {\r\n    experience: IExperience;\r\n    onClick(id: string): void;\r\n}\r\n\r\nexport const MaybeAgainCard: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    const timeAgo = moment(props.experience.last || 0).fromNow();\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n                <small className=\"text-muted text-uppercase\">It was {timeAgo}, Maybe again…</small>\r\n                <div>{props.experience.name}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nexport const NeverCard = (props) => {\r\n    return (React.createElement(\"div\", { className: \"card mb-3\" },\r\n        React.createElement(\"div\", { className: \"card-body\" },\r\n            React.createElement(\"small\", { className: \"text-muted text-uppercase\" }, \"You have never\\u2026\"),\r\n            React.createElement(\"div\", null, props.experience.name))));\r\n};\r\n//# sourceMappingURL=NeverCard.js.map","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { AddExperienceDialog } from \"./AddExperienceDialog\";\r\nimport { EditExperienceDialog } from \"./EditExperienceDialog\";\r\nimport { ExperienceList } from \"./ExperienceList\";\r\nimport { OptionsSheet } from \"./OptionsSheet\";\r\nimport { MaybeAgainCard } from \"./MaybeAgainCard\";\r\nimport { NeverCard } from \"./NeverCard\";\r\nimport { TagList } from \"./TagList\";\r\nimport \"./Home.css\";\r\nexport const Home = (props) => {\r\n    const [activeId, setActiveId] = useState(\"\");\r\n    const [maybeAgainCardExperience, setMaybeAgainCardExperience] = useState(null);\r\n    const [neverCardExperience, setNeverCardExperience] = useState(null);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [showDialog, setShowDialog] = useState(false);\r\n    const [showEditDialog, setShowEditDialog] = useState(false);\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [showTags, setShowTags] = useState(false);\r\n    const [tag, setTag] = useState(\"\");\r\n    useEffect(() => {\r\n        if (props.experiences.length !== 0) {\r\n            const maybeExp = randomExperience(props.experiences.filter(x => x.last !== null && x.last !== undefined));\r\n            setMaybeAgainCardExperience(maybeExp);\r\n            const exp = randomExperience(props.experiences.filter(x => x.last === null));\r\n            setNeverCardExperience(exp);\r\n        }\r\n    }, []);\r\n    function handleAddExperience(name, tag) {\r\n        setShowDialog(false);\r\n        props.onAddExperience(name, tag);\r\n    }\r\n    function handleAddExperienceButtonClick() {\r\n        setShowDialog(true);\r\n    }\r\n    function handleOpenOptions() {\r\n        setShowOptions(true);\r\n    }\r\n    function handleCloseOptions() {\r\n        setShowOptions(false);\r\n    }\r\n    function handleEditOpenClick(tag) {\r\n        setShowEditDialog(true);\r\n    }\r\n    function handleEditSaveClick(experience) {\r\n        setShowEditDialog(false);\r\n    }\r\n    function handleChange(event) {\r\n        setSearch(event.currentTarget.value);\r\n    }\r\n    function handleDropdownClick(event) {\r\n        event.target.parentElement.classList.toggle(\"dropup\");\r\n        setShowTags((prevState) => !prevState);\r\n    }\r\n    function handleTagClick(tag) {\r\n        setTag(tag);\r\n    }\r\n    function handleClose() {\r\n        setShowDialog(false);\r\n    }\r\n    function randomExperience(experiences) {\r\n        return experiences[Math.floor(Math.random() * experiences.length)];\r\n    }\r\n    let experiences;\r\n    if (search !== \"\" || tag !== \"\") {\r\n        experiences = props.experiences.filter(x => x.name.toLowerCase().includes(search.toLowerCase()));\r\n        if (tag !== \"\") {\r\n            experiences = experiences.filter(x => x.tag != null && x.tag.includes(tag));\r\n        }\r\n    }\r\n    else {\r\n        experiences = props.experiences.filter(x => x.last != null);\r\n    }\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"header\", { className: \"bg-white fixed-top shadow-sm\" },\r\n            React.createElement(\"nav\", { className: \"navbar navbar-expand-lg navbar-light bg-white\" },\r\n                React.createElement(\"span\", { className: \"navbar-brand d-none d-xl-block\" }, \"Cocoberry\"),\r\n                React.createElement(\"div\", { className: \"form-inline mr-auto\" },\r\n                    React.createElement(\"div\", { className: \"input-group\" },\r\n                        React.createElement(\"input\", { className: \"form-control\", type: \"search\", accessKey: \"s\", placeholder: \"Search\\u2026\", title: \"Search\", onChange: handleChange, \"aria-label\": \"Search\" }),\r\n                        React.createElement(\"div\", { className: \"input-group-append mr-sm-2\" },\r\n                            React.createElement(\"button\", { className: \"btn btn-outline-success dropdown-toggle\", type: \"button\", onClick: handleDropdownClick, \"aria-label\": \"Show tags\" })))),\r\n                React.createElement(\"button\", { className: \"btn btn-outline-success mr-sm-2\", accessKey: \"n\", onClick: handleAddExperienceButtonClick, title: \"Add new experience\" }, \"+\"),\r\n                React.createElement(\"button\", { className: \"btn btn-outline-success\", accessKey: \"p\", onClick: () => props.onNavigation(\"Preferences\") }, \"\\u2630\")),\r\n            showTags &&\r\n                React.createElement(\"div\", { className: \"container\" },\r\n                    React.createElement(TagList, { activeTag: tag, tags: props.tags, onClick: handleTagClick }))),\r\n        React.createElement(\"main\", { className: \"App container\" },\r\n            props.showMaybeAgainCard && search === \"\" && tag === \"\" && maybeAgainCardExperience &&\r\n                React.createElement(MaybeAgainCard, { experience: maybeAgainCardExperience, onClick: handleEditOpenClick }),\r\n            props.showNeverCard && search === \"\" && tag === \"\" && neverCardExperience &&\r\n                React.createElement(NeverCard, { experience: neverCardExperience, onClick: handleEditOpenClick }),\r\n            React.createElement(ExperienceList, { experiences: experiences, onClick: props.onClick, onEdit: handleEditOpenClick }),\r\n            search !== \"\" && experiences.length === 0 &&\r\n                React.createElement(React.Fragment, null,\r\n                    React.createElement(\"p\", null, \"There are no matched experiences.\"),\r\n                    React.createElement(\"button\", { className: \"btn btn-outline-secondary\", onClick: handleAddExperienceButtonClick }, \"Add new experience\"))),\r\n        React.createElement(AddExperienceDialog, { name: search, isOpen: showDialog, tags: props.tags, onAdd: handleAddExperience, onClose: handleClose }),\r\n        React.createElement(EditExperienceDialog, { name: search, isOpen: showEditDialog, tags: props.tags, onSave: handleEditSaveClick, onClose: handleClose }),\r\n        React.createElement(OptionsSheet, { id: activeId, show: showOptions, onClose: handleCloseOptions, onDelete: handleCloseOptions, onDone: handleCloseOptions, onEdit: handleCloseOptions })));\r\n};\r\n//# sourceMappingURL=Home.js.map","import * as React from \"react\";\r\nexport const Preferences = (props) => {\r\n    const fileInput = React.createRef();\r\n    function handleExport() {\r\n        const json = JSON.stringify(props.export);\r\n        const file = new File([json], \"cocoberry.json\", { type: \"octet/stream\" });\r\n        const url = window.URL.createObjectURL(file);\r\n        window.location.assign(url);\r\n    }\r\n    function handleBrowse() {\r\n        const elem = document.getElementById(\"file\");\r\n        const input = elem;\r\n        input.click();\r\n    }\r\n    function handleImport() {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n            if (typeof reader.result === \"string\") {\r\n                try {\r\n                    const experiences = JSON.parse(reader.result);\r\n                    props.onImport(experiences);\r\n                }\r\n                catch (e) {\r\n                    alert(e);\r\n                }\r\n            }\r\n        };\r\n        const file = fileInput.current.files[0];\r\n        reader.readAsText(file);\r\n    }\r\n    function handlePreferenceChanged(event) {\r\n        const preferences = Object.assign({}, props.preferences);\r\n        preferences[event.currentTarget.id] = event.currentTarget.checked;\r\n        props.onChange(preferences);\r\n    }\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"header\", { className: \"fixed-top shadow-sm\" },\r\n            React.createElement(\"nav\", { className: \"navbar navbar-expand-lg navbar-light bg-white\" },\r\n                React.createElement(\"button\", { className: \"btn btn-outline-success\", accessKey: \"b\", onClick: () => props.onNavigation(\"\") }, \"Back\"))),\r\n        React.createElement(\"main\", { className: \"App container\" },\r\n            React.createElement(\"div\", { className: \"list-group mb-3\" },\r\n                React.createElement(\"div\", { className: \"list-group-item\" },\r\n                    React.createElement(\"div\", { className: \"custom-control custom-switch\" },\r\n                        React.createElement(\"input\", { className: \"custom-control-input\", id: \"showMaybeAgainCard\", type: \"checkbox\", checked: props.preferences.showMaybeAgainCard, onChange: handlePreferenceChanged }),\r\n                        React.createElement(\"label\", { className: \"custom-control-label\", htmlFor: \"showMaybeAgainCard\" }, \"Show the maybe-again card\"))),\r\n                React.createElement(\"div\", { className: \"list-group-item\" },\r\n                    React.createElement(\"div\", { className: \"custom-control custom-switch\" },\r\n                        React.createElement(\"input\", { className: \"custom-control-input\", id: \"showNeverCard\", type: \"checkbox\", checked: props.preferences.showNeverCard, onChange: handlePreferenceChanged }),\r\n                        React.createElement(\"label\", { className: \"custom-control-label\", htmlFor: \"showNeverCard\" }, \"Show the you-have-never card\")))),\r\n            React.createElement(\"div\", { className: \"card\" },\r\n                React.createElement(\"div\", { className: \"card-body\" },\r\n                    React.createElement(\"h5\", { className: \"card-title\" }, \"Export and import experiences\"),\r\n                    React.createElement(\"p\", { className: \"card-text\" }, \"Your experiences can be imported and exported. They are stored in the JSON format.\"),\r\n                    React.createElement(\"input\", { className: \"form-control-file\", id: \"file\", type: \"file\", accept: \"application/json\", onChange: handleImport, ref: fileInput, hidden: true, required: true })),\r\n                React.createElement(\"div\", { className: \"list-group list-group-flush\" },\r\n                    React.createElement(\"button\", { className: \"list-group-item list-group-item-action\", type: \"button\", accessKey: \"e\", onClick: handleBrowse }, \"Import from file\"),\r\n                    React.createElement(\"button\", { className: \"list-group-item list-group-item-action\", type: \"button\", accessKey: \"e\", onClick: handleExport }, \"Export to file\")))),\r\n        React.createElement(\"footer\", { className: \"container mt-3\" },\r\n            React.createElement(\"p\", null,\r\n                React.createElement(\"a\", { href: \"https://github.com/vanillajonathan/cocoberry\", rel: \"noopener\", target: \"_blank\" }, \"Cocoberry on GitHub\")),\r\n            React.createElement(\"p\", null, \"Built with \\u2764 by Jonathan\"))));\r\n};\r\n//# sourceMappingURL=Preferences.js.map","import * as React from \"react\";\r\nexport const Toast = (props) => {\r\n    let className = \"toast fixed-bottom bg-dark text-white mx-auto mb-3 fade\";\r\n    if (props.show) {\r\n        className += \" show\";\r\n    }\r\n    return (React.createElement(\"div\", { className: className, role: \"alert\", \"aria-live\": \"assertive\", \"aria-atomic\": \"true\" },\r\n        React.createElement(\"div\", { className: \"toast-body\" }, \"Marked as done\")));\r\n};\r\n//# sourceMappingURL=Toast.js.map","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport uuid from \"uuid/v4\";\r\nimport { IStorage, INewExperience } from \"./IStorage\";\r\nimport { IExperience } from \"./IExperience\";\r\nimport { Home } from \"./components/Home\";\r\nimport { Preferences, IPreferences } from \"./components/Preferences\";\r\nimport { PwaInstaller } from \"./components/PwaInstaller\";\r\nimport { Toast } from \"./components/Toast\";\r\n\r\ninterface IProps {\r\n    seed: INewExperience[];\r\n    storage: IStorage;\r\n    tags: string[];\r\n}\r\n\r\nconst App: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    const storedExperiences = props.storage.get();\r\n    if (storedExperiences.length === 0) {\r\n        props.storage.add_many(props.seed);\r\n    }\r\n\r\n    const [experiences, setExperiences] = useState(props.storage.get());\r\n    const [nav, setNav] = useState(\"\");\r\n    const [preferences, setPreferences] = useState({ showMaybeAgainCard: false, showNeverCard: true });\r\n    const [showToast, setShowToast] = useState(false);\r\n\r\n    let timerId: number = 0;\r\n\r\n    function handleAddExperience(name: string, tag: string): void {\r\n        const experience: IExperience = {\r\n            id: uuid(),\r\n            name,\r\n            tag,\r\n        };\r\n        setExperiences((prevState: IExperience[]) => [...prevState, experience ]);\r\n    }\r\n\r\n    function handleClick(key: string): void {\r\n        setExperiences((prevState: IExperience[]) => prevState.map(i => i.id === key ? { ...i, last: new Date().getTime() } : i));\r\n        setShowToast(true);\r\n        window.clearTimeout(timerId);\r\n        timerId = window.setTimeout(() => {\r\n            setShowToast(false);\r\n        }, 1500);\r\n    }\r\n\r\n    function handleImport(experiences: IExperience[]): void {\r\n        setExperiences(experiences);\r\n    }\r\n\r\n    function handleNavigation(component: string): void {\r\n        setNav(component);\r\n    }\r\n\r\n    function handlePreferenceChange(preferences: IPreferences): void {\r\n        setPreferences(preferences);\r\n    }\r\n\r\n    if (nav === \"Preferences\") {\r\n        return (\r\n            <Preferences\r\n                export={experiences}\r\n                onImport={handleImport}\r\n                onNavigation={handleNavigation}\r\n                onChange={handlePreferenceChange}\r\n                preferences={preferences}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Home\r\n                experiences={experiences}\r\n                onAddExperience={handleAddExperience}\r\n                onClick={handleClick}\r\n                onNavigation={handleNavigation}\r\n                showMaybeAgainCard={preferences.showMaybeAgainCard}\r\n                showNeverCard={preferences.showNeverCard}\r\n                tags={props.tags}\r\n            />\r\n            {/*<PwaInstaller />*/}\r\n            <Toast show={showToast} />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nApp.defaultProps = {\r\n    seed: [],\r\n    tags: [],\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log('This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA');\r\n                });\r\n            }\r\n            else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n        registration.onupdatefound = () => {\r\n            const installingWorker = registration.installing;\r\n            if (installingWorker == null) {\r\n                return;\r\n            }\r\n            installingWorker.onstatechange = () => {\r\n                if (installingWorker.state === 'installed') {\r\n                    if (navigator.serviceWorker.controller) {\r\n                        // At this point, the updated precached content has been fetched,\r\n                        // but the previous service worker will still serve the older\r\n                        // content until all client tabs are closed.\r\n                        console.log('New content is available and will be used when all ' +\r\n                            'tabs for this page are closed. See http://bit.ly/CRA-PWA.');\r\n                        // Execute callback\r\n                        if (config && config.onUpdate) {\r\n                            config.onUpdate(registration);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // At this point, everything has been precached.\r\n                        // It's the perfect time to display a\r\n                        // \"Content is cached for offline use.\" message.\r\n                        console.log('Content is cached for offline use.');\r\n                        // Execute callback\r\n                        if (config && config.onSuccess) {\r\n                            config.onSuccess(registration);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        };\r\n    })\r\n        .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (response.status === 404 ||\r\n            (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n            // No service worker found. Probably a different app. Reload the page.\r\n            navigator.serviceWorker.ready.then(registration => {\r\n                registration.unregister().then(() => {\r\n                    window.location.reload();\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            // Service worker found. Proceed as normal.\r\n            registerValidSW(swUrl, config);\r\n        }\r\n    })\r\n        .catch(() => {\r\n        console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=serviceWorker.js.map","import uuid from \"uuid/v4\";\r\nimport { IStorage, INewExperience } from \"./IStorage\";\r\nimport { IExperience } from \"./IExperience\";\r\n\r\nexport class LocalStorage implements IStorage {\r\n    public add(experience: INewExperience): void {\r\n        const experiences = this.get();\r\n        const item: IExperience = {\r\n            id: uuid(),\r\n            last: experience.last,\r\n            name: experience.name,\r\n            tag: experience.tag,\r\n        };\r\n        experiences.push(item);\r\n        localStorage.setItem(\"experiences\", JSON.stringify(experiences));\r\n    }\r\n\r\n    public add_many(experiences: INewExperience[]): void {\r\n        const data = this.get();\r\n        for (const experience of experiences) {\r\n            const item: IExperience = {\r\n                id: uuid(),\r\n                last: experience.last,\r\n                name: experience.name,\r\n                tag: experience.tag,\r\n            };\r\n            data.push(item);\r\n        }\r\n        localStorage.setItem(\"experiences\", JSON.stringify(data));\r\n    }\r\n\r\n    public delete(id: string): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    public get(): IExperience[] {\r\n        const experiences = localStorage.getItem(\"experiences\");\r\n        if (experiences === null) {\r\n            return [];\r\n        }\r\n        return JSON.parse(experiences);\r\n    }\r\n\r\n    public update(experience: IExperience): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { IStorage, INewExperience } from \"./IStorage\";\r\nimport { LocalStorage } from \"./localStorage\";\r\n//import * as data from \"./seed.json\";\r\n\r\nimport seed from \"./seed.json\";\r\n\r\nconst experiences: INewExperience[] = [\r\n    { name: \"Eat apple 🍏\", last: new Date(2018, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat avocado 🥑\", last: new Date(2016, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat banana 🍌\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat broccoli 🥦\", tag: \"vegetable\" },\r\n    { name: \"Eat carrot 🥕\", tag: \"vegetable\" },\r\n    { name: \"Eat cherries 🍒\", last: new Date(2017, 5, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat chili 🌶️\", tag: \"fruit\" },\r\n    { name: \"Eat cucumber 🥒\", last: new Date(2017, 6, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat corn 🌽\", last: new Date(2017, 6, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat coconut 🥥\", last: new Date(2017, 7, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat eggplant 🍆\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat grapes 🍇\", last: new Date(2017, 9, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat leafy green 🥬\", tag: \"fruit\" },\r\n    { name: \"Eat lemon 🍋\", tag: \"fruit\" },\r\n    { name: \"Eat kiwi 🥝\", last: new Date(2017, 10, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat mango 🥭\", last: new Date(2017, 11, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat melon 🍈\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat mushroom 🍄\", last: new Date(2017, 4, 3).getTime() },\r\n    { name: \"Eat orange 🍊\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat peach 🍑\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat peanuts 🥜\", tag: \"fruit\" },\r\n    { name: \"Eat pear 🍐\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat pineapple 🍍\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat potato 🥔\", last: new Date(2018, 10, 1).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat tomato 🍅\", last: new Date(2018, 10, 1).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat strawberry 🍓\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat watermelon 🍉\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Get a massage 💆‍♂️💆‍♀️\", tag: \"activity\" },\r\n    { name: \"Bake a applepie 🥧🍪\", last: new Date(2018, 7, 13).getTime() },\r\n    { name: \"Basketball 🏀\", tag: \"activity\" },\r\n    { name: \"Bike 🚴\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Climb 🧗\", last: null, tag: \"activity\" },\r\n    { name: \"Cold shower 🥶🚿\", tag: \"activity\" },\r\n    { name: \"Dance 💃🕺\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Fasting 🍽\" },\r\n    { name: \"Football ⚽\", tag: \"activity\" },\r\n    { name: \"Guitar 🎸\", last: null, tag: \"activity\" },\r\n    { name: \"Ice bath 🥶🛀\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Ice skate ⛸️\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Meditate 🧘‍\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Read 📖\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Run 🏃\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Paint 🎨\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Play chess ♟️\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Sauna 🧖‍♂️🧖‍♀️\", tag: \"activity\" },\r\n    { name: \"Ski 🎿\", tag: \"activity\" },\r\n    { name: \"Swim 🏊\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Theatre 🎭\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Yoga 🧘\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Watch a movie 🎬\", last: null, tag: \"activity\" },\r\n    { name: \"Wrestle 🤼\", last: null, tag: \"activity\" },\r\n    { name: \"Cook pasta 🍝\", last: null },\r\n    { name: \"Beach 🏖\", last: null, tag: \"places\" },\r\n    { name: \"Botanical garden 🌿\", last: null, tag: \"places\" },\r\n    { name: \"Cemetery ⚱️\", last: null, tag: \"places\" },\r\n    { name: \"Museum 🖼\", last: null, tag: \"places\" },\r\n    { name: \"Park 🏞\", last: null, tag: \"places\" },\r\n];\r\n\r\nconst storage: IStorage = new LocalStorage();\r\nconst tags: string[] = [\"Activity\", \"Fruit\", \"Places\", \"Vegetable\"];\r\n\r\nReactDOM.render(<App seed={experiences} storage={storage} tags={tags} />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}