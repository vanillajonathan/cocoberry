{"version":3,"sources":["components/TagList.tsx","components/AddExperienceDialog.tsx","components/EditExperienceDialog.tsx","components/ExperienceList.tsx","../OptionsSheet.tsx","components/MaybeAgainCard.tsx","components/NeverCard.tsx","../Home.tsx","components/Preferences.tsx","components/Toast.tsx","App.tsx","serviceWorker.ts","localStorage.tsx","index.tsx"],"names":["TagList","props","handleClick","event","activeTag","currentTarget","innerText","toLowerCase","onClick","react","className","tags","map","tag","key","AddExperienceDialog","_useState","useState","name","_useState2","Object","slicedToArray","setName","_useState3","_useState4","setTag","nameInput","React","handleClose","onClose","useEffect","current","focus","backdropClassName","isOpen","tabIndex","role","type","data-dismiss","aria-label","aria-hidden","onSubmit","preventDefault","onAdd","htmlFor","id","value","onChange","target","ref","autoFocus","required","TagList_TagList","defaultProps","EditExperienceDialog","_useState5","_useState6","last","setLast","experience","onSave","parseInt","ExperienceList","compare","a","b","weekAgo","experiences","filter","x","moment","subtract","valueOf","sort","monthAgo","yearAgo","reverse","weekGroup","ExperienceList_ExperienceListGroup","onEdit","monthGroup","yearGroup","length","ExperienceListGroup","Date","toLocaleDateString","dateTime","toISOString","title","toString","fromNow","OptionsSheet_BottomSheet","open","style","zIndex","children","OptionsSheet_OptionsSheet","onDone","onDelete","MaybeAgainCard","timeAgo","NeverCard","Home_Home","activeId","maybeAgainCardExperience","setMaybeAgainCardExperience","neverCardExperience","setNeverCardExperience","_useState7","_useState8","setReverse","_useState9","_useState10","search","setSearch","_useState11","_useState12","showDialog","setShowDialog","_useState13","_useState14","showEditDialog","setShowEditDialog","_useState15","_useState16","showOptions","setShowOptions","_useState17","_useState18","showTags","setShowTags","_useState19","_useState20","handleAddExperienceButtonClick","handleCloseOptions","handleEditOpenClick","randomExperience","Math","floor","random","maybeExp","undefined","exp","includes","accessKey","placeholder","parentElement","classList","toggle","prevState","onNavigation","showMaybeAgainCard","MaybeAgainCard_MaybeAgainCard","showNeverCard","NeverCard_NeverCard","ExperienceList_ExperienceList","AddExperienceDialog_AddExperienceDialog","onAddExperience","EditExperienceDialog_EditExperienceDialog","Preferences","fileInput","handlePreferenceChanged","preferences","objectSpread","checked","accept","reader","FileReader","onloadend","result","JSON","parse","onImport","e","alert","file","files","readAsText","hidden","document","getElementById","click","json","stringify","export","File","url","window","URL","createObjectURL","location","assign","href","rel","Toast","show","aria-live","aria-atomic","message","App","storage","get","add_many","seed","prefShowMaybeAgainCard","localStorage","getItem","prefShowNeverCard","setExperiences","nav","setNav","setPreferences","showToast","setShowToast","timerId","handleNavigation","component","Preferences_Preferences","setItem","uuid","concat","toConsumableArray","i","getTime","clearTimeout","setTimeout","Toast_Toast","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","LocalStorage","classCallCheck","this","createClass","item","push","data","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","Error","ReactDOM","src_App","process","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b9a28cb4.chunk.js","sourcesContent":["import * as React from \"react\";\r\n\r\ninterface IProps {\r\n    activeTag: string;\r\n    tags: string[];\r\n    onClick(tag: string): void;\r\n}\r\n\r\nexport const TagList: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    function handleClick(event: React.MouseEvent<HTMLElement>): void {\r\n        let activeTag = event.currentTarget.innerText.toLowerCase();\r\n        if (activeTag === props.activeTag) {\r\n            activeTag = \"\";\r\n        }\r\n        props.onClick(activeTag);\r\n    }\r\n\r\n    return (\r\n        <ul className=\"list-inline\">\r\n            {props.tags.map(tag => {\r\n                let className = \"badge \";\r\n                className += (tag.toLowerCase() === props.activeTag ? \"badge-primary\" : \"badge-light\");\r\n                return <li className=\"list-inline-item\" key={tag}><span className={className} onClick={handleClick}>{tag}</span></li>;\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { TagList } from \"./TagList\";\r\n\r\ninterface IProps {\r\n    name: string;\r\n    isOpen: boolean;\r\n    tags: string[];\r\n    onAdd(name: string, tag: string): void;\r\n    onClose(): void;\r\n}\r\n\r\nexport const AddExperienceDialog: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    const [name, setName] = useState(props.name);\r\n    const [tag, setTag] = useState(\"\");\r\n    const nameInput = React.createRef<HTMLInputElement>();\r\n\r\n    useEffect(() => {\r\n        if (nameInput.current) {\r\n            nameInput.current.focus();\r\n        }\r\n    });\r\n\r\n    function handleChange(event: React.ChangeEvent<HTMLInputElement>): void {\r\n        setName(event.target.value);\r\n    }\r\n\r\n    function handleClose(): void {\r\n        props.onClose();\r\n    }\r\n\r\n    function handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\r\n        event.preventDefault();\r\n        props.onAdd(name, tag);\r\n    }\r\n\r\n    let className = \"modal fade\";\r\n    let backdropClassName = \"fade\";\r\n    if (props.isOpen) {\r\n        className += \" d-block show\";\r\n        backdropClassName += \" modal-backdrop show\";\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={className} tabIndex={-1} role=\"dialog\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\">Add experience</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={handleClose}>\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name\">Title</label>\r\n                                    <input className=\"form-control\" id=\"name\" type=\"text\" value={name} onChange={handleChange} ref={nameInput} autoFocus required />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Tag</label>\r\n                                    <TagList\r\n                                        activeTag={tag}\r\n                                        tags={props.tags}\r\n                                        onClick={tag => setTag(tag)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={handleClose}>Close</button>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Add</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={backdropClassName} />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nAddExperienceDialog.defaultProps = {\r\n    name: \"\"\r\n}\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { TagList } from \"./TagList\";\r\nimport { IExperience } from \"../IExperience\";\r\n\r\ninterface IProps {\r\n    name: string;\r\n    isOpen: boolean;\r\n    tags: string[];\r\n    onClose(): void;\r\n    onSave(experience: IExperience): void;\r\n}\r\n\r\nexport const EditExperienceDialog: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    const [name, setName] = useState(props.name);\r\n    const [tag, setTag] = useState(\"\");\r\n    const [last, setLast] = useState(0);\r\n    const nameInput = React.createRef<HTMLInputElement>();\r\n\r\n    useEffect(() => {\r\n        if (nameInput.current) {\r\n            nameInput.current.focus();\r\n        }\r\n    });\r\n\r\n    function handleChange(event: React.ChangeEvent<HTMLInputElement>): void {\r\n        setName(event.target.value);\r\n    }\r\n\r\n    function handleTimeChange(event: React.ChangeEvent<HTMLInputElement>): void {\r\n        setLast(parseInt(event.target.value, 10));\r\n    }\r\n\r\n    function handleClose(): void {\r\n        props.onClose();\r\n    }\r\n\r\n    function handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\r\n        event.preventDefault();\r\n        const experience: IExperience = { id: \"\", name: name, tag: tag, last: last };\r\n        props.onSave(experience);\r\n    }\r\n\r\n    let className = \"modal fade\";\r\n    let backdropClassName = \"fade\";\r\n    if (props.isOpen) {\r\n        className += \" d-block show\";\r\n        backdropClassName += \" modal-backdrop show\";\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={className} tabIndex={-1} role=\"dialog\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\">Edit experience</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={handleClose}>\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name\">Title</label>\r\n                                    <input className=\"form-control\" id=\"name\" type=\"text\" value={name} onChange={handleChange} ref={nameInput} autoFocus required />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Tag</label>\r\n                                    <TagList activeTag={tag} tags={props.tags} onClick={tag => setTag(tag)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"time\">Last</label>\r\n                                    <input className=\"form-control\" id=\"time\" type=\"datetime-local\" onChange={handleTimeChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={handleClose}>Close</button>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={backdropClassName} />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nEditExperienceDialog.defaultProps = {\r\n    name: \"\"\r\n}","import * as React from \"react\";\r\nimport moment from \"moment\";\r\nimport { IExperience } from \"../IExperience\";\r\n\r\ninterface IProps {\r\n    experiences: IExperience[];\r\n    reverse?: boolean;\r\n    onClick(id: string): void;\r\n    onEdit(id: string): void;\r\n}\r\n\r\nexport const ExperienceList: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    function compare(a: IExperience, b: IExperience): number {\r\n        if (a.last == null || b.last == null) {\r\n            return 0;\r\n        }\r\n        if (a.last < b.last) {\r\n            return -1;\r\n        }\r\n        if (a.last > b.last) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    const weekAgo = props.experiences\r\n        .filter(x => x.last != null &&\r\n            x.last < moment().subtract(1, \"w\").valueOf() &&\r\n            x.last > moment().subtract(2, \"w\").valueOf()).sort(compare);\r\n\r\n    const monthAgo = props.experiences\r\n        .filter(x => x.last != null &&\r\n            x.last < moment().subtract(1, \"m\").valueOf() &&\r\n            x.last > moment().subtract(2, \"m\").valueOf()).sort(compare);\r\n\r\n    const yearAgo = props.experiences\r\n        .filter(x => x.last != null &&\r\n            x.last < moment().subtract(1, \"y\").valueOf() &&\r\n            x.last > moment().subtract(2, \"y\").valueOf()).sort(compare);\r\n\r\n    let experiences = props.experiences.sort(compare);\r\n    if (props.reverse) {\r\n        experiences = experiences.reverse();\r\n    }\r\n\r\n    const weekGroup = (\r\n        <React.Fragment>\r\n            <h2 className=\"h5\">A week ago</h2>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={weekAgo} />\r\n        </React.Fragment>);\r\n\r\n    const monthGroup = (\r\n        <React.Fragment>\r\n            <h2 className=\"h5\">A month ago</h2>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={monthAgo} />\r\n        </React.Fragment>);\r\n\r\n    const yearGroup = (\r\n        <React.Fragment>\r\n            <h2 className=\"h5\">A year ago</h2>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={yearAgo} />\r\n        </React.Fragment>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={experiences} />\r\n            {weekAgo.length > 0 && weekGroup}\r\n            {monthAgo.length > 0 && monthGroup}\r\n            {yearAgo.length > 0 && yearGroup}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\ninterface IExperienceListGroupProps {\r\n    experiences: IExperience[];\r\n    onClick(id: string): void;\r\n    onEdit(id: string): void;\r\n}\r\n\r\nconst ExperienceListGroup: React.FunctionComponent<IExperienceListGroupProps> = (props: IExperienceListGroupProps) => {\r\n    function last(experience: any): JSX.Element {\r\n        return (\r\n            <React.Fragment>\r\n                <div><small className=\"float-right text-muted\">{new Date(experience.last).toLocaleDateString(\"sv-se\")}</small></div>\r\n                <time className=\"d-block text-muted small\" dateTime={new Date(experience.last).toISOString()} title={experience.last.toString()}>{moment(experience.last).fromNow()}</time>\r\n            </React.Fragment>);\r\n    }\r\n\r\n    return (\r\n        <div className=\"list-group mb-3\">\r\n            {props.experiences.map(experience =>\r\n                <a className=\"list-group-item list-group-item-action\" key={experience.id} onClick={() => props.onClick(experience.id)}>\r\n                    {experience.name}\r\n                    {experience.last != null && last(experience)}\r\n                </a>\r\n            )}\r\n        </div>);\r\n};\r\n","import * as React from \"react\";\r\nexport const BottomSheet = (props) => {\r\n    let className = \"fixed-bottom fade\";\r\n    let backdropClassName = \"fade\";\r\n    if (props.open) {\r\n        className += \" d-block show\";\r\n        backdropClassName += \" modal-backdrop show\";\r\n    }\r\n    if (props.open) {\r\n        return (React.createElement(React.Fragment, null,\r\n            React.createElement(\"div\", { className: className, tabIndex: -1, role: \"dialog\", style: { zIndex: 2000 } }, props.children),\r\n            React.createElement(\"div\", { className: backdropClassName, onClick: props.onClose })));\r\n    }\r\n    return null;\r\n};\r\nexport const OptionsSheet = (props) => {\r\n    return (React.createElement(BottomSheet, { open: props.open, onClose: props.onClose },\r\n        React.createElement(\"div\", { className: \"list-group\" },\r\n            React.createElement(\"a\", { className: \"list-group-item\", onClick: () => props.onDone(props.id) }, \"Mark as done\"),\r\n            React.createElement(\"a\", { className: \"list-group-item\", onClick: () => props.onEdit(props.id) }, \"Edit\"),\r\n            React.createElement(\"a\", { className: \"list-group-item\", onClick: () => props.onDelete(props.id) }, \"Delete\"))));\r\n};\r\n//# sourceMappingURL=OptionsSheet.js.map","import * as React from \"react\";\r\nimport moment from \"moment\";\r\nimport { IExperience } from \"../IExperience\";\r\n\r\ninterface IProps {\r\n    experience: IExperience;\r\n    onClick(id: string): void;\r\n}\r\n\r\nexport const MaybeAgainCard: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    const timeAgo = moment(props.experience.last || 0).fromNow();\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n                <small className=\"text-muted text-uppercase\">It was {timeAgo}, Maybe again…</small>\r\n                <div>{props.experience.name}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { IExperience } from \"../IExperience\";\r\n\r\ninterface IProps {\r\n    experience: IExperience;\r\n    onClick(id: string): void;\r\n}\r\n\r\nexport const NeverCard: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n                <small className=\"text-muted text-uppercase\">You have never…</small>\r\n                <div>{props.experience.name}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { AddExperienceDialog } from \"./AddExperienceDialog\";\r\nimport { EditExperienceDialog } from \"./EditExperienceDialog\";\r\nimport { ExperienceList } from \"./ExperienceList\";\r\nimport { OptionsSheet } from \"./OptionsSheet\";\r\nimport { MaybeAgainCard } from \"./MaybeAgainCard\";\r\nimport { NeverCard } from \"./NeverCard\";\r\nimport { TagList } from \"./TagList\";\r\nimport \"./Home.css\";\r\nexport const Home = (props) => {\r\n    const [activeId, setActiveId] = useState(\"\");\r\n    const [maybeAgainCardExperience, setMaybeAgainCardExperience] = useState(null);\r\n    const [neverCardExperience, setNeverCardExperience] = useState(null);\r\n    const [reverse, setReverse] = useState(false);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [showDialog, setShowDialog] = useState(false);\r\n    const [showEditDialog, setShowEditDialog] = useState(false);\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [showTags, setShowTags] = useState(false);\r\n    const [tag, setTag] = useState(\"\");\r\n    useEffect(() => {\r\n        if (props.experiences.length !== 0) {\r\n            const maybeExp = randomExperience(props.experiences.filter(x => x.last !== null && x.last !== undefined));\r\n            setMaybeAgainCardExperience(maybeExp);\r\n            const exp = randomExperience(props.experiences.filter(x => x.last === null));\r\n            setNeverCardExperience(exp);\r\n        }\r\n    }, []);\r\n    function handleAddExperience(name, tag) {\r\n        setShowDialog(false);\r\n        props.onAddExperience(name, tag);\r\n    }\r\n    function handleAddExperienceButtonClick() {\r\n        setShowDialog(true);\r\n    }\r\n    function handleOpenOptions() {\r\n        setShowOptions(true);\r\n    }\r\n    function handleCloseOptions() {\r\n        setShowOptions(false);\r\n    }\r\n    function handleEditOpenClick(tag) {\r\n        setShowEditDialog(true);\r\n    }\r\n    function handleEditSaveClick(experience) {\r\n        setShowEditDialog(false);\r\n    }\r\n    function handleChange(event) {\r\n        setSearch(event.currentTarget.value);\r\n    }\r\n    function handleDropdownClick(event) {\r\n        event.target.parentElement.classList.toggle(\"dropup\");\r\n        setShowTags((prevState) => !prevState);\r\n    }\r\n    function handleSort() {\r\n        setReverse((prevState) => !prevState);\r\n    }\r\n    function handleTagClick(tag) {\r\n        setTag(tag);\r\n    }\r\n    function handleClose() {\r\n        setShowDialog(false);\r\n    }\r\n    function randomExperience(experiences) {\r\n        return experiences[Math.floor(Math.random() * experiences.length)];\r\n    }\r\n    let experiences;\r\n    if (search !== \"\" || tag !== \"\") {\r\n        experiences = props.experiences.filter(x => x.name.toLowerCase().includes(search.toLowerCase()));\r\n        if (tag !== \"\") {\r\n            experiences = experiences.filter(x => x.tag != null && x.tag.includes(tag));\r\n        }\r\n    }\r\n    else {\r\n        experiences = props.experiences.filter(x => x.last != null);\r\n    }\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"header\", { className: \"bg-white fixed-top shadow-sm\" },\r\n            React.createElement(\"nav\", { className: \"navbar navbar-expand-lg navbar-light bg-white\" },\r\n                React.createElement(\"span\", { className: \"navbar-brand d-none d-xl-block\" }, \"Cocoberry\"),\r\n                React.createElement(\"div\", { className: \"form-inline mr-auto\" },\r\n                    React.createElement(\"div\", { className: \"input-group\" },\r\n                        React.createElement(\"input\", { className: \"form-control\", type: \"search\", accessKey: \"s\", placeholder: \"Search\\u2026\", title: \"Search\", onChange: handleChange, \"aria-label\": \"Search\" }),\r\n                        React.createElement(\"div\", { className: \"input-group-append mr-sm-2\" },\r\n                            React.createElement(\"button\", { className: \"btn btn-outline-success dropdown-toggle\", type: \"button\", onClick: handleDropdownClick, \"aria-label\": \"Show tags\" })))),\r\n                React.createElement(\"button\", { className: \"btn btn-outline-success mr-sm-2 d-none d-xl-block\", accessKey: \"r\", onClick: handleSort, title: \"Sort\" }, \"\\u25B2\"),\r\n                React.createElement(\"button\", { className: \"btn btn-outline-success mr-sm-2\", accessKey: \"n\", onClick: handleAddExperienceButtonClick, title: \"Add new experience\" }, \"+\"),\r\n                React.createElement(\"button\", { className: \"btn btn-outline-success\", accessKey: \"p\", onClick: () => props.onNavigation(\"Preferences\") }, \"\\u2630\")),\r\n            showTags &&\r\n                React.createElement(\"div\", { className: \"container\" },\r\n                    React.createElement(TagList, { activeTag: tag, tags: props.tags, onClick: handleTagClick }))),\r\n        React.createElement(\"main\", { className: \"App container\" },\r\n            props.showMaybeAgainCard && search === \"\" && tag === \"\" && maybeAgainCardExperience &&\r\n                React.createElement(MaybeAgainCard, { experience: maybeAgainCardExperience, onClick: handleEditOpenClick }),\r\n            props.showNeverCard && search === \"\" && tag === \"\" && neverCardExperience &&\r\n                React.createElement(NeverCard, { experience: neverCardExperience, onClick: handleEditOpenClick }),\r\n            React.createElement(ExperienceList, { experiences: experiences, reverse: reverse, onClick: props.onClick, onEdit: handleEditOpenClick }),\r\n            search !== \"\" && experiences.length === 0 &&\r\n                React.createElement(React.Fragment, null,\r\n                    React.createElement(\"p\", null, \"There are no matched experiences.\"),\r\n                    React.createElement(\"button\", { className: \"btn btn-outline-secondary\", onClick: handleAddExperienceButtonClick }, \"Add new experience\"))),\r\n        React.createElement(AddExperienceDialog, { name: search, isOpen: showDialog, tags: props.tags, onAdd: handleAddExperience, onClose: handleClose }),\r\n        React.createElement(EditExperienceDialog, { name: search, isOpen: showEditDialog, tags: props.tags, onSave: handleEditSaveClick, onClose: handleClose }),\r\n        React.createElement(OptionsSheet, { id: activeId, open: showOptions, onClose: handleCloseOptions, onDelete: handleCloseOptions, onDone: handleCloseOptions, onEdit: handleCloseOptions })));\r\n};\r\n//# sourceMappingURL=Home.js.map","import * as React from \"react\";\r\nimport { IExperience } from \"../IExperience\";\r\n\r\ninterface IProps {\r\n    export: IExperience[];\r\n    preferences: IPreferences;\r\n    onChange(preferences: IPreferences): void;\r\n    onImport(experience: IExperience[]): void;\r\n    onNavigation(component: string): void;\r\n}\r\n\r\nexport interface IPreferences {\r\n    showMaybeAgainCard: boolean;\r\n    showNeverCard: boolean;\r\n}\r\n\r\nexport const Preferences: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    const fileInput: any = React.createRef();\r\n\r\n    function handleExport(): void {\r\n        const json = JSON.stringify(props.export);\r\n        const file = new File([json], \"cocoberry.json\", { type: \"octet/stream\" });\r\n        const url = window.URL.createObjectURL(file);\r\n        window.location.assign(url);\r\n    }\r\n\r\n    function handleBrowse(): void {\r\n        const elem = document.getElementById(\"file\");\r\n        const input = elem as HTMLInputElement;\r\n        input.click();\r\n    }\r\n\r\n    function handleImport(): void {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n            if (typeof reader.result === \"string\") {\r\n                try {\r\n                    const experiences = JSON.parse(reader.result) as IExperience[];\r\n                    props.onImport(experiences);\r\n                } catch (e) {\r\n                    alert(e);\r\n                }\r\n            }\r\n        };\r\n        const file: File = fileInput.current.files[0];\r\n        reader.readAsText(file);\r\n    }\r\n\r\n    function handlePreferenceChanged(event: React.ChangeEvent<HTMLInputElement>): void {\r\n        const preferences: any = { ...props.preferences };\r\n        preferences[event.currentTarget.id] = event.currentTarget.checked;\r\n        props.onChange(preferences);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <header className=\"fixed-top shadow-sm\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-white\">\r\n                    <button className=\"btn btn-outline-success\" accessKey=\"b\" onClick={() => props.onNavigation(\"\")}>Back</button>\r\n                </nav>\r\n            </header>\r\n            <main className=\"App container\">\r\n\r\n                <div className=\"list-group mb-3\">\r\n                    <div className=\"list-group-item\">\r\n                        <div className=\"custom-control custom-switch\">\r\n                            <input\r\n                                className=\"custom-control-input\"\r\n                                id=\"showMaybeAgainCard\"\r\n                                type=\"checkbox\"\r\n                                checked={props.preferences.showMaybeAgainCard}\r\n                                onChange={handlePreferenceChanged}\r\n                            />\r\n                            <label className=\"custom-control-label\" htmlFor=\"showMaybeAgainCard\">Show the maybe-again card</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"list-group-item\">\r\n                        <div className=\"custom-control custom-switch\">\r\n                            <input\r\n                                className=\"custom-control-input\"\r\n                                id=\"showNeverCard\"\r\n                                type=\"checkbox\"\r\n                                checked={props.preferences.showNeverCard}\r\n                                onChange={handlePreferenceChanged}\r\n                            />\r\n                            <label className=\"custom-control-label\" htmlFor=\"showNeverCard\">Show the you-have-never card</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Export and import experiences</h5>\r\n                        <p className=\"card-text\">Your experiences can be imported and exported. They are stored in the JSON format.</p>\r\n                        <input className=\"form-control-file\" id=\"file\" type=\"file\" accept=\"application/json\" onChange={handleImport} ref={fileInput} hidden required />\r\n                    </div>\r\n                    <div className=\"list-group list-group-flush\">\r\n                        <button className=\"list-group-item list-group-item-action\" type=\"button\" accessKey=\"e\" onClick={handleBrowse}>Import from file</button>\r\n                        <button className=\"list-group-item list-group-item-action\" type=\"button\" accessKey=\"e\" onClick={handleExport}>Export to file</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </main>\r\n\r\n            <footer className=\"container mt-3\">\r\n                <p><a href=\"https://github.com/vanillajonathan/cocoberry\" rel=\"noopener\" target=\"_blank\">Cocoberry on GitHub</a></p>\r\n                <p>Built with ❤ by Jonathan</p>\r\n            </footer>\r\n\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\n\r\ninterface IProps {\r\n    message: string;\r\n    show: boolean;\r\n}\r\n\r\nexport const Toast: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    let className = \"toast fixed-bottom bg-dark text-white mx-auto mb-3 fade\";\r\n    if (props.show) {\r\n        className += \" show\";\r\n    }\r\n    return (\r\n        <div className={className} role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\r\n            <div className=\"toast-body\">\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport uuid from \"uuid/v4\";\r\nimport { IStorage, INewExperience } from \"./IStorage\";\r\nimport { IExperience } from \"./IExperience\";\r\nimport { Home } from \"./components/Home\";\r\nimport { Preferences, IPreferences } from \"./components/Preferences\";\r\n//import { PwaInstaller } from \"./components/PwaInstaller\";\r\nimport { Toast } from \"./components/Toast\";\r\n\r\ninterface IProps {\r\n    seed: INewExperience[];\r\n    storage: IStorage;\r\n    tags: string[];\r\n}\r\n\r\nconst App: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    const storedExperiences = props.storage.get();\r\n    if (storedExperiences.length === 0) {\r\n        props.storage.add_many(props.seed);\r\n    }\r\n\r\n    const prefShowMaybeAgainCard = localStorage.getItem(\"showMaybeAgainCard\") || \"false\";\r\n    const prefShowNeverCard = localStorage.getItem(\"showNeverCard\") || \"true\";\r\n\r\n    const [experiences, setExperiences] = useState(props.storage.get());\r\n    const [nav, setNav] = useState(\"\");\r\n    const [preferences, setPreferences] = useState({\r\n        showMaybeAgainCard: prefShowMaybeAgainCard === \"true\",\r\n        showNeverCard: prefShowNeverCard === \"true\",\r\n    });\r\n    const [showToast, setShowToast] = useState(false);\r\n\r\n    let timerId: number = 0;\r\n\r\n    function handleAddExperience(name: string, tag: string): void {\r\n        const experience: IExperience = {\r\n            id: uuid(),\r\n            name,\r\n            tag,\r\n        };\r\n        setExperiences((prevState: IExperience[]) => [...prevState, experience ]);\r\n    }\r\n\r\n    function handleClick(key: string): void {\r\n        setExperiences((prevState: IExperience[]) => prevState.map(i => i.id === key ? { ...i, last: new Date().getTime() } : i));\r\n        setShowToast(true);\r\n        window.clearTimeout(timerId);\r\n        timerId = window.setTimeout(() => {\r\n            setShowToast(false);\r\n        }, 1500);\r\n    }\r\n\r\n    function handleImport(experiences: IExperience[]): void {\r\n        setExperiences(experiences);\r\n    }\r\n\r\n    function handleNavigation(component: string): void {\r\n        setNav(component);\r\n    }\r\n\r\n    function handlePreferenceChange(preferences: IPreferences): void {\r\n        setPreferences(preferences);\r\n        localStorage.setItem(\"showMaybeAgainCard\", preferences.showMaybeAgainCard.toString());\r\n        localStorage.setItem(\"showNeverCard\", preferences.showNeverCard.toString());\r\n    }\r\n\r\n    if (nav === \"Preferences\") {\r\n        return (\r\n            <Preferences\r\n                export={experiences}\r\n                onChange={handlePreferenceChange}\r\n                onImport={handleImport}\r\n                onNavigation={handleNavigation}\r\n                preferences={preferences}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Home\r\n                experiences={experiences}\r\n                onAddExperience={handleAddExperience}\r\n                onClick={handleClick}\r\n                onNavigation={handleNavigation}\r\n                showMaybeAgainCard={preferences.showMaybeAgainCard}\r\n                showNeverCard={preferences.showNeverCard}\r\n                tags={props.tags}\r\n            />\r\n            {/*<PwaInstaller />*/}\r\n            <Toast message=\"Marked as done\" show={showToast} />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nApp.defaultProps = {\r\n    seed: [],\r\n    tags: [],\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import uuid from \"uuid/v4\";\r\nimport { IStorage, INewExperience } from \"./IStorage\";\r\nimport { IExperience } from \"./IExperience\";\r\n\r\nexport class LocalStorage implements IStorage {\r\n    public add(experience: INewExperience): void {\r\n        const experiences = this.get();\r\n        const item: IExperience = {\r\n            id: uuid(),\r\n            last: experience.last,\r\n            name: experience.name,\r\n            tag: experience.tag,\r\n        };\r\n        experiences.push(item);\r\n        localStorage.setItem(\"experiences\", JSON.stringify(experiences));\r\n    }\r\n\r\n    public add_many(experiences: INewExperience[]): void {\r\n        const data = this.get();\r\n        for (const experience of experiences) {\r\n            const item: IExperience = {\r\n                id: uuid(),\r\n                last: experience.last,\r\n                name: experience.name,\r\n                tag: experience.tag,\r\n            };\r\n            data.push(item);\r\n        }\r\n        localStorage.setItem(\"experiences\", JSON.stringify(data));\r\n    }\r\n\r\n    public delete(id: string): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    public get(): IExperience[] {\r\n        const experiences = localStorage.getItem(\"experiences\");\r\n        if (experiences === null) {\r\n            return [];\r\n        }\r\n        return JSON.parse(experiences);\r\n    }\r\n\r\n    public update(experience: IExperience): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { IStorage, INewExperience } from \"./IStorage\";\r\nimport { LocalStorage } from \"./localStorage\";\r\n//import * as data from \"./seed.json\";\r\n\r\nimport seed from \"./seed.json\";\r\n\r\nconst experiences: INewExperience[] = [\r\n    { name: \"Eat apple 🍏\", last: new Date(2018, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat avocado 🥑\", last: new Date(2016, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat banana 🍌\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat broccoli 🥦\", tag: \"vegetable\" },\r\n    { name: \"Eat carrot 🥕\", tag: \"vegetable\" },\r\n    { name: \"Eat cherries 🍒\", last: new Date(2017, 5, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat chili 🌶️\", tag: \"fruit\" },\r\n    { name: \"Eat cucumber 🥒\", last: new Date(2017, 6, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat corn 🌽\", last: new Date(2017, 6, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat coconut 🥥\", last: new Date(2017, 7, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat eggplant 🍆\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat garlic\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat grapes 🍇\", last: new Date(2017, 9, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat leafy green 🥬\", tag: \"fruit\" },\r\n    { name: \"Eat lemon 🍋\", tag: \"fruit\" },\r\n    { name: \"Eat kiwi 🥝\", last: new Date(2017, 10, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat mango 🥭\", last: new Date(2017, 11, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat melon 🍈\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat mushroom 🍄\", last: new Date(2017, 4, 3).getTime() },\r\n    { name: \"Eat onion\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat orange 🍊\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat peach 🍑\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat peanuts 🥜\", tag: \"fruit\" },\r\n    { name: \"Eat pear 🍐\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat pineapple 🍍\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat potato 🥔\", last: new Date(2018, 10, 1).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat tomato 🍅\", last: new Date(2018, 10, 1).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat strawberry 🍓\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat watermelon 🍉\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Get a massage 💆‍♂️💆‍♀️\", tag: \"activity\" },\r\n    { name: \"Bake a applepie 🥧🍪\", last: new Date(2018, 7, 13).getTime() },\r\n    { name: \"Basketball 🏀\", tag: \"activity\" },\r\n    { name: \"Bike 🚴\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Climb 🧗\", last: null, tag: \"activity\" },\r\n    { name: \"Cold shower 🥶🚿\", tag: \"activity\" },\r\n    { name: \"Dance 💃🕺\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Fasting 🍽\" },\r\n    { name: \"Football ⚽\", tag: \"activity\" },\r\n    { name: \"Guitar 🎸\", last: null, tag: \"activity\" },\r\n    { name: \"Ice bath 🥶🛀\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Ice skate ⛸️\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Meditate 🧘‍\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Read 📖\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Run 🏃\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Paint 🎨\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Play chess ♟️\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Sauna 🧖‍♂️🧖‍♀️\", tag: \"activity\" },\r\n    { name: \"Ski 🎿\", tag: \"activity\" },\r\n    { name: \"Swim 🏊\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Theatre 🎭\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Yoga 🧘\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Watch a movie 🎬\", last: null, tag: \"activity\" },\r\n    { name: \"Wrestle 🤼\", last: null, tag: \"activity\" },\r\n    { name: \"Cook pasta 🍝\", last: null },\r\n    { name: \"Beach 🏖\", last: null, tag: \"places\" },\r\n    { name: \"Botanical garden 🌿\", last: null, tag: \"places\" },\r\n    { name: \"Cemetery ⚱️\", last: null, tag: \"places\" },\r\n    { name: \"Museum 🖼\", last: null, tag: \"places\" },\r\n    { name: \"Park 🏞\", last: null, tag: \"places\" },\r\n];\r\n\r\nconst storage: IStorage = new LocalStorage();\r\nconst tags: string[] = [\"Activity\", \"Fruit\", \"Places\", \"Vegetable\"];\r\n\r\nReactDOM.render(<App seed={experiences} storage={storage} tags={tags} />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}