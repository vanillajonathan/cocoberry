{"version":3,"sources":["components/TagList.tsx","components/AddExperienceDialog.tsx","components/EditExperienceDialog.tsx","components/ExperienceList.tsx","../OptionsSheet.tsx","components/MaybeAgainCard.tsx","components/NeverCard.tsx","../ShortcutsDialog.tsx","components/Toast.tsx","views/Home.tsx","../Preferences.tsx","../App.tsx","../serviceWorker.ts","localStorage.tsx","index.tsx"],"names":["TagList","props","handleClick","event","activeTag","currentTarget","innerText","toLowerCase","onClick","react","className","tags","map","tag","key","AddExperienceDialog","_useState","useState","name","_useState2","Object","slicedToArray","setName","_useState3","_useState4","setTag","nameInput","React","handleClose","onClose","useEffect","current","focus","backdropClassName","isOpen","tabIndex","role","type","data-dismiss","aria-label","aria-hidden","onSubmit","preventDefault","onAdd","htmlFor","id","value","onChange","target","ref","autoFocus","required","TagList_TagList","defaultProps","EditExperienceDialog","_useState5","_useState6","last","setLast","experience","onSave","parseInt","ExperienceList","compare","a","b","weekAgo","experiences","filter","x","moment","subtract","valueOf","sort","monthAgo","yearAgo","reverse","weekGroup","ExperienceList_ExperienceListGroup","onEdit","monthGroup","yearGroup","length","ExperienceListGroup","Date","toLocaleDateString","dateTime","toISOString","title","toString","fromNow","OptionsSheet_BottomSheet","open","style","zIndex","children","OptionsSheet_OptionsSheet","onDone","onDelete","MaybeAgainCard","timeAgo","NeverCard","ShortcutsDialog_ShortcutsDialog","Toast","show","aria-live","aria-atomic","message","Home","myExperiences","activeId","setExperiences","maybeAgainCardExperience","setMaybeAgainCardExperience","_useState7","_useState8","neverCardExperience","setNeverCardExperience","_useState9","_useState10","setReverse","_useState11","_useState12","search","setSearch","_useState13","_useState14","showDialog","setShowDialog","_useState15","_useState16","showEditDialog","setShowEditDialog","_useState17","_useState18","showShortcutsDialog","setShowShortcutsDialog","_useState19","_useState20","showOptions","setShowOptions","_useState21","_useState22","showTags","setShowTags","_useState23","_useState24","showToast","setShowToast","_useState25","_useState26","prefShowMaybeAgainCard","localStorage","getItem","prefShowNeverCard","_useState27","showMaybeAgainCard","_useState29","showNeverCard","timerId","handleAddExperienceButtonClick","handleCloseOptions","handleEditOpenClick","randomExperience","Math","floor","random","maybeExp","undefined","exp","includes","accessKey","placeholder","parentElement","classList","toggle","prevState","onNavigation","MaybeAgainCard_MaybeAgainCard","NeverCard_NeverCard","ExperienceList_ExperienceList","i","objectSpread","getTime","window","clearTimeout","setTimeout","AddExperienceDialog_AddExperienceDialog","uuid","concat","toConsumableArray","EditExperienceDialog_EditExperienceDialog","Toast_Toast","Preferences_Preferences","fileInput","preferences","setPreferences","handlePreferenceChanged","assign","checked","setItem","accept","reader","FileReader","onloadend","result","JSON","parse","storage","add_many","e","alert","file","files","readAsText","hidden","document","getElementById","click","json","stringify","get","File","url","URL","createObjectURL","location","href","rel","App_App","storedExperiences","seed","nav","setNav","handleNavigation","component","Home_Home","src_App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","LocalStorage","classCallCheck","this","createClass","item","push","data","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","Error","ReactDOM","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7c738e56.chunk.js","sourcesContent":["import * as React from \"react\";\r\n\r\ninterface IProps {\r\n    activeTag: string;\r\n    tags: string[];\r\n    onClick(tag: string): void;\r\n}\r\n\r\nexport const TagList: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    function handleClick(event: React.MouseEvent<HTMLElement>): void {\r\n        let activeTag = event.currentTarget.innerText.toLowerCase();\r\n        if (activeTag === props.activeTag) {\r\n            activeTag = \"\";\r\n        }\r\n        props.onClick(activeTag);\r\n    }\r\n\r\n    return (\r\n        <ul className=\"list-inline\">\r\n            {props.tags.map(tag => {\r\n                let className = \"badge \";\r\n                className += (tag.toLowerCase() === props.activeTag ? \"badge-primary\" : \"badge-light\");\r\n                return <li className=\"list-inline-item\" key={tag}><span className={className} onClick={handleClick}>{tag}</span></li>;\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { TagList } from \"./TagList\";\r\n\r\ninterface IProps {\r\n    name: string;\r\n    isOpen: boolean;\r\n    tags: string[];\r\n    onAdd(name: string, tag: string): void;\r\n    onClose(): void;\r\n}\r\n\r\nexport const AddExperienceDialog: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    const [name, setName] = useState(props.name);\r\n    const [tag, setTag] = useState(\"\");\r\n    const nameInput = React.createRef<HTMLInputElement>();\r\n\r\n    useEffect(() => {\r\n        if (nameInput.current) {\r\n            nameInput.current.focus();\r\n        }\r\n    });\r\n\r\n    function handleChange(event: React.ChangeEvent<HTMLInputElement>): void {\r\n        setName(event.target.value);\r\n    }\r\n\r\n    function handleClose(): void {\r\n        props.onClose();\r\n    }\r\n\r\n    function handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\r\n        event.preventDefault();\r\n        props.onAdd(name, tag);\r\n    }\r\n\r\n    let className = \"modal fade\";\r\n    let backdropClassName = \"fade\";\r\n    if (props.isOpen) {\r\n        className += \" d-block show\";\r\n        backdropClassName += \" modal-backdrop show\";\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={className} tabIndex={-1} role=\"dialog\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\">Add experience</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={handleClose}>\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name\">Title</label>\r\n                                    <input className=\"form-control\" id=\"name\" type=\"text\" value={name} onChange={handleChange} ref={nameInput} autoFocus required />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Tag</label>\r\n                                    <TagList\r\n                                        activeTag={tag}\r\n                                        tags={props.tags}\r\n                                        onClick={tag => setTag(tag)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={handleClose}>Close</button>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Add</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={backdropClassName} />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nAddExperienceDialog.defaultProps = {\r\n    name: \"\"\r\n}\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { TagList } from \"./TagList\";\r\nimport { IExperience } from \"../IExperience\";\r\n\r\ninterface IProps {\r\n    name: string;\r\n    isOpen: boolean;\r\n    tags: string[];\r\n    onClose(): void;\r\n    onSave(experience: IExperience): void;\r\n}\r\n\r\nexport const EditExperienceDialog: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    const [name, setName] = useState(props.name);\r\n    const [tag, setTag] = useState(\"\");\r\n    const [last, setLast] = useState(0);\r\n    const nameInput = React.createRef<HTMLInputElement>();\r\n\r\n    useEffect(() => {\r\n        if (nameInput.current) {\r\n            nameInput.current.focus();\r\n        }\r\n    });\r\n\r\n    function handleChange(event: React.ChangeEvent<HTMLInputElement>): void {\r\n        setName(event.target.value);\r\n    }\r\n\r\n    function handleTimeChange(event: React.ChangeEvent<HTMLInputElement>): void {\r\n        setLast(parseInt(event.target.value, 10));\r\n    }\r\n\r\n    function handleClose(): void {\r\n        props.onClose();\r\n    }\r\n\r\n    function handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\r\n        event.preventDefault();\r\n        const experience: IExperience = { id: \"\", name: name, tag: tag, last: last };\r\n        props.onSave(experience);\r\n    }\r\n\r\n    let className = \"modal fade\";\r\n    let backdropClassName = \"fade\";\r\n    if (props.isOpen) {\r\n        className += \" d-block show\";\r\n        backdropClassName += \" modal-backdrop show\";\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={className} tabIndex={-1} role=\"dialog\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\">Edit experience</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={handleClose}>\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name\">Title</label>\r\n                                    <input className=\"form-control\" id=\"name\" type=\"text\" value={name} onChange={handleChange} ref={nameInput} autoFocus required />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Tag</label>\r\n                                    <TagList activeTag={tag} tags={props.tags} onClick={tag => setTag(tag)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"time\">Last</label>\r\n                                    <input className=\"form-control\" id=\"time\" type=\"datetime-local\" onChange={handleTimeChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={handleClose}>Close</button>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={backdropClassName} />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nEditExperienceDialog.defaultProps = {\r\n    name: \"\"\r\n}","import * as React from \"react\";\r\nimport moment from \"moment\";\r\nimport { IExperience } from \"../IExperience\";\r\n\r\ninterface IProps {\r\n    experiences: IExperience[];\r\n    reverse?: boolean;\r\n    onClick(id: string): void;\r\n    onEdit(id: string): void;\r\n}\r\n\r\nexport const ExperienceList: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    function compare(a: IExperience, b: IExperience): number {\r\n        if (a.last == null || b.last == null) {\r\n            return 0;\r\n        }\r\n        if (a.last < b.last) {\r\n            return -1;\r\n        }\r\n        if (a.last > b.last) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    const weekAgo = props.experiences\r\n        .filter(x => x.last != null &&\r\n            x.last < moment().subtract(1, \"w\").valueOf() &&\r\n            x.last > moment().subtract(2, \"w\").valueOf()).sort(compare);\r\n\r\n    const monthAgo = props.experiences\r\n        .filter(x => x.last != null &&\r\n            x.last < moment().subtract(1, \"m\").valueOf() &&\r\n            x.last > moment().subtract(2, \"m\").valueOf()).sort(compare);\r\n\r\n    const yearAgo = props.experiences\r\n        .filter(x => x.last != null &&\r\n            x.last < moment().subtract(1, \"y\").valueOf() &&\r\n            x.last > moment().subtract(2, \"y\").valueOf()).sort(compare);\r\n\r\n    let experiences = props.experiences.sort(compare);\r\n    if (props.reverse) {\r\n        experiences = experiences.reverse();\r\n    }\r\n\r\n    const weekGroup = (\r\n        <React.Fragment>\r\n            <h2 className=\"h5\">A week ago</h2>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={weekAgo} />\r\n        </React.Fragment>);\r\n\r\n    const monthGroup = (\r\n        <React.Fragment>\r\n            <h2 className=\"h5\">A month ago</h2>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={monthAgo} />\r\n        </React.Fragment>);\r\n\r\n    const yearGroup = (\r\n        <React.Fragment>\r\n            <h2 className=\"h5\">A year ago</h2>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={yearAgo} />\r\n        </React.Fragment>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={experiences} />\r\n            {weekAgo.length > 0 && weekGroup}\r\n            {monthAgo.length > 0 && monthGroup}\r\n            {yearAgo.length > 0 && yearGroup}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\ninterface IExperienceListGroupProps {\r\n    experiences: IExperience[];\r\n    onClick(id: string): void;\r\n    onEdit(id: string): void;\r\n}\r\n\r\nconst ExperienceListGroup: React.FunctionComponent<IExperienceListGroupProps> = (props: IExperienceListGroupProps) => {\r\n    function last(experience: any): JSX.Element {\r\n        return (\r\n            <React.Fragment>\r\n                <div><small className=\"float-right text-muted\">{new Date(experience.last).toLocaleDateString(\"sv-se\")}</small></div>\r\n                <time className=\"d-block text-muted small\" dateTime={new Date(experience.last).toISOString()} title={experience.last.toString()}>{moment(experience.last).fromNow()}</time>\r\n            </React.Fragment>);\r\n    }\r\n\r\n    return (\r\n        <div className=\"list-group mb-3\">\r\n            {props.experiences.map(experience =>\r\n                <a className=\"list-group-item list-group-item-action\" key={experience.id} onClick={() => props.onClick(experience.id)}>\r\n                    {experience.name}\r\n                    {experience.last != null && last(experience)}\r\n                </a>\r\n            )}\r\n        </div>);\r\n};\r\n","import * as React from \"react\";\r\nexport const BottomSheet = (props) => {\r\n    let className = \"fixed-bottom fade\";\r\n    let backdropClassName = \"fade\";\r\n    if (props.open) {\r\n        className += \" d-block show\";\r\n        backdropClassName += \" modal-backdrop show\";\r\n    }\r\n    if (props.open) {\r\n        return (React.createElement(React.Fragment, null,\r\n            React.createElement(\"div\", { className: className, tabIndex: -1, role: \"dialog\", style: { zIndex: 2000 } }, props.children),\r\n            React.createElement(\"div\", { className: backdropClassName, onClick: props.onClose })));\r\n    }\r\n    return null;\r\n};\r\nexport const OptionsSheet = (props) => {\r\n    return (React.createElement(BottomSheet, { open: props.open, onClose: props.onClose },\r\n        React.createElement(\"div\", { className: \"list-group\" },\r\n            React.createElement(\"a\", { className: \"list-group-item\", onClick: () => props.onDone(props.id) }, \"Mark as done\"),\r\n            React.createElement(\"a\", { className: \"list-group-item\", onClick: () => props.onEdit(props.id) }, \"Edit\"),\r\n            React.createElement(\"a\", { className: \"list-group-item\", onClick: () => props.onDelete(props.id) }, \"Delete\"))));\r\n};\r\n//# sourceMappingURL=OptionsSheet.js.map","import * as React from \"react\";\r\nimport moment from \"moment\";\r\nimport { IExperience } from \"../IExperience\";\r\n\r\ninterface IProps {\r\n    experience: IExperience;\r\n    onClick(id: string): void;\r\n}\r\n\r\nexport const MaybeAgainCard: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    const timeAgo = moment(props.experience.last || 0).fromNow();\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n                <small className=\"text-muted text-uppercase\">It was {timeAgo}, Maybe again…</small>\r\n                <div>{props.experience.name}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { IExperience } from \"../IExperience\";\r\n\r\ninterface IProps {\r\n    experience: IExperience;\r\n    onClick(id: string): void;\r\n}\r\n\r\nexport const NeverCard: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n                <small className=\"text-muted text-uppercase\">You have never…</small>\r\n                <div>{props.experience.name}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nexport const ShortcutsDialog = (props) => {\r\n    let className = \"modal fade\";\r\n    let backdropClassName = \"fade\";\r\n    if (props.isOpen) {\r\n        className += \" d-block show\";\r\n        backdropClassName += \" modal-backdrop show\";\r\n    }\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"div\", { className: className, tabIndex: -1, role: \"dialog\" },\r\n            React.createElement(\"div\", { className: \"modal-dialog\", role: \"document\" },\r\n                React.createElement(\"div\", { className: \"modal-content\" },\r\n                    React.createElement(\"div\", { className: \"modal-header\" },\r\n                        React.createElement(\"h5\", { className: \"modal-title\" }, \"Keyboard Shortcuts\"),\r\n                        React.createElement(\"button\", { type: \"button\", className: \"close\", \"data-dismiss\": \"modal\", \"aria-label\": \"Close\", onClick: props.onClose },\r\n                            React.createElement(\"span\", { \"aria-hidden\": \"true\" }, \"\\u00D7\"))),\r\n                    React.createElement(\"div\", { className: \"modal-body\" },\r\n                        React.createElement(\"div\", { className: \"container-fluid\" },\r\n                            React.createElement(\"div\", { className: \"row\" },\r\n                                React.createElement(\"div\", { className: \"col-6\" },\r\n                                    React.createElement(\"kbd\", null,\r\n                                        React.createElement(\"kbd\", null, \"Shift\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"Alt\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"N\"))),\r\n                                React.createElement(\"div\", { className: \"col-6\" }, \"Add new experience\"),\r\n                                React.createElement(\"div\", { className: \"col-6\" },\r\n                                    React.createElement(\"kbd\", null,\r\n                                        React.createElement(\"kbd\", null, \"Shift\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"Alt\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"S\"))),\r\n                                React.createElement(\"div\", { className: \"col-6\" }, \"Search\"),\r\n                                React.createElement(\"div\", { className: \"col-6\" },\r\n                                    React.createElement(\"kbd\", null,\r\n                                        React.createElement(\"kbd\", null, \"Shift\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"Alt\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"P\"))),\r\n                                React.createElement(\"div\", { className: \"col-6\" }, \"Preferences\"),\r\n                                React.createElement(\"div\", { className: \"col-6\" },\r\n                                    React.createElement(\"kbd\", null,\r\n                                        React.createElement(\"kbd\", null, \"Shift\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"Alt\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"R\"))),\r\n                                React.createElement(\"div\", { className: \"col-6\" }, \"Reverse sort\")))),\r\n                    React.createElement(\"div\", { className: \"modal-footer\" },\r\n                        React.createElement(\"button\", { type: \"button\", className: \"btn btn-secondary\", \"data-dismiss\": \"modal\", onClick: props.onClose }, \"Close\"))))),\r\n        React.createElement(\"div\", { className: backdropClassName })));\r\n};\r\n//# sourceMappingURL=ShortcutsDialog.js.map","import * as React from \"react\";\r\n\r\ninterface IProps {\r\n    message: string;\r\n    show: boolean;\r\n}\r\n\r\nexport const Toast: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    let className = \"toast fixed-bottom bg-dark text-white mx-auto mb-3 fade\";\r\n    if (props.show) {\r\n        className += \" show\";\r\n    }\r\n    return (\r\n        <div className={className} role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\r\n            <div className=\"toast-body\">\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport uuid from \"uuid/v4\";\r\nimport { AddExperienceDialog } from \"../components/AddExperienceDialog\";\r\nimport { EditExperienceDialog } from \"../components/EditExperienceDialog\";\r\nimport { IExperience } from \"../IExperience\";\r\nimport { ExperienceList } from \"../components/ExperienceList\";\r\nimport { OptionsSheet } from \"../components/OptionsSheet\";\r\nimport { MaybeAgainCard } from \"../components/MaybeAgainCard\";\r\nimport { NeverCard } from \"../components/NeverCard\";\r\nimport { ShortcutsDialog } from \"../components/ShortcutsDialog\";\r\nimport { TagList } from \"../components/TagList\";\r\nimport { Toast } from \"../components/Toast\";\r\nimport \"./Home.css\";\r\n\r\ninterface IProps {\r\n    experiences: IExperience[];\r\n    tags: string[];\r\n    onNavigation(component: string): void;\r\n}\r\n\r\nexport const Home: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    const [activeId, setActiveId] = useState(\"\");\r\n    //const [experiences, setExperiences] = useState(props.storage.get());\r\n    const [experiences, setExperiences] = useState(props.experiences);\r\n    const [maybeAgainCardExperience, setMaybeAgainCardExperience] = useState<IExperience | null>(null);\r\n    const [neverCardExperience, setNeverCardExperience] = useState<IExperience | null>(null);\r\n    const [reverse, setReverse] = useState(false);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [showDialog, setShowDialog] = useState(false);\r\n    const [showEditDialog, setShowEditDialog] = useState(false);\r\n    const [showShortcutsDialog, setShowShortcutsDialog] = useState(false);\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [showTags, setShowTags] = useState(false);\r\n    const [showToast, setShowToast] = useState(false);\r\n    const [tag, setTag] = useState(\"\");\r\n\r\n    const prefShowMaybeAgainCard = localStorage.getItem(\"showMaybeAgainCard\") || \"false\";\r\n    const prefShowNeverCard = localStorage.getItem(\"showNeverCard\") || \"true\";\r\n\r\n    const [showMaybeAgainCard] = useState(prefShowMaybeAgainCard === \"true\");\r\n    const [showNeverCard] = useState(prefShowNeverCard === \"true\");\r\n\r\n    let timerId: number = 0;\r\n\r\n    useEffect(() => {\r\n        if (props.experiences.length !== 0) {\r\n            const maybeExp = randomExperience(props.experiences.filter(x => x.last !== null && x.last !== undefined));\r\n            setMaybeAgainCardExperience(maybeExp);\r\n            const exp = randomExperience(props.experiences.filter(x => x.last === null));\r\n            setNeverCardExperience(exp);\r\n        }\r\n    }, []);\r\n\r\n    function handleAddExperience(name: string, tag: string): void {\r\n        setShowDialog(false);\r\n        const experience: IExperience = {\r\n            id: uuid(),\r\n            name,\r\n            tag,\r\n        };\r\n        setExperiences((prevState: IExperience[]) => [...prevState, experience]);\r\n    }\r\n\r\n    function handleAddExperienceButtonClick(): void {\r\n        setShowDialog(true);\r\n    }\r\n\r\n    function handleClick(key: string): void {\r\n        setExperiences((prevState: IExperience[]) => prevState.map(i => i.id === key ? { ...i, last: new Date().getTime() } : i));\r\n        setShowToast(true);\r\n        window.clearTimeout(timerId);\r\n        timerId = window.setTimeout(() => {\r\n            setShowToast(false);\r\n        }, 1500);\r\n    }\r\n\r\n    function handleOpenOptions(): void {\r\n        setShowOptions(true);\r\n    }\r\n\r\n    function handleCloseOptions(): void {\r\n        setShowOptions(false);\r\n    }\r\n\r\n    function handleEditOpenClick(tag: string): void {\r\n        setShowEditDialog(true);\r\n    }\r\n\r\n    function handleEditSaveClick(experience: IExperience): void {\r\n        setShowEditDialog(false);\r\n    }\r\n\r\n    function handleChange(event: React.FormEvent<HTMLInputElement>): void {\r\n        setSearch(event.currentTarget.value);\r\n    }\r\n\r\n    function handleDropdownClick(event: any): void {\r\n        event.target.parentElement.classList.toggle(\"dropup\");\r\n        setShowTags((prevState: boolean) => !prevState);\r\n    }\r\n\r\n    function handleSort(): void {\r\n        setReverse((prevState: boolean) => !prevState);\r\n    }\r\n\r\n    function handleTagClick(tag: string): void {\r\n        setTag(tag);\r\n    }\r\n\r\n    function handleClose(): void {\r\n        setShowDialog(false);\r\n    }\r\n\r\n    function randomExperience(experiences: IExperience[]): IExperience {\r\n        return experiences[Math.floor(Math.random() * experiences.length)];\r\n    }\r\n\r\n    let myExperiences: IExperience[];\r\n    if (search !== \"\" || tag !== \"\") {\r\n        myExperiences = experiences.filter(x => x.name.toLowerCase().includes(search.toLowerCase()));\r\n        if (tag !== \"\") {\r\n            myExperiences = myExperiences.filter(x => x.tag != null && x.tag.includes(tag));\r\n        }\r\n    } else {\r\n        myExperiences = experiences.filter(x => x.last != null);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <header className=\"bg-white fixed-top shadow-sm\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-white\">\r\n                    <span className=\"navbar-brand d-none d-xl-block\">Cocoberry</span>\r\n                    <div className=\"form-inline mr-auto\">\r\n                        <div className=\"input-group\">\r\n                            <input className=\"form-control\" type=\"search\" accessKey=\"s\" placeholder=\"Search…\" title=\"Search\" onChange={handleChange} aria-label=\"Search\" />\r\n                            <div className=\"input-group-append mr-sm-2\">\r\n                                <button className=\"btn btn-outline-success dropdown-toggle\" type=\"button\" onClick={handleDropdownClick} aria-label=\"Show tags\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"btn btn-outline-success mr-sm-2 d-none d-xl-block\" accessKey=\"?\" onClick={() => setShowShortcutsDialog(true)} title=\"Shortcuts\">K</button>\r\n                    <button className=\"btn btn-outline-success mr-sm-2 d-none d-xl-block\" accessKey=\"r\" onClick={handleSort} title=\"Sort\">▲</button>\r\n                    <button className=\"btn btn-outline-success mr-sm-2\" accessKey=\"n\" onClick={handleAddExperienceButtonClick} title=\"Add new experience\">+</button>\r\n                    <button className=\"btn btn-outline-success\" accessKey=\"p\" onClick={() => props.onNavigation(\"Preferences\")}>☰</button>\r\n                </nav>\r\n                {showTags &&\r\n                    <div className=\"container\">\r\n                        <TagList activeTag={tag} tags={props.tags} onClick={handleTagClick} />\r\n                    </div>\r\n                }\r\n            </header>\r\n            <main className=\"App container\">\r\n                {showMaybeAgainCard && search === \"\" && tag === \"\" && maybeAgainCardExperience &&\r\n                    <MaybeAgainCard experience={maybeAgainCardExperience} onClick={handleEditOpenClick} />\r\n                }\r\n                {showNeverCard && search === \"\" && tag === \"\" && neverCardExperience &&\r\n                    <NeverCard experience={neverCardExperience} onClick={handleEditOpenClick} />\r\n                }\r\n                <ExperienceList experiences={myExperiences} reverse={reverse} onClick={handleClick} onEdit={handleEditOpenClick} />\r\n                {search !== \"\" && myExperiences.length === 0 &&\r\n                    <React.Fragment>\r\n                        <p>There are no matched experiences.</p>\r\n                        <button className=\"btn btn-outline-secondary\" onClick={handleAddExperienceButtonClick}>Add new experience</button>\r\n                    </React.Fragment>\r\n                }\r\n            </main>\r\n            <AddExperienceDialog name={search} isOpen={showDialog} tags={props.tags} onAdd={handleAddExperience} onClose={handleClose} />\r\n            <EditExperienceDialog name={search} isOpen={showEditDialog} tags={props.tags} onSave={handleEditSaveClick} onClose={handleClose} />\r\n            <ShortcutsDialog isOpen={showShortcutsDialog} onClose={() => setShowShortcutsDialog(false)} />\r\n            <OptionsSheet\r\n                id={activeId}\r\n                open={showOptions}\r\n                onClose={handleCloseOptions}\r\n                onDelete={handleCloseOptions}\r\n                onDone={handleCloseOptions}\r\n                onEdit={handleCloseOptions}\r\n            />\r\n            <Toast message=\"Marked as done\" show={showToast} />\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nexport const Preferences = (props) => {\r\n    const fileInput = React.createRef();\r\n    const prefShowMaybeAgainCard = localStorage.getItem(\"showMaybeAgainCard\") || \"false\";\r\n    const prefShowNeverCard = localStorage.getItem(\"showNeverCard\") || \"true\";\r\n    const [preferences, setPreferences] = useState({\r\n        showMaybeAgainCard: prefShowMaybeAgainCard === \"true\",\r\n        showNeverCard: prefShowNeverCard === \"true\",\r\n    });\r\n    function handleExport() {\r\n        const json = JSON.stringify(props.storage.get());\r\n        const file = new File([json], \"cocoberry.json\", { type: \"octet/stream\" });\r\n        const url = window.URL.createObjectURL(file);\r\n        window.location.assign(url);\r\n    }\r\n    function handleBrowse() {\r\n        const elem = document.getElementById(\"file\");\r\n        const input = elem;\r\n        input.click();\r\n    }\r\n    function handleImport() {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n            if (typeof reader.result === \"string\") {\r\n                try {\r\n                    const experiences = JSON.parse(reader.result);\r\n                    //props.onImport(experiences);\r\n                    props.storage.add_many(experiences);\r\n                }\r\n                catch (e) {\r\n                    alert(e);\r\n                }\r\n            }\r\n        };\r\n        const file = fileInput.current.files[0];\r\n        reader.readAsText(file);\r\n    }\r\n    function handlePreferenceChanged(event) {\r\n        const currentTarget = event.currentTarget;\r\n        setPreferences((prevState) => {\r\n            const preferences = Object.assign({}, prevState);\r\n            preferences[currentTarget.id] = currentTarget.checked;\r\n            return preferences;\r\n        });\r\n        localStorage.setItem(currentTarget.id, currentTarget.checked.toString());\r\n    }\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"header\", { className: \"fixed-top shadow-sm\" },\r\n            React.createElement(\"nav\", { className: \"navbar navbar-expand-lg navbar-light bg-white\" },\r\n                React.createElement(\"button\", { className: \"btn btn-outline-success\", accessKey: \"b\", onClick: () => props.onNavigation(\"\") }, \"Back\"))),\r\n        React.createElement(\"main\", { className: \"App container\" },\r\n            React.createElement(\"div\", { className: \"list-group mb-3\" },\r\n                React.createElement(\"div\", { className: \"list-group-item\" },\r\n                    React.createElement(\"div\", { className: \"custom-control custom-switch\" },\r\n                        React.createElement(\"input\", { className: \"custom-control-input\", id: \"showMaybeAgainCard\", type: \"checkbox\", checked: preferences.showMaybeAgainCard, onChange: handlePreferenceChanged }),\r\n                        React.createElement(\"label\", { className: \"custom-control-label\", htmlFor: \"showMaybeAgainCard\" }, \"Show the maybe-again card\"))),\r\n                React.createElement(\"div\", { className: \"list-group-item\" },\r\n                    React.createElement(\"div\", { className: \"custom-control custom-switch\" },\r\n                        React.createElement(\"input\", { className: \"custom-control-input\", id: \"showNeverCard\", type: \"checkbox\", checked: preferences.showNeverCard, onChange: handlePreferenceChanged }),\r\n                        React.createElement(\"label\", { className: \"custom-control-label\", htmlFor: \"showNeverCard\" }, \"Show the you-have-never card\")))),\r\n            React.createElement(\"div\", { className: \"card\" },\r\n                React.createElement(\"div\", { className: \"card-body\" },\r\n                    React.createElement(\"h5\", { className: \"card-title\" }, \"Export and import experiences\"),\r\n                    React.createElement(\"p\", { className: \"card-text\" }, \"Your experiences can be imported and exported. They are stored in the JSON format.\"),\r\n                    React.createElement(\"input\", { className: \"form-control-file\", id: \"file\", type: \"file\", accept: \"application/json\", onChange: handleImport, ref: fileInput, hidden: true, required: true })),\r\n                React.createElement(\"div\", { className: \"list-group list-group-flush\" },\r\n                    React.createElement(\"button\", { className: \"list-group-item list-group-item-action\", type: \"button\", accessKey: \"i\", onClick: handleBrowse }, \"Import from file\"),\r\n                    React.createElement(\"button\", { className: \"list-group-item list-group-item-action\", type: \"button\", accessKey: \"e\", onClick: handleExport }, \"Export to file\")))),\r\n        React.createElement(\"footer\", { className: \"container mt-3\" },\r\n            React.createElement(\"p\", null,\r\n                React.createElement(\"a\", { href: \"https://github.com/vanillajonathan/cocoberry\", rel: \"noopener\", target: \"_blank\" }, \"Cocoberry on GitHub\")),\r\n            React.createElement(\"p\", null, \"Built with \\u2764 by Jonathan\"))));\r\n};\r\n//# sourceMappingURL=Preferences.js.map","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Home } from \"./views/Home\";\r\nimport { Preferences } from \"./views/Preferences\";\r\nconst App = (props) => {\r\n    const storedExperiences = props.storage.get();\r\n    if (storedExperiences.length === 0) {\r\n        props.storage.add_many(props.seed);\r\n    }\r\n    const [nav, setNav] = useState(\"\");\r\n    function handleNavigation(component) {\r\n        setNav(component);\r\n    }\r\n    if (nav === \"Preferences\") {\r\n        return (React.createElement(Preferences, { storage: props.storage, onNavigation: handleNavigation }));\r\n    }\r\n    return (React.createElement(Home, { experiences: storedExperiences, onNavigation: handleNavigation, tags: props.tags }));\r\n};\r\nApp.defaultProps = {\r\n    seed: [],\r\n    tags: [],\r\n};\r\nexport default App;\r\n//# sourceMappingURL=App.js.map","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log('This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA');\r\n                });\r\n            }\r\n            else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n        registration.onupdatefound = () => {\r\n            const installingWorker = registration.installing;\r\n            if (installingWorker == null) {\r\n                return;\r\n            }\r\n            installingWorker.onstatechange = () => {\r\n                if (installingWorker.state === 'installed') {\r\n                    if (navigator.serviceWorker.controller) {\r\n                        // At this point, the updated precached content has been fetched,\r\n                        // but the previous service worker will still serve the older\r\n                        // content until all client tabs are closed.\r\n                        console.log('New content is available and will be used when all ' +\r\n                            'tabs for this page are closed. See https://bit.ly/CRA-PWA.');\r\n                        // Execute callback\r\n                        if (config && config.onUpdate) {\r\n                            config.onUpdate(registration);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // At this point, everything has been precached.\r\n                        // It's the perfect time to display a\r\n                        // \"Content is cached for offline use.\" message.\r\n                        console.log('Content is cached for offline use.');\r\n                        // Execute callback\r\n                        if (config && config.onSuccess) {\r\n                            config.onSuccess(registration);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        };\r\n    })\r\n        .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (response.status === 404 ||\r\n            (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n            // No service worker found. Probably a different app. Reload the page.\r\n            navigator.serviceWorker.ready.then(registration => {\r\n                registration.unregister().then(() => {\r\n                    window.location.reload();\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            // Service worker found. Proceed as normal.\r\n            registerValidSW(swUrl, config);\r\n        }\r\n    })\r\n        .catch(() => {\r\n        console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=serviceWorker.js.map","import uuid from \"uuid/v4\";\r\nimport { IStorage, INewExperience } from \"./IStorage\";\r\nimport { IExperience } from \"./IExperience\";\r\n\r\nexport class LocalStorage implements IStorage {\r\n    public add(experience: INewExperience): void {\r\n        const experiences = this.get();\r\n        const item: IExperience = {\r\n            id: uuid(),\r\n            last: experience.last,\r\n            name: experience.name,\r\n            tag: experience.tag,\r\n        };\r\n        experiences.push(item);\r\n        localStorage.setItem(\"experiences\", JSON.stringify(experiences));\r\n    }\r\n\r\n    public add_many(experiences: INewExperience[]): void {\r\n        const data = this.get();\r\n        for (const experience of experiences) {\r\n            const item: IExperience = {\r\n                id: uuid(),\r\n                last: experience.last,\r\n                name: experience.name,\r\n                tag: experience.tag,\r\n            };\r\n            data.push(item);\r\n        }\r\n        localStorage.setItem(\"experiences\", JSON.stringify(data));\r\n    }\r\n\r\n    public delete(id: string): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    public get(): IExperience[] {\r\n        const experiences = localStorage.getItem(\"experiences\");\r\n        if (experiences === null) {\r\n            return [];\r\n        }\r\n        return JSON.parse(experiences);\r\n    }\r\n\r\n    public update(experience: IExperience): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { IStorage, INewExperience } from \"./IStorage\";\r\nimport { LocalStorage } from \"./localStorage\";\r\n//import * as data from \"./seed.json\";\r\n\r\nimport seed from \"./seed.json\";\r\n\r\nconst experiences: INewExperience[] = [\r\n    { name: \"Eat apple 🍏\", last: new Date(2018, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat avocado 🥑\", last: new Date(2016, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat banana 🍌\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat broccoli 🥦\", tag: \"vegetable\" },\r\n    { name: \"Eat carrot 🥕\", tag: \"vegetable\" },\r\n    { name: \"Eat cherries 🍒\", last: new Date(2017, 5, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat chili 🌶️\", tag: \"fruit\" },\r\n    { name: \"Eat cucumber 🥒\", last: new Date(2017, 6, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat corn 🌽\", last: new Date(2017, 6, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat coconut 🥥\", last: new Date(2017, 7, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat eggplant 🍆\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat garlic\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat grapes 🍇\", last: new Date(2017, 9, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat leafy green 🥬\", tag: \"fruit\" },\r\n    { name: \"Eat lemon 🍋\", tag: \"fruit\" },\r\n    { name: \"Eat kiwi 🥝\", last: new Date(2017, 10, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat mango 🥭\", last: new Date(2017, 11, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat melon 🍈\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat mushroom 🍄\", last: new Date(2017, 4, 3).getTime() },\r\n    { name: \"Eat onion\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat orange 🍊\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat peach 🍑\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat peanuts 🥜\", tag: \"fruit\" },\r\n    { name: \"Eat pear 🍐\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat pineapple 🍍\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat potato 🥔\", last: new Date(2018, 10, 1).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat tomato 🍅\", last: new Date(2018, 10, 1).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat strawberry 🍓\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat watermelon 🍉\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Get a massage 💆‍♂️💆‍♀️\", tag: \"activity\" },\r\n    { name: \"Bake a applepie 🥧🍪\", last: new Date(2018, 7, 13).getTime() },\r\n    { name: \"Basketball 🏀\", tag: \"activity\" },\r\n    { name: \"Bike 🚴\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Bowling 🎳\", last: null, tag: \"activity\" },\r\n    { name: \"Box 🥊\", last: null, tag: \"activity\" },\r\n    { name: \"Climb 🧗\", last: null, tag: \"activity\" },\r\n    { name: \"Cold shower 🥶🚿\", tag: \"activity\" },\r\n    { name: \"Dance 💃🕺\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Fasting 🍽\" },\r\n    { name: \"Football ⚽\", tag: \"activity\" },\r\n    { name: \"Guitar 🎸\", last: null, tag: \"activity\" },\r\n    { name: \"Ice bath 🥶🛀\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Ice skate ⛸️\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Meditate 🧘‍\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Read 📖\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Run 🏃\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Paint 🎨\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Play chess ♟️\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Play pool 🎱\", last: null, tag: \"activity\" },\r\n    { name: \"Sauna 🧖‍♂️🧖‍♀️\", tag: \"activity\" },\r\n    { name: \"Ski 🎿\", tag: \"activity\" },\r\n    { name: \"Swim 🏊\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Theatre 🎭\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Yoga 🧘\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Watch a movie 🎬\", last: null, tag: \"activity\" },\r\n    { name: \"Wrestle 🤼\", last: null, tag: \"activity\" },\r\n    { name: \"Cook pasta 🍝\", last: null },\r\n    { name: \"Beach 🏖\", last: null, tag: \"places\" },\r\n    { name: \"Botanical garden 🌿\", last: null, tag: \"places\" },\r\n    { name: \"Cemetery ⚱️\", last: null, tag: \"places\" },\r\n    { name: \"Museum 🖼\", last: null, tag: \"places\" },\r\n    { name: \"Park 🏞\", last: null, tag: \"places\" },\r\n];\r\n\r\nconst storage: IStorage = new LocalStorage();\r\nconst tags: string[] = [\"Activity\", \"Fruit\", \"Places\", \"Vegetable\"];\r\n\r\nReactDOM.render(<App seed={experiences} storage={storage} tags={tags} />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}