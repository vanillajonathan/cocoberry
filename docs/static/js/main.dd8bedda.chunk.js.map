{"version":3,"sources":["components/TagList.tsx","../AddExperienceDialog.tsx","../EditExperienceDialog.tsx","components/ExperienceList.tsx","../OptionsSheet.tsx","components/MaybeAgainCard.tsx","components/NeverCard.tsx","components/PwaInstaller.tsx","../ShortcutsDialog.tsx","components/Toast.tsx","views/Home.tsx","../Preferences.tsx","../App.tsx","../serviceWorker.ts","localStorage.tsx","index.tsx"],"names":["TagList","props","handleClick","event","activeTag","currentTarget","innerText","toLowerCase","onClick","className","tags","map","tag","key","ExperienceList","compare","a","b","last","weekAgo","experiences","filter","x","moment","subtract","valueOf","sort","monthAgo","yearAgo","reverse","weekGroup","onEdit","monthGroup","yearGroup","length","ExperienceListGroup","experience","id","name","Date","toLocaleDateString","dateTime","toISOString","title","toString","fromNow","MaybeAgainCard","timeAgo","NeverCard","PwaInstaller","deferredPrompt","useState","showInstallPrompt","setShowInstallPrompt","beforeInstallPrompt","useEffect","window","addEventListener","removeEventListener","prompt","userChoice","then","choiceResult","outcome","console","log","Toast","show","role","aria-live","aria-atomic","message","Home","myExperiences","activeId","setActiveId","activeExperience","setActiveExperience","setExperiences","maybeAgainCardExperience","setMaybeAgainCardExperience","neverCardExperience","setNeverCardExperience","setReverse","search","setSearch","showAddDialog","setShowDialog","showEditDialog","setShowEditDialog","showShortcutsDialog","setShowShortcutsDialog","showOptions","setShowOptions","showTags","setShowTags","showToast","setShowToast","setTag","toastMessage","setToastMessage","prefShowMaybeAgainCard","localStorage","getItem","prefShowNeverCard","showMaybeAgainCard","showNeverCard","timerId","handleAddExperienceButtonClick","handleEditOpenClick","handleClose","randomExperience","Math","floor","random","maybeExp","undefined","exp","includes","type","accessKey","placeholder","onChange","value","aria-label","target","parentElement","classList","toggle","prevState","onNavigation","find","isOpen","onAdd","uuid","onClose","onSave","open","i","getTime","clearTimeout","setTimeout","location","hostname","catch","LocalStorage","this","get","item","push","setItem","JSON","stringify","data","Error","parse","storage","ReactDOM","seed","document","getElementById","serviceWorker"],"mappings":"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","file":"static/js/main.dd8bedda.chunk.js","sourcesContent":["import * as React from \"react\";\r\n\r\ninterface IProps {\r\n    activeTag: string;\r\n    tags: string[];\r\n    onClick(tag: string): void;\r\n}\r\n\r\nexport const TagList: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    function handleClick(event: React.MouseEvent<HTMLElement>): void {\r\n        let activeTag = event.currentTarget.innerText.toLowerCase();\r\n        if (activeTag === props.activeTag) {\r\n            activeTag = \"\";\r\n        }\r\n        props.onClick(activeTag);\r\n    }\r\n\r\n    return (\r\n        <ul className=\"list-inline\">\r\n            {props.tags.map(tag => {\r\n                let className = \"badge \";\r\n                className += (tag.toLowerCase() === props.activeTag ? \"badge-primary\" : \"badge-light\");\r\n                return <li className=\"list-inline-item\" key={tag}><span className={className} onClick={handleClick}>{tag}</span></li>;\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { TagList } from \"./TagList\";\r\nexport const AddExperienceDialog = (props) => {\r\n    const [name, setName] = useState(props.name);\r\n    const [tag, setTag] = useState(\"\");\r\n    const nameInput = React.createRef();\r\n    useEffect(() => {\r\n        if (nameInput.current) {\r\n            nameInput.current.focus();\r\n        }\r\n    });\r\n    function handleChange(event) {\r\n        setName(event.target.value);\r\n    }\r\n    function handleClose() {\r\n        props.onClose();\r\n    }\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        props.onAdd(name, tag);\r\n    }\r\n    let className = \"modal fade\";\r\n    let backdropClassName = \"fade\";\r\n    if (props.isOpen) {\r\n        className += \" d-block show\";\r\n        backdropClassName += \" modal-backdrop show\";\r\n    }\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"div\", { className: className, tabIndex: -1, role: \"dialog\" },\r\n            React.createElement(\"div\", { className: \"modal-dialog\", role: \"document\" },\r\n                React.createElement(\"div\", { className: \"modal-content\" },\r\n                    React.createElement(\"div\", { className: \"modal-header\" },\r\n                        React.createElement(\"h5\", { className: \"modal-title\" }, \"Add experience\"),\r\n                        React.createElement(\"button\", { type: \"button\", className: \"close\", \"data-dismiss\": \"modal\", \"aria-label\": \"Close\", onClick: handleClose },\r\n                            React.createElement(\"span\", { \"aria-hidden\": \"true\" }, \"\\u00D7\"))),\r\n                    React.createElement(\"form\", { onSubmit: handleSubmit },\r\n                        React.createElement(\"div\", { className: \"modal-body\" },\r\n                            React.createElement(\"div\", { className: \"form-group\" },\r\n                                React.createElement(\"label\", { htmlFor: \"name\" }, \"Title\"),\r\n                                React.createElement(\"input\", { className: \"form-control\", id: \"name\", type: \"text\", value: name, onChange: handleChange, ref: nameInput, autoFocus: true, required: true })),\r\n                            React.createElement(\"div\", { className: \"form-group\" },\r\n                                React.createElement(\"label\", null, \"Tag\"),\r\n                                React.createElement(TagList, { activeTag: tag, tags: props.tags, onClick: tag => setTag(tag) }))),\r\n                        React.createElement(\"div\", { className: \"modal-footer\" },\r\n                            React.createElement(\"button\", { type: \"button\", className: \"btn btn-secondary\", \"data-dismiss\": \"modal\", onClick: handleClose }, \"Close\"),\r\n                            React.createElement(\"button\", { type: \"submit\", className: \"btn btn-primary\" }, \"Add\")))))),\r\n        React.createElement(\"div\", { className: backdropClassName })));\r\n};\r\nAddExperienceDialog.defaultProps = {\r\n    name: \"\",\r\n};\r\n//# sourceMappingURL=AddExperienceDialog.js.map","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { TagList } from \"./TagList\";\r\nexport const EditExperienceDialog = (props) => {\r\n    const [name, setName] = useState(props.experience.name);\r\n    const [tag, setTag] = useState(props.experience.tag || \"\");\r\n    const [last, setLast] = useState(props.experience.last || 0);\r\n    const nameInput = React.createRef();\r\n    useEffect(() => {\r\n        if (nameInput.current) {\r\n            nameInput.current.focus();\r\n        }\r\n    });\r\n    function handleChange(event) {\r\n        setName(event.target.value);\r\n    }\r\n    function handleTimeChange(event) {\r\n        setLast(parseInt(event.target.value, 10));\r\n    }\r\n    function handleClose() {\r\n        props.onClose();\r\n    }\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        const experience = { id: \"\", name: name, tag: tag, last: last };\r\n        props.onSave(experience);\r\n    }\r\n    let className = \"modal fade\";\r\n    let backdropClassName = \"fade\";\r\n    if (props.isOpen) {\r\n        className += \" d-block show\";\r\n        backdropClassName += \" modal-backdrop show\";\r\n    }\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"div\", { className: className, tabIndex: -1, role: \"dialog\" },\r\n            React.createElement(\"div\", { className: \"modal-dialog\", role: \"document\" },\r\n                React.createElement(\"div\", { className: \"modal-content\" },\r\n                    React.createElement(\"div\", { className: \"modal-header\" },\r\n                        React.createElement(\"h5\", { className: \"modal-title\" }, \"Edit experience\"),\r\n                        React.createElement(\"button\", { type: \"button\", className: \"close\", \"data-dismiss\": \"modal\", \"aria-label\": \"Close\", onClick: handleClose },\r\n                            React.createElement(\"span\", { \"aria-hidden\": \"true\" }, \"\\u00D7\"))),\r\n                    React.createElement(\"form\", { onSubmit: handleSubmit },\r\n                        React.createElement(\"div\", { className: \"modal-body\" },\r\n                            React.createElement(\"div\", { className: \"form-group\" },\r\n                                React.createElement(\"label\", { htmlFor: \"name\" }, \"Title\"),\r\n                                React.createElement(\"input\", { className: \"form-control\", id: \"name\", type: \"text\", value: name, onChange: handleChange, ref: nameInput, autoFocus: true, required: true })),\r\n                            React.createElement(\"div\", { className: \"form-group\" },\r\n                                React.createElement(\"label\", null, \"Tag\"),\r\n                                React.createElement(TagList, { activeTag: tag, tags: props.tags, onClick: tag => setTag(tag) })),\r\n                            React.createElement(\"div\", { className: \"form-group\" },\r\n                                React.createElement(\"label\", { htmlFor: \"time\" }, \"Last\"),\r\n                                React.createElement(\"input\", { className: \"form-control\", id: \"time\", type: \"datetime-local\", value: last, onChange: handleTimeChange }))),\r\n                        React.createElement(\"div\", { className: \"modal-footer\" },\r\n                            React.createElement(\"button\", { type: \"button\", className: \"btn btn-secondary\", \"data-dismiss\": \"modal\", onClick: handleClose }, \"Close\"),\r\n                            React.createElement(\"button\", { type: \"submit\", className: \"btn btn-primary\" }, \"Save\")))))),\r\n        React.createElement(\"div\", { className: backdropClassName })));\r\n};\r\n//# sourceMappingURL=EditExperienceDialog.js.map","import * as React from \"react\";\r\nimport moment from \"moment\";\r\nimport { IExperience } from \"../IExperience\";\r\n\r\ninterface IProps {\r\n    experiences: IExperience[];\r\n    reverse?: boolean;\r\n    onClick(id: string): void;\r\n    onEdit(id: string): void;\r\n}\r\n\r\nexport const ExperienceList: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    function compare(a: IExperience, b: IExperience): number {\r\n        if (a.last == null || b.last == null) {\r\n            return 0;\r\n        }\r\n        if (a.last < b.last) {\r\n            return -1;\r\n        }\r\n        if (a.last > b.last) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    const weekAgo = props.experiences\r\n        .filter(x => x.last != null &&\r\n            x.last < moment().subtract(1, \"w\").valueOf() &&\r\n            x.last > moment().subtract(2, \"w\").valueOf()).sort(compare);\r\n\r\n    const monthAgo = props.experiences\r\n        .filter(x => x.last != null &&\r\n            x.last < moment().subtract(1, \"m\").valueOf() &&\r\n            x.last > moment().subtract(2, \"m\").valueOf()).sort(compare);\r\n\r\n    const yearAgo = props.experiences\r\n        .filter(x => x.last != null &&\r\n            x.last < moment().subtract(1, \"y\").valueOf() &&\r\n            x.last > moment().subtract(2, \"y\").valueOf()).sort(compare);\r\n\r\n    let experiences = props.experiences.sort(compare);\r\n    if (props.reverse) {\r\n        experiences = experiences.reverse();\r\n    }\r\n\r\n    const weekGroup = (\r\n        <React.Fragment>\r\n            <h2 className=\"h5\">A week ago</h2>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={weekAgo} />\r\n        </React.Fragment>);\r\n\r\n    const monthGroup = (\r\n        <React.Fragment>\r\n            <h2 className=\"h5\">A month ago</h2>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={monthAgo} />\r\n        </React.Fragment>);\r\n\r\n    const yearGroup = (\r\n        <React.Fragment>\r\n            <h2 className=\"h5\">A year ago</h2>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={yearAgo} />\r\n        </React.Fragment>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={experiences} />\r\n            {weekAgo.length > 0 && weekGroup}\r\n            {monthAgo.length > 0 && monthGroup}\r\n            {yearAgo.length > 0 && yearGroup}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\ninterface IExperienceListGroupProps {\r\n    experiences: IExperience[];\r\n    onClick(id: string): void;\r\n    onEdit(id: string): void;\r\n}\r\n\r\nconst ExperienceListGroup: React.FunctionComponent<IExperienceListGroupProps> = (props: IExperienceListGroupProps) => {\r\n    function last(experience: any): JSX.Element {\r\n        return (\r\n            <React.Fragment>\r\n                <div><small className=\"float-right text-muted\">{new Date(experience.last).toLocaleDateString(\"sv-se\")}</small></div>\r\n                <time className=\"d-block text-muted small\" dateTime={new Date(experience.last).toISOString()} title={experience.last.toString()}>{moment(experience.last).fromNow()}</time>\r\n            </React.Fragment>);\r\n    }\r\n\r\n    return (\r\n        <div className=\"list-group mb-3\">\r\n            {props.experiences.map(experience =>\r\n                <a className=\"list-group-item list-group-item-action\" key={experience.id} onClick={() => props.onClick(experience.id)}>\r\n                    {experience.name}\r\n                    {experience.last != null && last(experience)}\r\n                </a>\r\n            )}\r\n        </div>);\r\n};\r\n","import * as React from \"react\";\r\nexport const BottomSheet = (props) => {\r\n    let className = \"fixed-bottom fade\";\r\n    let backdropClassName = \"fade\";\r\n    if (props.open) {\r\n        className += \" d-block show\";\r\n        backdropClassName += \" modal-backdrop show\";\r\n    }\r\n    if (props.open) {\r\n        return (React.createElement(React.Fragment, null,\r\n            React.createElement(\"div\", { className: className, tabIndex: -1, role: \"dialog\", style: { zIndex: 2000 } }, props.children),\r\n            React.createElement(\"div\", { className: backdropClassName, onClick: props.onClose })));\r\n    }\r\n    return null;\r\n};\r\nexport const OptionsSheet = (props) => {\r\n    return (React.createElement(BottomSheet, { open: props.open, onClose: props.onClose },\r\n        React.createElement(\"div\", { className: \"list-group list-group-flush\" },\r\n            React.createElement(\"a\", { className: \"list-group-item list-group-item-action\", onClick: () => props.onDone(props.id) }, \"Mark as done\"),\r\n            React.createElement(\"a\", { className: \"list-group-item list-group-item-action\", onClick: () => props.onEdit(props.id) }, \"Edit\"),\r\n            React.createElement(\"a\", { className: \"list-group-item list-group-item-action\", onClick: () => props.onDelete(props.id) }, \"Delete\"))));\r\n};\r\n//# sourceMappingURL=OptionsSheet.js.map","import * as React from \"react\";\r\nimport moment from \"moment\";\r\nimport { IExperience } from \"../IExperience\";\r\n\r\ninterface IProps {\r\n    experience: IExperience;\r\n    onClick(id: string): void;\r\n}\r\n\r\nexport const MaybeAgainCard: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    const timeAgo = moment(props.experience.last || 0).fromNow();\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n                <small className=\"text-muted text-uppercase\">It was {timeAgo}, Maybe again…</small>\r\n                <div>{props.experience.name}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { IExperience } from \"../IExperience\";\r\n\r\ninterface IProps {\r\n    experience: IExperience;\r\n    onClick(id: string): void;\r\n}\r\n\r\nexport const NeverCard: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n                <small className=\"text-muted text-uppercase\">You have never…</small>\r\n                <div>{props.experience.name}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport const PwaInstaller: React.FunctionComponent = () => {\r\n    let deferredPrompt: any;\r\n    const [showInstallPrompt, setShowInstallPrompt] = useState(false);\r\n\r\n    function handleInstall(): void {\r\n        setShowInstallPrompt(false);\r\n        deferredPrompt.prompt();\r\n        deferredPrompt.userChoice.then((choiceResult: any) => {\r\n            if (choiceResult.outcome === \"accepted\") {\r\n                console.log(\"User accepted the A2HS prompt\");\r\n            } else {\r\n                console.log(\"User dismissed the A2HS prompt\");\r\n            }\r\n            deferredPrompt = null;\r\n        });\r\n    }\r\n\r\n    function beforeInstallPrompt(event: Event): void {\r\n        deferredPrompt = event;\r\n        setShowInstallPrompt(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"beforeinstallprompt\", beforeInstallPrompt);\r\n        return () => {\r\n            window.removeEventListener(\"beforeinstallprompt\", beforeInstallPrompt);\r\n        };\r\n    });\r\n\r\n    if (showInstallPrompt) {\r\n        return (\r\n            <button className=\"btn btn-outline-success mr-sm-2 d-none d-xl-block\" onClick={handleInstall} title=\"Install web application\">Install</button>\r\n        );\r\n    }\r\n\r\n    return null;\r\n};\r\n","import * as React from \"react\";\r\nexport const ShortcutsDialog = (props) => {\r\n    let className = \"modal fade\";\r\n    let backdropClassName = \"fade\";\r\n    if (props.isOpen) {\r\n        className += \" d-block show\";\r\n        backdropClassName += \" modal-backdrop show\";\r\n    }\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"div\", { className: className, tabIndex: -1, role: \"dialog\" },\r\n            React.createElement(\"div\", { className: \"modal-dialog\", role: \"document\" },\r\n                React.createElement(\"div\", { className: \"modal-content\" },\r\n                    React.createElement(\"div\", { className: \"modal-header\" },\r\n                        React.createElement(\"h5\", { className: \"modal-title\" }, \"Keyboard Shortcuts\"),\r\n                        React.createElement(\"button\", { type: \"button\", className: \"close\", \"data-dismiss\": \"modal\", \"aria-label\": \"Close\", onClick: props.onClose },\r\n                            React.createElement(\"span\", { \"aria-hidden\": \"true\" }, \"\\u00D7\"))),\r\n                    React.createElement(\"div\", { className: \"modal-body\" },\r\n                        React.createElement(\"div\", { className: \"container-fluid\" },\r\n                            React.createElement(\"div\", { className: \"row\" },\r\n                                React.createElement(\"div\", { className: \"col-6\" },\r\n                                    React.createElement(\"kbd\", null,\r\n                                        React.createElement(\"kbd\", null, \"Shift\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"Alt\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"N\"))),\r\n                                React.createElement(\"div\", { className: \"col-6\" }, \"Add new experience\"),\r\n                                React.createElement(\"div\", { className: \"col-6\" },\r\n                                    React.createElement(\"kbd\", null,\r\n                                        React.createElement(\"kbd\", null, \"Shift\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"Alt\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"S\"))),\r\n                                React.createElement(\"div\", { className: \"col-6\" }, \"Search\"),\r\n                                React.createElement(\"div\", { className: \"col-6\" },\r\n                                    React.createElement(\"kbd\", null,\r\n                                        React.createElement(\"kbd\", null, \"Shift\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"Alt\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"P\"))),\r\n                                React.createElement(\"div\", { className: \"col-6\" }, \"Preferences\"),\r\n                                React.createElement(\"div\", { className: \"col-6\" },\r\n                                    React.createElement(\"kbd\", null,\r\n                                        React.createElement(\"kbd\", null, \"Shift\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"Alt\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"R\"))),\r\n                                React.createElement(\"div\", { className: \"col-6\" }, \"Reverse sort\")))),\r\n                    React.createElement(\"div\", { className: \"modal-footer\" },\r\n                        React.createElement(\"button\", { type: \"button\", className: \"btn btn-secondary\", \"data-dismiss\": \"modal\", onClick: props.onClose }, \"Close\"))))),\r\n        React.createElement(\"div\", { className: backdropClassName })));\r\n};\r\n//# sourceMappingURL=ShortcutsDialog.js.map","import * as React from \"react\";\r\n\r\ninterface IProps {\r\n    message: string;\r\n    show: boolean;\r\n}\r\n\r\nexport const Toast: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    let className = \"toast fixed-bottom bg-dark text-white mx-auto mb-3 fade\";\r\n    if (props.show) {\r\n        className += \" show\";\r\n    }\r\n    return (\r\n        <div className={className} role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\r\n            <div className=\"toast-body\">\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport uuid from \"uuid/v4\";\r\nimport { AddExperienceDialog } from \"../components/AddExperienceDialog\";\r\nimport { EditExperienceDialog } from \"../components/EditExperienceDialog\";\r\nimport { IExperience } from \"../IExperience\";\r\nimport { ExperienceList } from \"../components/ExperienceList\";\r\nimport { BottomSheet } from \"../components/OptionsSheet\";\r\nimport { MaybeAgainCard } from \"../components/MaybeAgainCard\";\r\nimport { NeverCard } from \"../components/NeverCard\";\r\nimport { PwaInstaller } from \"../components/PwaInstaller\";\r\nimport { ShortcutsDialog } from \"../components/ShortcutsDialog\";\r\nimport { TagList } from \"../components/TagList\";\r\nimport { Toast } from \"../components/Toast\";\r\nimport \"./Home.css\";\r\n\r\ninterface IProps {\r\n    experiences: IExperience[];\r\n    tags: string[];\r\n    onNavigation(component: string): void;\r\n}\r\n\r\nexport const Home: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    const [activeId, setActiveId] = useState(\"\");\r\n    const [activeExperience, setActiveExperience] = useState<IExperience>();\r\n    //const [experiences, setExperiences] = useState(props.storage.get());\r\n    const [experiences, setExperiences] = useState(props.experiences);\r\n    const [maybeAgainCardExperience, setMaybeAgainCardExperience] = useState<IExperience | null>(null);\r\n    const [neverCardExperience, setNeverCardExperience] = useState<IExperience | null>(null);\r\n    const [reverse, setReverse] = useState(false);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [showAddDialog, setShowDialog] = useState(false);\r\n    const [showEditDialog, setShowEditDialog] = useState(false);\r\n    const [showShortcutsDialog, setShowShortcutsDialog] = useState(false);\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [showTags, setShowTags] = useState(false);\r\n    const [showToast, setShowToast] = useState(false);\r\n    const [tag, setTag] = useState(\"\");\r\n    const [toastMessage, setToastMessage] = useState(\"\");\r\n\r\n    const prefShowMaybeAgainCard = localStorage.getItem(\"showMaybeAgainCard\") || \"false\";\r\n    const prefShowNeverCard = localStorage.getItem(\"showNeverCard\") || \"true\";\r\n\r\n    const [showMaybeAgainCard] = useState(prefShowMaybeAgainCard === \"true\");\r\n    const [showNeverCard] = useState(prefShowNeverCard === \"true\");\r\n\r\n    let timerId: number = 0;\r\n\r\n    useEffect(() => {\r\n        if (props.experiences.length !== 0) {\r\n            const maybeExp = randomExperience(props.experiences.filter(x => x.last !== null && x.last !== undefined));\r\n            setMaybeAgainCardExperience(maybeExp);\r\n            const exp = randomExperience(props.experiences.filter(x => x.last === null));\r\n            setNeverCardExperience(exp);\r\n        }\r\n    }, []);\r\n\r\n    function handleAddExperience(name: string, tag: string): void {\r\n        setShowDialog(false);\r\n        const experience: IExperience = {\r\n            id: uuid(),\r\n            name,\r\n            tag,\r\n        };\r\n        setExperiences((prevState: IExperience[]) => [...prevState, experience]);\r\n    }\r\n\r\n    function handleAddExperienceButtonClick(): void {\r\n        setShowDialog(true);\r\n    }\r\n\r\n    function handleClick(key: string): void {\r\n        setShowOptions(false);\r\n        setExperiences((prevState: IExperience[]) => prevState.map(i => i.id === key ? { ...i, last: new Date().getTime() } : i));\r\n        setToastMessage(\"Marked as done\");\r\n        setShowToast(true);\r\n        window.clearTimeout(timerId);\r\n        timerId = window.setTimeout(() => {\r\n            setShowToast(false);\r\n        }, 1500);\r\n    }\r\n\r\n    function handleDelete(key: string): void {\r\n        setShowOptions(false);\r\n        setToastMessage(\"Removed\");\r\n        setShowToast(true);\r\n        window.clearTimeout(timerId);\r\n        timerId = window.setTimeout(() => {\r\n            setShowToast(false);\r\n        }, 1500);\r\n    }\r\n\r\n    function handleOpenOptions(id: string): void {\r\n        setActiveId(id);\r\n        const exp = experiences.find(x => x.id === id);\r\n        setActiveExperience(exp);\r\n        setShowOptions(true);\r\n    }\r\n\r\n    function handleCloseOptions(): void {\r\n        setShowOptions(false);\r\n    }\r\n\r\n    function handleEditOpenClick(tag: string): void {\r\n        setShowOptions(false);\r\n        setShowEditDialog(true);  \r\n    }\r\n\r\n    function handleEditSaveClick(experience: IExperience): void {\r\n        setShowEditDialog(false);\r\n    }\r\n\r\n    function handleChange(event: React.FormEvent<HTMLInputElement>): void {\r\n        setSearch(event.currentTarget.value);\r\n    }\r\n\r\n    function handleDropdownClick(event: any): void {\r\n        event.target.parentElement.classList.toggle(\"dropup\");\r\n        setShowTags((prevState: boolean) => !prevState);\r\n    }\r\n\r\n    function handleSort(): void {\r\n        setReverse((prevState: boolean) => !prevState);\r\n    }\r\n\r\n    function handleTagClick(tag: string): void {\r\n        setTag(tag);\r\n    }\r\n\r\n    function handleClose(): void {\r\n        setShowDialog(false);\r\n        setShowEditDialog(false);\r\n    }\r\n\r\n    function randomExperience(experiences: IExperience[]): IExperience {\r\n        return experiences[Math.floor(Math.random() * experiences.length)];\r\n    }\r\n\r\n    let myExperiences: IExperience[];\r\n    if (search !== \"\" || tag !== \"\") {\r\n        myExperiences = experiences.filter(x => x.name.toLowerCase().includes(search.toLowerCase()));\r\n        if (tag !== \"\") {\r\n            myExperiences = myExperiences.filter(x => x.tag != null && x.tag.includes(tag));\r\n        }\r\n    } else {\r\n        myExperiences = experiences.filter(x => x.last != null);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <header className=\"bg-white fixed-top shadow-sm\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-white\">\r\n                    <span className=\"navbar-brand d-none d-xl-block\">Cocoberry</span>\r\n                    <div className=\"form-inline mr-auto\">\r\n                        <div className=\"input-group\">\r\n                            <input className=\"form-control\" type=\"search\" accessKey=\"s\" placeholder=\"Search…\" title=\"Search\" onChange={handleChange} aria-label=\"Search\" />\r\n                            <div className=\"input-group-append mr-sm-2\">\r\n                                <button className=\"btn btn-outline-success dropdown-toggle\" type=\"button\" onClick={handleDropdownClick} aria-label=\"Show tags\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {PwaInstaller}\r\n                    <button className=\"btn btn-outline-success mr-sm-2 d-none d-xl-block\" accessKey=\"?\" onClick={() => setShowShortcutsDialog(true)} title=\"Shortcuts\">K</button>\r\n                    <button className=\"btn btn-outline-success mr-sm-2 d-none d-xl-block\" accessKey=\"r\" onClick={handleSort} title=\"Sort\">▲</button>\r\n                    <button className=\"btn btn-outline-success mr-sm-2\" accessKey=\"n\" onClick={handleAddExperienceButtonClick} title=\"Add new experience\">+</button>\r\n                    <button className=\"btn btn-outline-success\" accessKey=\"p\" onClick={() => props.onNavigation(\"Preferences\")}>☰</button>\r\n                </nav>\r\n                {showTags &&\r\n                    <div className=\"container\">\r\n                        <TagList activeTag={tag} tags={props.tags} onClick={handleTagClick} />\r\n                    </div>\r\n                }\r\n            </header>\r\n            <main className=\"App container\">\r\n                {showMaybeAgainCard && search === \"\" && tag === \"\" && maybeAgainCardExperience &&\r\n                    <MaybeAgainCard experience={maybeAgainCardExperience} onClick={handleEditOpenClick} />\r\n                }\r\n                {showNeverCard && search === \"\" && tag === \"\" && neverCardExperience &&\r\n                    <NeverCard experience={neverCardExperience} onClick={handleEditOpenClick} />\r\n                }\r\n                <ExperienceList experiences={myExperiences} reverse={reverse} onClick={handleOpenOptions} onEdit={handleEditOpenClick} />\r\n                {search !== \"\" && myExperiences.length === 0 &&\r\n                    <React.Fragment>\r\n                        <p>There are no matched experiences.</p>\r\n                        <button className=\"btn btn-outline-secondary\" onClick={handleAddExperienceButtonClick}>Add new experience</button>\r\n                    </React.Fragment>\r\n                }\r\n            </main>\r\n            <AddExperienceDialog name={search} isOpen={showAddDialog} tags={props.tags} onAdd={handleAddExperience} onClose={handleClose} />\r\n            {showEditDialog && activeExperience &&\r\n                <EditExperienceDialog experience={activeExperience} isOpen={showEditDialog} tags={props.tags} onSave={handleEditSaveClick} onClose={handleClose} />\r\n            }\r\n            <ShortcutsDialog isOpen={showShortcutsDialog} onClose={() => setShowShortcutsDialog(false)} />\r\n            <BottomSheet open={showOptions} onClose={handleCloseOptions}>\r\n                <div className=\"list-group list-group-flush\">\r\n                    <a className=\"list-group-item list-group-item-action\" onClick={() => handleClick(activeId)}>Mark as done</a>\r\n                    <a className=\"list-group-item list-group-item-action\" onClick={() => handleEditOpenClick(activeId)}>Edit</a>\r\n                    <a className=\"list-group-item list-group-item-action\" onClick={() => handleDelete(activeId)}>Delete</a>\r\n                </div>\r\n            </BottomSheet>\r\n            <Toast message={toastMessage} show={showToast} />\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nexport const Preferences = (props) => {\r\n    const fileInput = React.createRef();\r\n    const prefShowMaybeAgainCard = localStorage.getItem(\"showMaybeAgainCard\") || \"false\";\r\n    const prefShowNeverCard = localStorage.getItem(\"showNeverCard\") || \"true\";\r\n    const [preferences, setPreferences] = useState({\r\n        showMaybeAgainCard: prefShowMaybeAgainCard === \"true\",\r\n        showNeverCard: prefShowNeverCard === \"true\",\r\n    });\r\n    function handleExport() {\r\n        const json = JSON.stringify(props.storage.get());\r\n        const file = new File([json], \"cocoberry.json\", { type: \"octet/stream\" });\r\n        const url = window.URL.createObjectURL(file);\r\n        window.location.assign(url);\r\n    }\r\n    function handleBrowse() {\r\n        const elem = document.getElementById(\"file\");\r\n        const input = elem;\r\n        input.click();\r\n    }\r\n    function handleImport() {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n            if (typeof reader.result === \"string\") {\r\n                try {\r\n                    const experiences = JSON.parse(reader.result);\r\n                    //props.onImport(experiences);\r\n                    props.storage.add_many(experiences);\r\n                }\r\n                catch (e) {\r\n                    alert(e);\r\n                }\r\n            }\r\n        };\r\n        const file = fileInput.current.files[0];\r\n        reader.readAsText(file);\r\n    }\r\n    function handlePreferenceChanged(event) {\r\n        const currentTarget = event.currentTarget;\r\n        setPreferences((prevState) => {\r\n            const preferences = Object.assign({}, prevState);\r\n            preferences[currentTarget.id] = currentTarget.checked;\r\n            return preferences;\r\n        });\r\n        localStorage.setItem(currentTarget.id, currentTarget.checked.toString());\r\n    }\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"header\", { className: \"fixed-top shadow-sm\" },\r\n            React.createElement(\"nav\", { className: \"navbar navbar-expand-lg navbar-light bg-white\" },\r\n                React.createElement(\"button\", { className: \"btn btn-outline-success\", accessKey: \"b\", onClick: () => props.onNavigation(\"\") }, \"Back\"))),\r\n        React.createElement(\"main\", { className: \"App container\" },\r\n            React.createElement(\"div\", { className: \"list-group mb-3\" },\r\n                React.createElement(\"div\", { className: \"list-group-item\" },\r\n                    React.createElement(\"div\", { className: \"custom-control custom-switch\" },\r\n                        React.createElement(\"input\", { className: \"custom-control-input\", id: \"showMaybeAgainCard\", type: \"checkbox\", checked: preferences.showMaybeAgainCard, onChange: handlePreferenceChanged }),\r\n                        React.createElement(\"label\", { className: \"custom-control-label\", htmlFor: \"showMaybeAgainCard\" }, \"Show the maybe-again card\"))),\r\n                React.createElement(\"div\", { className: \"list-group-item\" },\r\n                    React.createElement(\"div\", { className: \"custom-control custom-switch\" },\r\n                        React.createElement(\"input\", { className: \"custom-control-input\", id: \"showNeverCard\", type: \"checkbox\", checked: preferences.showNeverCard, onChange: handlePreferenceChanged }),\r\n                        React.createElement(\"label\", { className: \"custom-control-label\", htmlFor: \"showNeverCard\" }, \"Show the you-have-never card\")))),\r\n            React.createElement(\"div\", { className: \"card\" },\r\n                React.createElement(\"div\", { className: \"card-body\" },\r\n                    React.createElement(\"h5\", { className: \"card-title\" }, \"Export and import experiences\"),\r\n                    React.createElement(\"p\", { className: \"card-text\" }, \"Your experiences can be imported and exported. They are stored in the JSON format.\"),\r\n                    React.createElement(\"input\", { className: \"form-control-file\", id: \"file\", type: \"file\", accept: \"application/json\", onChange: handleImport, ref: fileInput, hidden: true, required: true })),\r\n                React.createElement(\"div\", { className: \"list-group list-group-flush\" },\r\n                    React.createElement(\"button\", { className: \"list-group-item list-group-item-action\", type: \"button\", accessKey: \"i\", onClick: handleBrowse }, \"Import from file\"),\r\n                    React.createElement(\"button\", { className: \"list-group-item list-group-item-action\", type: \"button\", accessKey: \"e\", onClick: handleExport }, \"Export to file\")))),\r\n        React.createElement(\"footer\", { className: \"container mt-3\" },\r\n            React.createElement(\"p\", null,\r\n                React.createElement(\"a\", { href: \"https://github.com/vanillajonathan/cocoberry\", rel: \"noopener\", target: \"_blank\" }, \"Cocoberry on GitHub\")),\r\n            React.createElement(\"p\", null, \"Built with \\u2764 by Jonathan\"))));\r\n};\r\n//# sourceMappingURL=Preferences.js.map","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Home } from \"./views/Home\";\r\nimport { Preferences } from \"./views/Preferences\";\r\nconst App = (props) => {\r\n    const experiences = props.storage.get();\r\n    if (experiences.length === 0) {\r\n        props.storage.add_many(props.seed);\r\n    }\r\n    const [nav, setNav] = useState(\"\");\r\n    function handleNavigation(component) {\r\n        setNav(component);\r\n    }\r\n    if (nav === \"Preferences\") {\r\n        return (React.createElement(Preferences, { storage: props.storage, onNavigation: handleNavigation }));\r\n    }\r\n    return (React.createElement(Home, { experiences: props.storage.get(), onNavigation: handleNavigation, tags: props.tags }));\r\n};\r\nApp.defaultProps = {\r\n    seed: [],\r\n    tags: [],\r\n};\r\nexport default App;\r\n//# sourceMappingURL=App.js.map","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log('This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA');\r\n                });\r\n            }\r\n            else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n        registration.onupdatefound = () => {\r\n            const installingWorker = registration.installing;\r\n            if (installingWorker == null) {\r\n                return;\r\n            }\r\n            installingWorker.onstatechange = () => {\r\n                if (installingWorker.state === 'installed') {\r\n                    if (navigator.serviceWorker.controller) {\r\n                        // At this point, the updated precached content has been fetched,\r\n                        // but the previous service worker will still serve the older\r\n                        // content until all client tabs are closed.\r\n                        console.log('New content is available and will be used when all ' +\r\n                            'tabs for this page are closed. See https://bit.ly/CRA-PWA.');\r\n                        // Execute callback\r\n                        if (config && config.onUpdate) {\r\n                            config.onUpdate(registration);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // At this point, everything has been precached.\r\n                        // It's the perfect time to display a\r\n                        // \"Content is cached for offline use.\" message.\r\n                        console.log('Content is cached for offline use.');\r\n                        // Execute callback\r\n                        if (config && config.onSuccess) {\r\n                            config.onSuccess(registration);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        };\r\n    })\r\n        .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (response.status === 404 ||\r\n            (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n            // No service worker found. Probably a different app. Reload the page.\r\n            navigator.serviceWorker.ready.then(registration => {\r\n                registration.unregister().then(() => {\r\n                    window.location.reload();\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            // Service worker found. Proceed as normal.\r\n            registerValidSW(swUrl, config);\r\n        }\r\n    })\r\n        .catch(() => {\r\n        console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=serviceWorker.js.map","import uuid from \"uuid/v4\";\r\nimport { IStorage, INewExperience } from \"./IStorage\";\r\nimport { IExperience } from \"./IExperience\";\r\n\r\nexport class LocalStorage implements IStorage {\r\n    public add(experience: INewExperience): void {\r\n        const experiences = this.get();\r\n        const item: IExperience = {\r\n            id: uuid(),\r\n            last: experience.last,\r\n            name: experience.name,\r\n            tag: experience.tag,\r\n        };\r\n        experiences.push(item);\r\n        localStorage.setItem(\"experiences\", JSON.stringify(experiences));\r\n    }\r\n\r\n    public add_many(experiences: INewExperience[]): void {\r\n        const data = this.get();\r\n        for (const experience of experiences) {\r\n            const item: IExperience = {\r\n                id: uuid(),\r\n                last: experience.last,\r\n                name: experience.name,\r\n                tag: experience.tag,\r\n            };\r\n            data.push(item);\r\n        }\r\n        localStorage.setItem(\"experiences\", JSON.stringify(data));\r\n    }\r\n\r\n    public delete(id: string): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    public get(): IExperience[] {\r\n        const experiences = localStorage.getItem(\"experiences\");\r\n        if (experiences === null) {\r\n            return [];\r\n        }\r\n        return JSON.parse(experiences);\r\n    }\r\n\r\n    public update(experience: IExperience): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { IStorage, INewExperience } from \"./IStorage\";\r\nimport { LocalStorage } from \"./localStorage\";\r\n//import * as data from \"./seed.json\";\r\n\r\nimport seed from \"./seed.json\";\r\n\r\nconst experiences: INewExperience[] = [\r\n    { name: \"Eat apple 🍏\", last: new Date(2018, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat avocado 🥑\", last: new Date(2016, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat banana 🍌\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat broccoli 🥦\", tag: \"vegetable\" },\r\n    { name: \"Eat carrot 🥕\", tag: \"vegetable\" },\r\n    { name: \"Eat cherries 🍒\", last: new Date(2017, 5, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat chili 🌶️\", tag: \"fruit\" },\r\n    { name: \"Eat cucumber 🥒\", last: new Date(2017, 6, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat corn 🌽\", last: new Date(2017, 6, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat coconut 🥥\", last: new Date(2017, 7, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat eggplant 🍆\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat garlic 🧄\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat grapes 🍇\", last: new Date(2017, 9, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat leafy green 🥬\", tag: \"fruit\" },\r\n    { name: \"Eat lemon 🍋\", tag: \"fruit\" },\r\n    { name: \"Eat kiwi 🥝\", last: new Date(2017, 10, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat mango 🥭\", last: new Date(2017, 11, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat melon 🍈\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat mushroom 🍄\", last: new Date(2017, 4, 3).getTime() },\r\n    { name: \"Eat onion 🧅\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat orange 🍊\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat peach 🍑\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat peanuts 🥜\", tag: \"fruit\" },\r\n    { name: \"Eat pear 🍐\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat pineapple 🍍\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat potato 🥔\", last: new Date(2018, 10, 1).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat tomato 🍅\", last: new Date(2018, 10, 1).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat strawberry 🍓\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat watermelon 🍉\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Get a massage 💆‍♂️💆‍♀️\", tag: \"activity\" },\r\n    { name: \"Bake a applepie 🥧🍪\", last: new Date(2018, 7, 13).getTime() },\r\n    { name: \"Basketball 🏀\", tag: \"activity\" },\r\n    { name: \"Bike 🚴\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Bowling 🎳\", last: null, tag: \"activity\" },\r\n    { name: \"Box 🥊\", last: null, tag: \"activity\" },\r\n    { name: \"Climb 🧗\", last: null, tag: \"activity\" },\r\n    { name: \"Cold shower 🥶🚿\", tag: \"activity\" },\r\n    { name: \"Dance 💃🕺\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Fasting 🍽\" },\r\n    { name: \"Football ⚽\", tag: \"activity\" },\r\n    { name: \"Guitar 🎸\", last: null, tag: \"activity\" },\r\n    { name: \"Ice bath 🥶🛀\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Ice skate ⛸️\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Meditate 🧘‍\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Read 📖\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Run 🏃\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Paint 🎨\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Play chess ♟️\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Play pool 🎱\", last: null, tag: \"activity\" },\r\n    { name: \"Sauna 🧖‍♂️🧖‍♀️\", tag: \"activity\" },\r\n    { name: \"Ski 🎿\", tag: \"activity\" },\r\n    { name: \"Swim 🏊\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Theatre 🎭\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Yoga 🧘\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Watch a movie 🎬\", last: null, tag: \"activity\" },\r\n    { name: \"Volleyball 🏐\", last: null, tag: \"activity\" },\r\n    { name: \"Wrestle 🤼\", last: null, tag: \"activity\" },\r\n    { name: \"Cook pasta 🍝\", last: null },\r\n    { name: \"Beach 🏖\", last: null, tag: \"places\" },\r\n    { name: \"Botanical garden 🌿\", last: null, tag: \"places\" },\r\n    { name: \"Cemetery ⚱️\", last: null, tag: \"places\" },\r\n    { name: \"Museum 🖼\", last: null, tag: \"places\" },\r\n    { name: \"Park 🏞\", last: null, tag: \"places\" },\r\n];\r\n\r\nconst storage: IStorage = new LocalStorage();\r\nconst tags: string[] = [\"Activity\", \"Fruit\", \"Places\", \"Vegetable\"];\r\n\r\nReactDOM.render(<App seed={experiences} storage={storage} tags={tags} />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}