{"version":3,"sources":["components/TagList.tsx","../AddExperienceDialog.tsx","../EditExperienceDialog.tsx","../ExperienceList.tsx","../OptionsSheet.tsx","../MaybeAgainCard.tsx","components/NeverCard.tsx","components/PwaInstaller.tsx","../ShortcutsDialog.tsx","components/Toast.tsx","../Home.tsx","views/Preferences.tsx","../App.tsx","serviceWorker.ts","localStorage.tsx","index.tsx"],"names":["TagList","props","handleClick","event","activeTag","currentTarget","innerText","toLowerCase","onClick","className","tags","map","tag","key","last","NeverCard","experience","name","PwaInstaller","deferredPrompt","useState","showInstallPrompt","setShowInstallPrompt","beforeInstallPrompt","useEffect","window","addEventListener","removeEventListener","prompt","userChoice","then","choiceResult","outcome","console","log","title","Toast","show","role","aria-live","aria-atomic","message","setShowOptions","Preferences","fileInput","React","prefShowMaybeAgainCard","localStorage","getItem","prefShowNeverCard","showMaybeAgainCard","showNeverCard","preferences","setPreferences","handlePreferenceChanged","prevState","id","checked","setItem","toString","accessKey","onNavigation","type","onChange","htmlFor","accept","reader","FileReader","onloadend","result","experiences","JSON","parse","storage","add_many","e","alert","file","current","files","readAsText","ref","hidden","required","document","getElementById","click","json","stringify","get","File","url","URL","createObjectURL","location","assign","href","rel","target","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","LocalStorage","this","item","uuid","push","data","Error","Date","getTime","ReactDOM","seed","process","origin","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b36f0655.chunk.js","sourcesContent":["import * as React from \"react\";\r\n\r\ninterface IProps {\r\n    activeTag: string;\r\n    tags: string[];\r\n    onClick(tag: string): void;\r\n}\r\n\r\nexport const TagList: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    function handleClick(event: React.MouseEvent<HTMLElement>): void {\r\n        let activeTag = event.currentTarget.innerText.toLowerCase();\r\n        if (activeTag === props.activeTag) {\r\n            activeTag = \"\";\r\n        }\r\n        props.onClick(activeTag);\r\n    }\r\n\r\n    return (\r\n        <ul className=\"list-inline\">\r\n            {props.tags.map(tag => {\r\n                let className = \"badge \";\r\n                className += (tag.toLowerCase() === props.activeTag ? \"bg-primary\" : \"bg-light text-dark\");\r\n                return <li className=\"list-inline-item\" key={tag}><span className={className} onClick={handleClick}>{tag}</span></li>;\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { TagList } from \"./TagList\";\r\nexport const AddExperienceDialog = (props) => {\r\n    const [name, setName] = useState(props.name);\r\n    const [tag, setTag] = useState(\"\");\r\n    const nameInput = React.createRef();\r\n    useEffect(() => {\r\n        if (nameInput.current) {\r\n            nameInput.current.focus();\r\n        }\r\n    });\r\n    function handleChange(event) {\r\n        setName(event.target.value);\r\n    }\r\n    function handleClose() {\r\n        props.onClose();\r\n    }\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        props.onAdd(name, tag);\r\n    }\r\n    let className = \"modal fade\";\r\n    let backdropClassName = \"fade\";\r\n    if (props.isOpen) {\r\n        className += \" d-block show\";\r\n        backdropClassName += \" modal-backdrop show\";\r\n    }\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"div\", { className: className, tabIndex: -1, role: \"dialog\" },\r\n            React.createElement(\"div\", { className: \"modal-dialog\", role: \"document\" },\r\n                React.createElement(\"div\", { className: \"modal-content\" },\r\n                    React.createElement(\"div\", { className: \"modal-header\" },\r\n                        React.createElement(\"h5\", { className: \"modal-title\" }, \"Add experience\"),\r\n                        React.createElement(\"button\", { type: \"button\", className: \"btn-close\", \"data-dismiss\": \"modal\", \"aria-label\": \"Close\", onClick: handleClose })),\r\n                    React.createElement(\"form\", { onSubmit: handleSubmit },\r\n                        React.createElement(\"div\", { className: \"modal-body\" },\r\n                            React.createElement(\"div\", { className: \"mb-3\" },\r\n                                React.createElement(\"label\", { htmlFor: \"name\" }, \"Title\"),\r\n                                React.createElement(\"input\", { className: \"form-control\", id: \"name\", type: \"text\", value: name, onChange: handleChange, ref: nameInput, autoFocus: true, required: true })),\r\n                            React.createElement(\"div\", { className: \"mb-3\" },\r\n                                React.createElement(\"label\", null, \"Tag\"),\r\n                                React.createElement(TagList, { activeTag: tag, tags: props.tags, onClick: tag => setTag(tag) }))),\r\n                        React.createElement(\"div\", { className: \"modal-footer\" },\r\n                            React.createElement(\"button\", { type: \"button\", className: \"btn btn-secondary\", \"data-dismiss\": \"modal\", onClick: handleClose }, \"Close\"),\r\n                            React.createElement(\"button\", { type: \"submit\", className: \"btn btn-primary\" }, \"Add\")))))),\r\n        React.createElement(\"div\", { className: backdropClassName })));\r\n};\r\nAddExperienceDialog.defaultProps = {\r\n    name: \"\",\r\n};\r\n//# sourceMappingURL=AddExperienceDialog.js.map","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { TagList } from \"./TagList\";\r\nexport const EditExperienceDialog = (props) => {\r\n    const [name, setName] = useState(props.experience.name);\r\n    const [tag, setTag] = useState(props.experience.tag || \"\");\r\n    const [last, setLast] = useState(props.experience.last || 0);\r\n    const nameInput = React.createRef();\r\n    useEffect(() => {\r\n        if (nameInput.current) {\r\n            nameInput.current.focus();\r\n        }\r\n    });\r\n    function handleChange(event) {\r\n        setName(event.target.value);\r\n    }\r\n    function handleSetTag(tagName) {\r\n        setTag(tagName);\r\n    }\r\n    function handleTimeChange(event) {\r\n        const date = new Date(event.target.value);\r\n        setLast(date.getTime());\r\n    }\r\n    function handleClose() {\r\n        props.onClose();\r\n    }\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        const experience = { id: props.experience.id, name: name, tag: tag, last: last };\r\n        props.onSave(experience);\r\n    }\r\n    let className = \"modal fade\";\r\n    let backdropClassName = \"fade\";\r\n    if (props.isOpen) {\r\n        className += \" d-block show\";\r\n        backdropClassName += \" modal-backdrop show\";\r\n    }\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"div\", { className: className, tabIndex: -1, role: \"dialog\" },\r\n            React.createElement(\"div\", { className: \"modal-dialog\", role: \"document\" },\r\n                React.createElement(\"div\", { className: \"modal-content\" },\r\n                    React.createElement(\"div\", { className: \"modal-header\" },\r\n                        React.createElement(\"h5\", { className: \"modal-title\" }, \"Edit experience\"),\r\n                        React.createElement(\"button\", { type: \"button\", className: \"btn-close\", \"data-dismiss\": \"modal\", \"aria-label\": \"Close\", onClick: handleClose })),\r\n                    React.createElement(\"form\", { onSubmit: handleSubmit },\r\n                        React.createElement(\"div\", { className: \"modal-body\" },\r\n                            React.createElement(\"div\", { className: \"mb-3\" },\r\n                                React.createElement(\"label\", { htmlFor: \"name\" }, \"Title\"),\r\n                                React.createElement(\"input\", { className: \"form-control\", id: \"name\", type: \"text\", value: name, onChange: handleChange, ref: nameInput, autoFocus: true, required: true })),\r\n                            React.createElement(\"div\", { className: \"mb-3\" },\r\n                                React.createElement(\"label\", null, \"Tag\"),\r\n                                React.createElement(TagList, { activeTag: tag, tags: props.tags, onClick: handleSetTag })),\r\n                            React.createElement(\"div\", { className: \"mb-3\" },\r\n                                React.createElement(\"label\", { htmlFor: \"time\" }, \"Last\"),\r\n                                React.createElement(\"input\", { className: \"form-control\", id: \"time\", type: \"datetime-local\", value: new Date(last).toISOString().substring(0, 16), onChange: handleTimeChange }))),\r\n                        React.createElement(\"div\", { className: \"modal-footer\" },\r\n                            React.createElement(\"button\", { type: \"button\", className: \"btn btn-secondary\", \"data-dismiss\": \"modal\", onClick: handleClose }, \"Close\"),\r\n                            React.createElement(\"button\", { type: \"submit\", className: \"btn btn-primary\" }, \"Save\")))))),\r\n        React.createElement(\"div\", { className: backdropClassName })));\r\n};\r\n//# sourceMappingURL=EditExperienceDialog.js.map","import * as React from \"react\";\r\nimport { DateTime } from \"luxon\";\r\nexport const ExperienceList = (props) => {\r\n    function compare(a, b) {\r\n        if (a.last == null || b.last == null) {\r\n            return 0;\r\n        }\r\n        if (a.last < b.last) {\r\n            return -1;\r\n        }\r\n        if (a.last > b.last) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n    const weekAgo = props.experiences\r\n        .filter(x => x.last != null &&\r\n        x.last < DateTime.local().minus({ weeks: 1 }).valueOf() &&\r\n        x.last > DateTime.local().minus({ weeks: 2 }).valueOf()).sort(compare);\r\n    const monthAgo = props.experiences\r\n        .filter(x => x.last != null &&\r\n        x.last < DateTime.local().minus({ months: 1 }).valueOf() &&\r\n        x.last > DateTime.local().minus({ months: 2 }).valueOf()).sort(compare);\r\n    const yearAgo = props.experiences\r\n        .filter(x => x.last != null &&\r\n        x.last < DateTime.local().minus({ years: 1 }).valueOf() &&\r\n        x.last > DateTime.local().minus({ years: 2 }).valueOf()).sort(compare);\r\n    let experiences = props.experiences.sort(compare);\r\n    if (props.reverse) {\r\n        experiences = experiences.reverse();\r\n    }\r\n    const weekGroup = (React.createElement(React.Fragment, null,\r\n        React.createElement(\"h2\", { className: \"h5\" }, \"A week ago\"),\r\n        React.createElement(ExperienceListGroup, { onClick: props.onClick, onEdit: props.onEdit, experiences: weekAgo })));\r\n    const monthGroup = (React.createElement(React.Fragment, null,\r\n        React.createElement(\"h2\", { className: \"h5\" }, \"A month ago\"),\r\n        React.createElement(ExperienceListGroup, { onClick: props.onClick, onEdit: props.onEdit, experiences: monthAgo })));\r\n    const yearGroup = (React.createElement(React.Fragment, null,\r\n        React.createElement(\"h2\", { className: \"h5\" }, \"A year ago\"),\r\n        React.createElement(ExperienceListGroup, { onClick: props.onClick, onEdit: props.onEdit, experiences: yearAgo })));\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(ExperienceListGroup, { onClick: props.onClick, onEdit: props.onEdit, experiences: experiences }),\r\n        weekAgo.length > 0 && weekGroup,\r\n        monthAgo.length > 0 && monthGroup,\r\n        yearAgo.length > 0 && yearGroup));\r\n};\r\nconst ExperienceListGroup = (props) => {\r\n    function last(experience) {\r\n        return (React.createElement(React.Fragment, null,\r\n            React.createElement(\"div\", null,\r\n                React.createElement(\"small\", { className: \"float-right text-muted\" }, new Date(experience.last).toLocaleDateString(\"sv-se\"))),\r\n            React.createElement(\"time\", { className: \"d-block text-muted small\", dateTime: new Date(experience.last).toISOString(), title: new Date(experience.last).toLocaleString() }, DateTime.fromMillis(experience.last).toRelative())));\r\n    }\r\n    return (React.createElement(\"div\", { className: \"list-group mb-3\" }, props.experiences.map(experience => React.createElement(\"a\", { className: \"list-group-item list-group-item-action\", key: experience.id, onClick: () => props.onClick(experience.id) },\r\n        experience.name,\r\n        experience.last != null && last(experience)))));\r\n};\r\n//# sourceMappingURL=ExperienceList.js.map","import * as React from \"react\";\r\nexport const BottomSheet = (props) => {\r\n    let className = \"fixed-bottom fade\";\r\n    let backdropClassName = \"fade\";\r\n    if (props.open) {\r\n        className += \" d-block show\";\r\n        backdropClassName += \" modal-backdrop show\";\r\n    }\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"div\", { className: className, tabIndex: -1, role: \"dialog\", style: { zIndex: 2000 } }, props.children),\r\n        React.createElement(\"div\", { className: backdropClassName, onClick: props.onClose })));\r\n};\r\nexport const OptionsSheet = (props) => {\r\n    return (React.createElement(BottomSheet, { open: props.open, onClose: props.onClose },\r\n        React.createElement(\"div\", { className: \"list-group list-group-flush\" },\r\n            React.createElement(\"a\", { className: \"list-group-item list-group-item-action\", onClick: () => props.onDone(props.id) }, \"Mark as done\"),\r\n            React.createElement(\"a\", { className: \"list-group-item list-group-item-action\", onClick: () => props.onEdit(props.id) }, \"Edit\"),\r\n            React.createElement(\"a\", { className: \"list-group-item list-group-item-action\", onClick: () => props.onDelete(props.id) }, \"Delete\"))));\r\n};\r\n//# sourceMappingURL=OptionsSheet.js.map","import * as React from \"react\";\r\nimport { DateTime } from \"luxon\";\r\nexport const MaybeAgainCard = (props) => {\r\n    const timeAgo = DateTime.fromMillis(props.experience.last || 0).toRelative();\r\n    return (React.createElement(\"div\", { className: \"card mb-3\" },\r\n        React.createElement(\"div\", { className: \"card-body\" },\r\n            React.createElement(\"small\", { className: \"text-muted text-uppercase\" },\r\n                \"It was \",\r\n                timeAgo,\r\n                \", Maybe again\\u2026\"),\r\n            React.createElement(\"div\", null, props.experience.name))));\r\n};\r\n//# sourceMappingURL=MaybeAgainCard.js.map","import * as React from \"react\";\r\nimport { IExperience } from \"../IExperience\";\r\n\r\ninterface IProps {\r\n    experience: IExperience;\r\n    onClick(id: string): void;\r\n}\r\n\r\nexport const NeverCard: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n                <small className=\"text-muted text-uppercase\">You have never…</small>\r\n                <div>{props.experience.name}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport const PwaInstaller: React.FunctionComponent = () => {\r\n    let deferredPrompt: any;\r\n    const [showInstallPrompt, setShowInstallPrompt] = useState(false);\r\n\r\n    function handleInstall(): void {\r\n        setShowInstallPrompt(false);\r\n        deferredPrompt.prompt();\r\n        deferredPrompt.userChoice.then((choiceResult: any) => {\r\n            if (choiceResult.outcome === \"accepted\") {\r\n                console.log(\"User accepted the A2HS prompt\");\r\n            } else {\r\n                console.log(\"User dismissed the A2HS prompt\");\r\n            }\r\n            deferredPrompt = null;\r\n        });\r\n    }\r\n\r\n    function beforeInstallPrompt(event: Event): void {\r\n        deferredPrompt = event;\r\n        setShowInstallPrompt(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"beforeinstallprompt\", beforeInstallPrompt);\r\n        return () => {\r\n            window.removeEventListener(\"beforeinstallprompt\", beforeInstallPrompt);\r\n        };\r\n    });\r\n\r\n    if (showInstallPrompt) {\r\n        return (\r\n            <button className=\"btn btn-outline-success mr-sm-2 d-none d-xl-inline\" onClick={handleInstall} title=\"Install web application\">Install</button>\r\n        );\r\n    }\r\n\r\n    return null;\r\n};\r\n","import * as React from \"react\";\r\nexport const ShortcutsDialog = (props) => {\r\n    let className = \"modal fade\";\r\n    let backdropClassName = \"fade\";\r\n    if (props.isOpen) {\r\n        className += \" d-block show\";\r\n        backdropClassName += \" modal-backdrop show\";\r\n    }\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"div\", { className: className, tabIndex: -1, role: \"dialog\" },\r\n            React.createElement(\"div\", { className: \"modal-dialog\", role: \"document\" },\r\n                React.createElement(\"div\", { className: \"modal-content\" },\r\n                    React.createElement(\"div\", { className: \"modal-header\" },\r\n                        React.createElement(\"h5\", { className: \"modal-title\" }, \"Keyboard Shortcuts\"),\r\n                        React.createElement(\"button\", { type: \"button\", className: \"btn-close\", \"data-dismiss\": \"modal\", \"aria-label\": \"Close\", onClick: props.onClose })),\r\n                    React.createElement(\"div\", { className: \"modal-body\" },\r\n                        React.createElement(\"div\", { className: \"container-fluid\" },\r\n                            React.createElement(\"div\", { className: \"row\" },\r\n                                React.createElement(\"div\", { className: \"col\" },\r\n                                    React.createElement(\"kbd\", null,\r\n                                        React.createElement(\"kbd\", null, \"Shift\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"Alt\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"N\"))),\r\n                                React.createElement(\"div\", { className: \"col\" }, \"Add new experience\")),\r\n                            React.createElement(\"div\", { className: \"row\" },\r\n                                React.createElement(\"div\", { className: \"col\" },\r\n                                    React.createElement(\"kbd\", null,\r\n                                        React.createElement(\"kbd\", null, \"Shift\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"Alt\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"S\"))),\r\n                                React.createElement(\"div\", { className: \"col\" }, \"Search\")),\r\n                            React.createElement(\"div\", { className: \"row\" },\r\n                                React.createElement(\"div\", { className: \"col\" },\r\n                                    React.createElement(\"kbd\", null,\r\n                                        React.createElement(\"kbd\", null, \"Shift\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"Alt\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"P\"))),\r\n                                React.createElement(\"div\", { className: \"col\" }, \"Preferences\")),\r\n                            React.createElement(\"div\", { className: \"row\" },\r\n                                React.createElement(\"div\", { className: \"col\" },\r\n                                    React.createElement(\"kbd\", null,\r\n                                        React.createElement(\"kbd\", null, \"Shift\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"Alt\"),\r\n                                        \" + \",\r\n                                        React.createElement(\"kbd\", null, \"R\"))),\r\n                                React.createElement(\"div\", { className: \"col\" }, \"Reverse sort\")))),\r\n                    React.createElement(\"div\", { className: \"modal-footer\" },\r\n                        React.createElement(\"button\", { type: \"button\", className: \"btn btn-secondary\", \"data-dismiss\": \"modal\", onClick: props.onClose }, \"Close\"))))),\r\n        React.createElement(\"div\", { className: backdropClassName })));\r\n};\r\n//# sourceMappingURL=ShortcutsDialog.js.map","import * as React from \"react\";\r\n\r\ninterface IProps {\r\n    message: string;\r\n    show: boolean;\r\n}\r\n\r\nexport const Toast: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    let className = \"toast fixed-bottom bg-dark text-white mx-auto mb-3 fade\";\r\n    if (props.show) {\r\n        className += \" show\";\r\n    }\r\n    return (\r\n        <div className={className} role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\r\n            <div className=\"toast-body\">\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { AddExperienceDialog } from \"../components/AddExperienceDialog\";\r\nimport { EditExperienceDialog } from \"../components/EditExperienceDialog\";\r\nimport { ExperienceList } from \"../components/ExperienceList\";\r\nimport { BottomSheet } from \"../components/OptionsSheet\";\r\nimport { MaybeAgainCard } from \"../components/MaybeAgainCard\";\r\nimport { NeverCard } from \"../components/NeverCard\";\r\nimport { PwaInstaller } from \"../components/PwaInstaller\";\r\nimport { ShortcutsDialog } from \"../components/ShortcutsDialog\";\r\nimport { TagList } from \"../components/TagList\";\r\nimport { Toast } from \"../components/Toast\";\r\nimport \"./Home.css\";\r\nexport const Home = (props) => {\r\n    const [activeId, setActiveId] = useState(\"\");\r\n    const [activeExperience, setActiveExperience] = useState();\r\n    //const [experiences, setExperiences] = useState(props.storage.get());\r\n    const [experiences, setExperiences] = useState(props.experiences);\r\n    const [maybeAgainCardExperience, setMaybeAgainCardExperience] = useState(null);\r\n    const [neverCardExperience, setNeverCardExperience] = useState(null);\r\n    const [reverse, setReverse] = useState(false);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [showAddDialog, setShowDialog] = useState(false);\r\n    const [showEditDialog, setShowEditDialog] = useState(false);\r\n    const [showShortcutsDialog, setShowShortcutsDialog] = useState(false);\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [showTags, setShowTags] = useState(false);\r\n    const [showToast, setShowToast] = useState(false);\r\n    const [tag, setTag] = useState(\"\");\r\n    const [toastMessage, setToastMessage] = useState(\"\");\r\n    const prefShowMaybeAgainCard = localStorage.getItem(\"showMaybeAgainCard\") || \"false\";\r\n    const prefShowNeverCard = localStorage.getItem(\"showNeverCard\") || \"true\";\r\n    const [showMaybeAgainCard] = useState(prefShowMaybeAgainCard === \"true\");\r\n    const [showNeverCard] = useState(prefShowNeverCard === \"true\");\r\n    let timerId = 0;\r\n    useEffect(() => {\r\n        if (props.experiences.length !== 0) {\r\n            const maybeExp = randomExperience(props.experiences.filter(x => x.last !== null && x.last !== undefined));\r\n            setMaybeAgainCardExperience(maybeExp);\r\n            const exp = randomExperience(props.experiences.filter(x => x.last === null));\r\n            setNeverCardExperience(exp);\r\n        }\r\n    }, [props.experiences]);\r\n    function handleAddExperience(name, tag) {\r\n        setShowDialog(false);\r\n        const experience = {\r\n            id: uuid(),\r\n            name,\r\n            tag,\r\n        };\r\n        setExperiences((prevState) => [...prevState, experience]);\r\n    }\r\n    function handleAddExperienceButtonClick() {\r\n        setShowDialog(true);\r\n    }\r\n    function handleClick(key) {\r\n        setShowOptions(false);\r\n        setExperiences((prevState) => prevState.map(i => i.id === key ? Object.assign(Object.assign({}, i), { last: new Date().getTime() }) : i));\r\n        setToastMessage(\"Marked as done\");\r\n        setShowToast(true);\r\n        window.clearTimeout(timerId);\r\n        timerId = window.setTimeout(() => {\r\n            setShowToast(false);\r\n        }, 1500);\r\n    }\r\n    function handleDelete(key) {\r\n        setShowOptions(false);\r\n        setExperiences((prevState) => (prevState.filter(e => e.id !== key)));\r\n        setToastMessage(\"Removed\");\r\n        setShowToast(true);\r\n        window.clearTimeout(timerId);\r\n        timerId = window.setTimeout(() => {\r\n            setShowToast(false);\r\n        }, 1500);\r\n    }\r\n    function handleOpenOptions(id) {\r\n        setActiveId(id);\r\n        const exp = experiences.find(x => x.id === id);\r\n        setActiveExperience(exp);\r\n        setShowOptions(true);\r\n    }\r\n    function handleCloseOptions() {\r\n        setShowOptions(false);\r\n    }\r\n    function handleEditOpenClick(tag) {\r\n        setShowOptions(false);\r\n        setShowEditDialog(true);\r\n    }\r\n    function handleEditSaveClick(experience) {\r\n        setShowEditDialog(false);\r\n        setExperiences((prevState) => (prevState.map(e => {\r\n            if (e.id === experience.id) {\r\n                e = experience;\r\n            }\r\n            return e;\r\n        })));\r\n        setToastMessage(\"Edited:\" + experience.name);\r\n        setShowToast(true);\r\n        window.clearTimeout(timerId);\r\n        timerId = window.setTimeout(() => {\r\n            setShowToast(false);\r\n        }, 1500);\r\n    }\r\n    function handleChange(event) {\r\n        setSearch(event.currentTarget.value);\r\n    }\r\n    function handleDropdownClick(event) {\r\n        event.target.parentElement.classList.toggle(\"dropup\");\r\n        setShowTags((prevState) => !prevState);\r\n    }\r\n    function handleSort() {\r\n        setReverse((prevState) => !prevState);\r\n    }\r\n    function handleTagClick(tag) {\r\n        setTag(tag);\r\n    }\r\n    function handleClose() {\r\n        setShowDialog(false);\r\n        setShowEditDialog(false);\r\n    }\r\n    function randomExperience(experiences) {\r\n        return experiences[Math.floor(Math.random() * experiences.length)];\r\n    }\r\n    let myExperiences;\r\n    if (search !== \"\" || tag !== \"\") {\r\n        myExperiences = experiences.filter(x => x.name.toLowerCase().includes(search.toLowerCase()));\r\n        if (tag !== \"\") {\r\n            myExperiences = myExperiences.filter(x => x.tag != null && x.tag.includes(tag));\r\n        }\r\n    }\r\n    else {\r\n        myExperiences = experiences.filter(x => x.last != null);\r\n    }\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"header\", { className: \"bg-white fixed-top shadow-sm\" },\r\n            React.createElement(\"nav\", { className: \"navbar navbar-expand-lg navbar-light bg-white\" },\r\n                React.createElement(\"div\", { className: \"container-fluid\" },\r\n                    React.createElement(\"div\", { className: \"d-flex flex-grow-1\" },\r\n                        React.createElement(\"span\", { className: \"navbar-brand d-none d-xl-block\" }, \"Cocoberry\"),\r\n                        React.createElement(\"div\", { className: \"mr-auto\" },\r\n                            React.createElement(\"div\", { className: \"input-group\" },\r\n                                React.createElement(\"input\", { className: \"form-control\", type: \"search\", accessKey: \"s\", placeholder: \"Search\\u2026\", title: \"Search\", onChange: handleChange, \"aria-label\": \"Search\" }),\r\n                                React.createElement(\"button\", { className: \"btn btn-outline-success dropdown-toggle\", type: \"button\", onClick: handleDropdownClick, \"aria-label\": \"Show tags\" }))),\r\n                        React.createElement(\"div\", null,\r\n                            React.createElement(PwaInstaller, null),\r\n                            React.createElement(\"button\", { className: \"btn btn-outline-success mr-sm-2 d-none d-xl-inline\", accessKey: \"?\", onClick: () => setShowShortcutsDialog(true), title: \"Shortcuts\" }, \"K\"),\r\n                            React.createElement(\"button\", { className: \"btn btn-outline-success mr-sm-2 d-none d-xl-inline\", accessKey: \"r\", onClick: handleSort, title: \"Sort\" }, \"\\u25B2\"),\r\n                            React.createElement(\"button\", { className: \"btn btn-outline-success mr-sm-2\", accessKey: \"n\", onClick: handleAddExperienceButtonClick, title: \"Add new experience\" }, \"+\"),\r\n                            React.createElement(\"button\", { className: \"btn btn-outline-success\", accessKey: \"p\", onClick: () => props.onNavigation(\"Preferences\") }, \"\\u2630\"))))),\r\n            showTags &&\r\n                React.createElement(\"div\", { className: \"container\" },\r\n                    React.createElement(TagList, { activeTag: tag, tags: props.tags, onClick: handleTagClick }))),\r\n        React.createElement(\"main\", { className: \"App container\" },\r\n            showMaybeAgainCard && search === \"\" && tag === \"\" && maybeAgainCardExperience &&\r\n                React.createElement(MaybeAgainCard, { experience: maybeAgainCardExperience, onClick: handleEditOpenClick }),\r\n            showNeverCard && search === \"\" && tag === \"\" && neverCardExperience &&\r\n                React.createElement(NeverCard, { experience: neverCardExperience, onClick: handleEditOpenClick }),\r\n            React.createElement(ExperienceList, { experiences: myExperiences, reverse: reverse, onClick: handleOpenOptions, onEdit: handleEditOpenClick }),\r\n            search !== \"\" && myExperiences.length === 0 &&\r\n                React.createElement(React.Fragment, null,\r\n                    React.createElement(\"p\", null, \"There are no matched experiences.\"),\r\n                    React.createElement(\"button\", { className: \"btn btn-outline-secondary\", onClick: handleAddExperienceButtonClick }, \"Add new experience\"))),\r\n        React.createElement(AddExperienceDialog, { name: search, isOpen: showAddDialog, tags: props.tags, onAdd: handleAddExperience, onClose: handleClose }),\r\n        showEditDialog && activeExperience &&\r\n            React.createElement(EditExperienceDialog, { experience: activeExperience, isOpen: showEditDialog, tags: props.tags, onSave: handleEditSaveClick, onClose: handleClose }),\r\n        React.createElement(ShortcutsDialog, { isOpen: showShortcutsDialog, onClose: () => setShowShortcutsDialog(false) }),\r\n        React.createElement(BottomSheet, { open: showOptions, onClose: handleCloseOptions },\r\n            React.createElement(\"div\", { className: \"list-group list-group-flush\" },\r\n                React.createElement(\"a\", { className: \"list-group-item list-group-item-action\", onClick: () => handleClick(activeId) }, \"Mark as done\"),\r\n                React.createElement(\"a\", { className: \"list-group-item list-group-item-action\", onClick: () => handleEditOpenClick(activeId) }, \"Edit\"),\r\n                React.createElement(\"a\", { className: \"list-group-item list-group-item-action\", onClick: () => handleDelete(activeId) }, \"Delete\"))),\r\n        React.createElement(Toast, { message: toastMessage, show: showToast })));\r\n};\r\n//# sourceMappingURL=Home.js.map","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { IExperience } from \"../IExperience\";\r\nimport { IStorage } from \"../IStorage\";\r\n\r\ninterface IProps {\r\n    storage: IStorage;\r\n    onNavigation(component: string): void;\r\n}\r\n\r\ninterface IPreferences {\r\n    showMaybeAgainCard: boolean;\r\n    showNeverCard: boolean;\r\n}\r\n\r\nexport const Preferences: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    const fileInput: any = React.createRef();\r\n\r\n    const prefShowMaybeAgainCard = localStorage.getItem(\"showMaybeAgainCard\") || \"false\";\r\n    const prefShowNeverCard = localStorage.getItem(\"showNeverCard\") || \"true\";\r\n\r\n    const [preferences, setPreferences] = useState<IPreferences>({\r\n        showMaybeAgainCard: prefShowMaybeAgainCard === \"true\",\r\n        showNeverCard: prefShowNeverCard === \"true\",\r\n    });\r\n\r\n    function handleExport(): void {\r\n        const json = JSON.stringify(props.storage.get());\r\n        const file = new File([json], \"cocoberry.json\", { type: \"octet/stream\" });\r\n        const url = window.URL.createObjectURL(file);\r\n        window.location.assign(url);\r\n    }\r\n\r\n    function handleBrowse(): void {\r\n        const elem = document.getElementById(\"file\");\r\n        const input = elem as HTMLInputElement;\r\n        input.click();\r\n    }\r\n\r\n    function handleImport(): void {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n            if (typeof reader.result === \"string\") {\r\n                try {\r\n                    const experiences = JSON.parse(reader.result) as IExperience[];\r\n                    //props.onImport(experiences);\r\n                    props.storage.add_many(experiences);\r\n                } catch (e) {\r\n                    alert(e);\r\n                }\r\n            }\r\n        };\r\n        const file: File = fileInput.current.files[0];\r\n        reader.readAsText(file);\r\n    }\r\n\r\n    function handlePreferenceChanged(event: React.ChangeEvent<HTMLInputElement>): void {\r\n        const currentTarget = event.currentTarget;\r\n        setPreferences((prevState: IPreferences) => {\r\n            const preferences: any = { ...prevState };\r\n            preferences[currentTarget.id] = currentTarget.checked;\r\n            return preferences;\r\n        });\r\n        localStorage.setItem(currentTarget.id, currentTarget.checked.toString());\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <header className=\"fixed-top shadow-sm\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-white\">\r\n                    <div className=\"container-fluid\">\r\n                        <button className=\"btn btn-outline-success\" accessKey=\"b\" onClick={() => props.onNavigation(\"\")}>Back</button>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n            <main className=\"App container\">\r\n\r\n                <div className=\"list-group mb-3\">\r\n                    <div className=\"list-group-item\">\r\n                        <div className=\"form-check form-switch\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                id=\"showMaybeAgainCard\"\r\n                                type=\"checkbox\"\r\n                                checked={preferences.showMaybeAgainCard}\r\n                                onChange={handlePreferenceChanged}\r\n                            />\r\n                            <label className=\"form-check-label\" htmlFor=\"showMaybeAgainCard\">Show the maybe-again card</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"list-group-item\">\r\n                        <div className=\"form-check form-switch\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                id=\"showNeverCard\"\r\n                                type=\"checkbox\"\r\n                                checked={preferences.showNeverCard}\r\n                                onChange={handlePreferenceChanged}\r\n                            />\r\n                            <label className=\"form-check-label\" htmlFor=\"showNeverCard\">Show the you-have-never card</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Export and import experiences</h5>\r\n                        <p className=\"card-text\">Your experiences can be imported and exported. They are stored in the JSON format.</p>\r\n                        <input className=\"form-control-file\" id=\"file\" type=\"file\" accept=\"application/json\" onChange={handleImport} ref={fileInput} hidden required />\r\n                    </div>\r\n                    <div className=\"list-group list-group-flush\">\r\n                        <button className=\"list-group-item list-group-item-action\" type=\"button\" accessKey=\"i\" onClick={handleBrowse}>Import from file</button>\r\n                        <button className=\"list-group-item list-group-item-action\" type=\"button\" accessKey=\"e\" onClick={handleExport}>Export to file</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </main>\r\n\r\n            <footer className=\"container mt-3\">\r\n                <p><a href=\"https://github.com/vanillajonathan/cocoberry\" rel=\"noopener noreferrer\" target=\"_blank\">Cocoberry on GitHub</a></p>\r\n                <p>Built with ❤ by Jonathan</p>\r\n            </footer>\r\n\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Home } from \"./views/Home\";\r\nimport { Preferences } from \"./views/Preferences\";\r\nconst App = (props) => {\r\n    const experiences = props.storage.get();\r\n    if (experiences.length === 0) {\r\n        props.storage.add_many(props.seed);\r\n    }\r\n    const [nav, setNav] = useState(\"\");\r\n    function handleNavigation(component) {\r\n        setNav(component);\r\n    }\r\n    if (nav === \"Preferences\") {\r\n        return (React.createElement(Preferences, { storage: props.storage, onNavigation: handleNavigation }));\r\n    }\r\n    return (React.createElement(Home, { experiences: props.storage.get(), onNavigation: handleNavigation, tags: props.tags }));\r\n};\r\nApp.defaultProps = {\r\n    seed: [],\r\n    tags: [],\r\n};\r\nexport default App;\r\n//# sourceMappingURL=App.js.map","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { v4 as uuid } from \"uuid\";\r\nimport { IStorage, INewExperience } from \"./IStorage\";\r\nimport { IExperience } from \"./IExperience\";\r\n\r\nexport class LocalStorage implements IStorage {\r\n    public add(experience: INewExperience): void {\r\n        const experiences = this.get();\r\n        const item: IExperience = {\r\n            id: uuid(),\r\n            last: experience.last,\r\n            name: experience.name,\r\n            tag: experience.tag,\r\n        };\r\n        experiences.push(item);\r\n        localStorage.setItem(\"experiences\", JSON.stringify(experiences));\r\n    }\r\n\r\n    public add_many(experiences: INewExperience[]): void {\r\n        const data = this.get();\r\n        for (const experience of experiences) {\r\n            const item: IExperience = {\r\n                id: uuid(),\r\n                last: experience.last,\r\n                name: experience.name,\r\n                tag: experience.tag,\r\n            };\r\n            data.push(item);\r\n        }\r\n        localStorage.setItem(\"experiences\", JSON.stringify(data));\r\n    }\r\n\r\n    public delete(id: string): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    public get(): IExperience[] {\r\n        const experiences = localStorage.getItem(\"experiences\");\r\n        if (experiences === null) {\r\n            return [];\r\n        }\r\n        return JSON.parse(experiences);\r\n    }\r\n\r\n    public update(experience: IExperience): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport \"bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { IStorage, INewExperience } from \"./IStorage\";\r\nimport { LocalStorage } from \"./localStorage\";\r\n//import * as data from \"./seed.json\";\r\n\r\nimport seed from \"./seed.json\";\r\n\r\nconst experiences: INewExperience[] = [\r\n    { name: \"Eat apple 🍏\", last: new Date(2018, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat avocado 🥑\", last: new Date(2016, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat banana 🍌\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat broccoli 🥦\", tag: \"vegetable\" },\r\n    { name: \"Eat carrot 🥕\", tag: \"vegetable\" },\r\n    { name: \"Eat cherries 🍒\", last: new Date(2017, 5, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat chili 🌶️\", tag: \"fruit\" },\r\n    { name: \"Eat cucumber 🥒\", last: new Date(2017, 6, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat corn 🌽\", last: new Date(2017, 6, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat coconut 🥥\", last: new Date(2017, 7, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat eggplant 🍆\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat garlic 🧄\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat grapes 🍇\", last: new Date(2017, 9, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat leafy green 🥬\", tag: \"fruit\" },\r\n    { name: \"Eat lemon 🍋\", tag: \"fruit\" },\r\n    { name: \"Eat kiwi 🥝\", last: new Date(2017, 10, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat mango 🥭\", last: new Date(2017, 11, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat melon 🍈\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat mushroom 🍄\", last: new Date(2017, 4, 3).getTime() },\r\n    { name: \"Eat onion 🧅\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat orange 🍊\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat peach 🍑\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat peanuts 🥜\", tag: \"fruit\" },\r\n    { name: \"Eat pear 🍐\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat pineapple 🍍\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat potato 🥔\", last: new Date(2018, 10, 1).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat tomato 🍅\", last: new Date(2018, 10, 1).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat strawberry 🍓\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat watermelon 🍉\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Get a massage 💆‍♂️💆‍♀️\", tag: \"activity\" },\r\n    { name: \"Bake a applepie 🥧🍪\", last: new Date(2018, 7, 13).getTime() },\r\n    { name: \"Basketball 🏀\", tag: \"activity\" },\r\n    { name: \"Bike 🚴\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Bowling 🎳\", last: null, tag: \"activity\" },\r\n    { name: \"Box 🥊\", last: null, tag: \"activity\" },\r\n    { name: \"Climb 🧗\", last: null, tag: \"activity\" },\r\n    { name: \"Cold shower 🥶🚿\", tag: \"activity\" },\r\n    { name: \"Dance 💃🕺\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Fasting 🍽\" },\r\n    { name: \"Football ⚽\", tag: \"activity\" },\r\n    { name: \"Guitar 🎸\", last: null, tag: \"activity\" },\r\n    { name: \"Ice bath 🥶🛀\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Ice skate ⛸️\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Meditate 🧘‍\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Read 📖\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Run 🏃\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Paint 🎨\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Play chess ♟️\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Play pool 🎱\", last: null, tag: \"activity\" },\r\n    { name: \"Sauna 🧖‍♂️🧖‍♀️\", tag: \"activity\" },\r\n    { name: \"Ski 🎿\", tag: \"activity\" },\r\n    { name: \"Swim 🏊\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Theatre 🎭\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Yoga 🧘\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Watch a movie 🎬\", last: null, tag: \"activity\" },\r\n    { name: \"Volleyball 🏐\", last: null, tag: \"activity\" },\r\n    { name: \"Wrestle 🤼\", last: null, tag: \"activity\" },\r\n    { name: \"Cook pasta 🍝\", last: null },\r\n    { name: \"Beach 🏖\", last: null, tag: \"places\" },\r\n    { name: \"Botanical garden 🌿\", last: null, tag: \"places\" },\r\n    { name: \"Cemetery ⚱️\", last: null, tag: \"places\" },\r\n    { name: \"Museum 🖼\", last: null, tag: \"places\" },\r\n    { name: \"Park 🏞\", last: null, tag: \"places\" },\r\n];\r\n\r\nconst storage: IStorage = new LocalStorage();\r\nconst tags: string[] = [\"Activity\", \"Fruit\", \"Places\", \"Vegetable\"];\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App seed={experiences} storage={storage} tags={tags} />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}