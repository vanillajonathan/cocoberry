{"version":3,"sources":["components/TagList.tsx","../AddExperienceDialog.tsx","../EditExperienceDialog.tsx","components/ExperienceList.tsx","../OptionsSheet.tsx","../MaybeAgainCard.tsx","../NeverCard.tsx","components/PwaInstaller.tsx","components/ShortcutsDialog.tsx","components/Toast.tsx","../Home.tsx","views/Preferences.tsx","../App.tsx","serviceWorker.ts","localStorage.tsx","index.tsx"],"names":["TagList","props","handleClick","event","activeTag","currentTarget","innerText","toLowerCase","onClick","className","tags","map","tag","ExperienceList","compare","a","b","last","weekAgo","experiences","filter","x","DateTime","local","minus","weeks","valueOf","sort","monthAgo","months","yearAgo","years","reverse","weekGroup","onEdit","monthGroup","yearGroup","length","ExperienceListGroup","experience","id","name","Date","toLocaleDateString","dateTime","toISOString","title","toLocaleString","fromMillis","toRelative","PwaInstaller","deferredPrompt","useState","showInstallPrompt","setShowInstallPrompt","beforeInstallPrompt","useEffect","window","addEventListener","removeEventListener","prompt","userChoice","then","choiceResult","outcome","console","log","ShortcutsDialog","tabIndex","role","type","data-bs-dismiss","aria-label","onClose","Toast","show","aria-live","aria-atomic","message","Preferences","fileInput","React","prefShowMaybeAgainCard","localStorage","getItem","prefShowNeverCard","showMaybeAgainCard","showNeverCard","preferences","setPreferences","handlePreferenceChanged","prevState","checked","setItem","toString","accessKey","onNavigation","onChange","htmlFor","accept","reader","FileReader","onloadend","result","JSON","parse","storage","add_many","e","alert","file","current","files","readAsText","ref","hidden","required","document","getElementById","click","json","stringify","get","File","url","URL","createObjectURL","location","assign","href","rel","target","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","LocalStorage","this","item","uuid","push","data","Error","getTime","ReactDOM","seed","process","origin","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ad74d8ff.chunk.js","sourcesContent":["import * as React from \"react\";\r\n\r\ninterface IProps {\r\n    activeTag: string;\r\n    tags: string[];\r\n    onClick(tag: string): void;\r\n}\r\n\r\nexport const TagList: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    function handleClick(event: React.MouseEvent<HTMLElement>): void {\r\n        let activeTag = event.currentTarget.innerText.toLowerCase();\r\n        if (activeTag === props.activeTag) {\r\n            activeTag = \"\";\r\n        }\r\n        props.onClick(activeTag);\r\n    }\r\n\r\n    return (\r\n        <ul className=\"list-inline\">\r\n            {props.tags.map(tag => {\r\n                let className = \"badge \";\r\n                className += (tag.toLowerCase() === props.activeTag ? \"bg-primary\" : \"bg-light text-dark\");\r\n                return <li className=\"list-inline-item\" key={tag}><span className={className} onClick={handleClick}>{tag}</span></li>;\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { TagList } from \"./TagList\";\r\nexport const AddExperienceDialog = (props) => {\r\n    const [name, setName] = useState(props.name);\r\n    const [tag, setTag] = useState(\"\");\r\n    const nameInput = React.createRef();\r\n    useEffect(() => {\r\n        if (nameInput.current) {\r\n            nameInput.current.focus();\r\n        }\r\n        var myModal = document.getElementById('addModal');\r\n        var myInput = document.getElementById('name');\r\n        if (myModal !== null && myInput !== null) {\r\n            myModal.addEventListener('shown.bs.modal', () => {\r\n                if (myInput !== null) {\r\n                    myInput.focus();\r\n                }\r\n            });\r\n        }\r\n    });\r\n    function handleChange(event) {\r\n        setName(event.target.value);\r\n    }\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        props.onAdd(name, tag);\r\n    }\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"div\", { className: \"modal fade\", id: \"addModal\", \"data-bs-backdrop\": \"static\", \"data-bs-keyboard\": \"false\", tabIndex: -1, role: \"dialog\" },\r\n            React.createElement(\"div\", { className: \"modal-dialog\", role: \"document\" },\r\n                React.createElement(\"div\", { className: \"modal-content\" },\r\n                    React.createElement(\"div\", { className: \"modal-header\" },\r\n                        React.createElement(\"h5\", { className: \"modal-title\" }, \"Add experience\"),\r\n                        React.createElement(\"button\", { type: \"button\", className: \"btn-close\", \"data-bs-dismiss\": \"modal\", \"aria-label\": \"Close\" })),\r\n                    React.createElement(\"form\", { onSubmit: handleSubmit },\r\n                        React.createElement(\"div\", { className: \"modal-body\" },\r\n                            React.createElement(\"div\", { className: \"mb-3\" },\r\n                                React.createElement(\"label\", { className: \"form-label\", htmlFor: \"name\" }, \"Title\"),\r\n                                React.createElement(\"input\", { className: \"form-control\", id: \"name\", type: \"text\", value: name, onChange: handleChange, ref: nameInput, autoFocus: true, required: true })),\r\n                            React.createElement(\"div\", { className: \"mb-3\" },\r\n                                React.createElement(\"label\", { className: \"form-label\" }, \"Tag\"),\r\n                                React.createElement(TagList, { activeTag: tag, tags: props.tags, onClick: tag => setTag(tag) }))),\r\n                        React.createElement(\"div\", { className: \"modal-footer\" },\r\n                            React.createElement(\"button\", { type: \"button\", className: \"btn btn-secondary\", \"data-bs-dismiss\": \"modal\" }, \"Close\"),\r\n                            React.createElement(\"button\", { type: \"submit\", className: \"btn btn-primary\" }, \"Add\"))))))));\r\n};\r\nAddExperienceDialog.defaultProps = {\r\n    name: \"\",\r\n};\r\n//# sourceMappingURL=AddExperienceDialog.js.map","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { TagList } from \"./TagList\";\r\nexport const EditExperienceDialog = (props) => {\r\n    const [name, setName] = useState(props.experience.name);\r\n    const [tag, setTag] = useState(props.experience.tag || \"\");\r\n    const [last, setLast] = useState(props.experience.last || 0);\r\n    const nameInput = React.createRef();\r\n    useEffect(() => {\r\n        setName(props.experience.name);\r\n        setTag(props.experience.tag || \"\");\r\n        setLast(props.experience.last || 0);\r\n    }, [props.experience]);\r\n    useEffect(() => {\r\n        if (nameInput.current) {\r\n            nameInput.current.focus();\r\n        }\r\n        var myModal = document.getElementById('editModal');\r\n        var myInput = document.getElementById('name');\r\n        if (myModal !== null && myInput !== null) {\r\n            myModal.addEventListener('shown.bs.modal', () => {\r\n                if (myInput !== null) {\r\n                    myInput.focus();\r\n                }\r\n            });\r\n        }\r\n    });\r\n    function handleChange(event) {\r\n        setName(event.target.value);\r\n    }\r\n    function handleSetTag(tagName) {\r\n        setTag(tagName);\r\n    }\r\n    function handleTimeChange(event) {\r\n        const date = new Date(event.target.value);\r\n        setLast(date.getTime());\r\n    }\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        const experience = { id: props.experience.id, name: name, tag: tag, last: last };\r\n        props.onSave(experience);\r\n    }\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"div\", { className: \"modal fade\", id: \"editModal\", \"data-bs-keyboard\": \"false\", tabIndex: -1, role: \"dialog\" },\r\n            React.createElement(\"div\", { className: \"modal-dialog\", role: \"document\" },\r\n                React.createElement(\"div\", { className: \"modal-content\" },\r\n                    React.createElement(\"div\", { className: \"modal-header\" },\r\n                        React.createElement(\"h5\", { className: \"modal-title\" }, \"Edit experience\"),\r\n                        React.createElement(\"button\", { type: \"button\", className: \"btn-close\", \"data-bs-dismiss\": \"modal\", \"aria-label\": \"Close\" })),\r\n                    React.createElement(\"form\", { onSubmit: handleSubmit },\r\n                        React.createElement(\"div\", { className: \"modal-body\" },\r\n                            React.createElement(\"div\", { className: \"mb-3\" },\r\n                                React.createElement(\"label\", { className: \"form-label\", htmlFor: \"name\" }, \"Title\"),\r\n                                React.createElement(\"input\", { className: \"form-control\", id: \"name\", type: \"text\", value: name, onChange: handleChange, ref: nameInput, autoFocus: true, required: true })),\r\n                            React.createElement(\"div\", { className: \"mb-3\" },\r\n                                React.createElement(\"label\", { className: \"form-label\" }, \"Tag\"),\r\n                                React.createElement(TagList, { activeTag: tag, tags: props.tags, onClick: handleSetTag })),\r\n                            React.createElement(\"div\", { className: \"mb-3\" },\r\n                                React.createElement(\"label\", { className: \"form-label\", htmlFor: \"time\" }, \"Last\"),\r\n                                React.createElement(\"input\", { className: \"form-control\", id: \"time\", type: \"datetime-local\", value: new Date(last).toISOString().substring(0, 16), onChange: handleTimeChange }))),\r\n                        React.createElement(\"div\", { className: \"modal-footer\" },\r\n                            React.createElement(\"button\", { type: \"button\", className: \"btn btn-secondary\", \"data-bs-dismiss\": \"modal\" }, \"Close\"),\r\n                            React.createElement(\"button\", { type: \"submit\", className: \"btn btn-primary\" }, \"Save\"))))))));\r\n};\r\n//# sourceMappingURL=EditExperienceDialog.js.map","import * as React from \"react\";\r\nimport { DateTime } from \"luxon\";\r\nimport { IExperience } from \"../IExperience\";\r\n\r\ninterface IProps {\r\n    experiences: IExperience[];\r\n    reverse?: boolean;\r\n    onClick(id: string): void;\r\n    onEdit(id: string): void;\r\n}\r\n\r\nexport const ExperienceList: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    function compare(a: IExperience, b: IExperience): number {\r\n        if (a.last == null || b.last == null) {\r\n            return 0;\r\n        }\r\n        if (a.last < b.last) {\r\n            return -1;\r\n        }\r\n        if (a.last > b.last) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    const weekAgo = props.experiences\r\n        .filter(x => x.last != null &&\r\n            x.last < DateTime.local().minus({ weeks: 1 }).valueOf() &&\r\n            x.last > DateTime.local().minus({ weeks: 2 }).valueOf()).sort(compare);\r\n\r\n    const monthAgo = props.experiences\r\n        .filter(x => x.last != null &&\r\n            x.last < DateTime.local().minus({ months: 1 }).valueOf() &&\r\n            x.last > DateTime.local().minus({ months: 2 }).valueOf()).sort(compare);\r\n\r\n    const yearAgo = props.experiences\r\n        .filter(x => x.last != null &&\r\n            x.last < DateTime.local().minus({ years: 1 }).valueOf() &&\r\n            x.last > DateTime.local().minus({ years: 2 }).valueOf()).sort(compare);\r\n\r\n    let experiences = props.experiences.sort(compare);\r\n    if (props.reverse) {\r\n        experiences = experiences.reverse();\r\n    }\r\n\r\n    const weekGroup = (\r\n        <React.Fragment>\r\n            <h2 className=\"h5\">A week ago</h2>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={weekAgo} />\r\n        </React.Fragment>);\r\n\r\n    const monthGroup = (\r\n        <React.Fragment>\r\n            <h2 className=\"h5\">A month ago</h2>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={monthAgo} />\r\n        </React.Fragment>);\r\n\r\n    const yearGroup = (\r\n        <React.Fragment>\r\n            <h2 className=\"h5\">A year ago</h2>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={yearAgo} />\r\n        </React.Fragment>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={experiences} />\r\n            {weekAgo.length > 0 && weekGroup}\r\n            {monthAgo.length > 0 && monthGroup}\r\n            {yearAgo.length > 0 && yearGroup}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\ninterface IExperienceListGroupProps {\r\n    experiences: IExperience[];\r\n    onClick(id: string): void;\r\n    onEdit(id: string): void;\r\n}\r\n\r\nconst ExperienceListGroup: React.FunctionComponent<IExperienceListGroupProps> = (props: IExperienceListGroupProps) => {\r\n    return (\r\n        <div className=\"list-group mb-3\">\r\n            {props.experiences.map(experience =>\r\n                <a className=\"list-group-item list-group-item-action\" key={experience.id} onClick={() => props.onClick(experience.id)}>\r\n                    {experience.name}\r\n                    {experience.last != null && last(experience)}\r\n                </a>\r\n            )}\r\n        </div>);\r\n};\r\n\r\nfunction last(experience: any): JSX.Element {\r\n    return (\r\n        <React.Fragment>\r\n            <div><small className=\"float-end text-muted\">{new Date(experience.last).toLocaleDateString(\"sv-se\")}</small></div>\r\n            <time className=\"d-block text-muted small\" dateTime={new Date(experience.last).toISOString()} title={new Date(experience.last).toLocaleString()}>{DateTime.fromMillis(experience.last).toRelative()}</time>\r\n        </React.Fragment>);\r\n}","import * as React from \"react\";\r\nexport const BottomSheet = (props) => {\r\n    const className = \"offcanvas offcanvas-bottom\";\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"div\", { className: className, id: \"bottomSheet\", tabIndex: -1, role: \"dialog\", style: { height: 'initial' } }, props.children)));\r\n};\r\nexport const OptionsSheet = (props) => {\r\n    return (React.createElement(BottomSheet, null,\r\n        React.createElement(\"div\", { className: \"list-group list-group-flush\" },\r\n            React.createElement(\"a\", { className: \"list-group-item list-group-item-action\", onClick: () => props.onDone(props.id) }, \"Mark as done\"),\r\n            React.createElement(\"a\", { className: \"list-group-item list-group-item-action\", onClick: () => props.onEdit(props.id) }, \"Edit\"),\r\n            React.createElement(\"a\", { className: \"list-group-item list-group-item-action\", onClick: () => props.onDelete(props.id) }, \"Delete\"))));\r\n};\r\n//# sourceMappingURL=OptionsSheet.js.map","import * as React from \"react\";\r\nimport { DateTime } from \"luxon\";\r\nexport const MaybeAgainCard = (props) => {\r\n    const timeAgo = DateTime.fromMillis(props.experience.last || 0).toRelative();\r\n    return (React.createElement(\"div\", { className: \"card mb-3\" },\r\n        React.createElement(\"div\", { className: \"card-body\" },\r\n            React.createElement(\"small\", { className: \"text-muted text-uppercase\" },\r\n                \"It was \",\r\n                timeAgo,\r\n                \", Maybe again\\u2026\"),\r\n            React.createElement(\"div\", null, props.experience.name))));\r\n};\r\n//# sourceMappingURL=MaybeAgainCard.js.map","import * as React from \"react\";\r\nexport const NeverCard = (props) => {\r\n    return (React.createElement(\"div\", { className: \"card mb-3\" },\r\n        React.createElement(\"div\", { className: \"card-body\" },\r\n            React.createElement(\"small\", { className: \"text-muted text-uppercase\" }, \"You have never\\u2026\"),\r\n            React.createElement(\"div\", null, props.experience.name))));\r\n};\r\n//# sourceMappingURL=NeverCard.js.map","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport const PwaInstaller: React.FunctionComponent = () => {\r\n    let deferredPrompt: any;\r\n    const [showInstallPrompt, setShowInstallPrompt] = useState(false);\r\n\r\n    function handleInstall(): void {\r\n        setShowInstallPrompt(false);\r\n        deferredPrompt.prompt();\r\n        deferredPrompt.userChoice.then((choiceResult: any) => {\r\n            if (choiceResult.outcome === \"accepted\") {\r\n                console.log(\"User accepted the A2HS prompt\");\r\n            } else {\r\n                console.log(\"User dismissed the A2HS prompt\");\r\n            }\r\n            deferredPrompt = null;\r\n        });\r\n    }\r\n\r\n    function beforeInstallPrompt(event: Event): void {\r\n        deferredPrompt = event;\r\n        setShowInstallPrompt(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"beforeinstallprompt\", beforeInstallPrompt);\r\n        return () => {\r\n            window.removeEventListener(\"beforeinstallprompt\", beforeInstallPrompt);\r\n        };\r\n    });\r\n\r\n    if (showInstallPrompt) {\r\n        return (\r\n            <button className=\"btn btn-outline-success me-sm-2 d-none d-xl-inline\" onClick={handleInstall} title=\"Install web application\">Install</button>\r\n        );\r\n    }\r\n\r\n    return null;\r\n};\r\n","import * as React from \"react\";\r\n\r\ninterface IProps {\r\n    isOpen: boolean;\r\n    onClose(): void;\r\n}\r\n\r\nexport const ShortcutsDialog: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"modal fade\" id=\"shortcutsModal\" tabIndex={-1} role=\"dialog\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\">Keyboard Shortcuts</h5>\r\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" onClick={props.onClose}></button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <kbd><kbd>Shift</kbd> + <kbd>Alt</kbd> + <kbd>N</kbd></kbd>\r\n                                    </div>\r\n                                    <div className=\"col\">Add new experience</div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <kbd><kbd>Shift</kbd> + <kbd>Alt</kbd> + <kbd>S</kbd></kbd>\r\n                                    </div>\r\n                                    <div className=\"col\">Search</div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <kbd><kbd>Shift</kbd> + <kbd>Alt</kbd> + <kbd>P</kbd></kbd>\r\n                                    </div>\r\n                                    <div className=\"col\">Preferences</div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <kbd><kbd>Shift</kbd> + <kbd>Alt</kbd> + <kbd>R</kbd></kbd>\r\n                                    </div>\r\n                                    <div className=\"col\">Reverse sort</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\" onClick={props.onClose}>Close</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\n\r\ninterface IProps {\r\n    message: string;\r\n    show: boolean;\r\n}\r\n\r\nexport const Toast: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    let className = \"toast fixed-bottom bg-dark text-white mx-auto mb-3 fade\";\r\n    if (props.show) {\r\n        className += \" show\";\r\n    }\r\n    return (\r\n        <div className={className} role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\r\n            <div className=\"toast-body\">\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { AddExperienceDialog } from \"../components/AddExperienceDialog\";\r\nimport { EditExperienceDialog } from \"../components/EditExperienceDialog\";\r\nimport { ExperienceList } from \"../components/ExperienceList\";\r\nimport { BottomSheet } from \"../components/OptionsSheet\";\r\nimport { MaybeAgainCard } from \"../components/MaybeAgainCard\";\r\nimport { NeverCard } from \"../components/NeverCard\";\r\nimport { PwaInstaller } from \"../components/PwaInstaller\";\r\nimport { ShortcutsDialog } from \"../components/ShortcutsDialog\";\r\nimport { TagList } from \"../components/TagList\";\r\nimport { Toast } from \"../components/Toast\";\r\nimport \"./Home.css\";\r\nimport * as bootstrap from \"bootstrap\";\r\nexport const Home = (props) => {\r\n    const [activeId, setActiveId] = useState(\"\");\r\n    const [activeExperience, setActiveExperience] = useState();\r\n    //const [experiences, setExperiences] = useState(props.storage.get());\r\n    const [experiences, setExperiences] = useState(props.experiences);\r\n    const [maybeAgainCardExperience, setMaybeAgainCardExperience] = useState(null);\r\n    const [neverCardExperience, setNeverCardExperience] = useState(null);\r\n    const [reverse, setReverse] = useState(false);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [showShortcutsDialog, setShowShortcutsDialog] = useState(false);\r\n    const [showTags, setShowTags] = useState(false);\r\n    const [showToast, setShowToast] = useState(false);\r\n    const [tag, setTag] = useState(\"\");\r\n    const [toastMessage, setToastMessage] = useState(\"\");\r\n    const prefShowMaybeAgainCard = localStorage.getItem(\"showMaybeAgainCard\") || \"false\";\r\n    const prefShowNeverCard = localStorage.getItem(\"showNeverCard\") || \"true\";\r\n    const [showMaybeAgainCard] = useState(prefShowMaybeAgainCard === \"true\");\r\n    const [showNeverCard] = useState(prefShowNeverCard === \"true\");\r\n    const bottomSheet = document.getElementById(\"bottomSheet\");\r\n    let timerId = 0;\r\n    useEffect(() => {\r\n        if (props.experiences.length !== 0) {\r\n            const maybeExp = randomExperience(props.experiences.filter(x => x.last !== null && x.last !== undefined));\r\n            setMaybeAgainCardExperience(maybeExp);\r\n            const exp = randomExperience(props.experiences.filter(x => x.last === null));\r\n            setNeverCardExperience(exp);\r\n        }\r\n    }, [props.experiences]);\r\n    function handleAddExperience(name, tag) {\r\n        const modalEl = document.getElementById('addModal');\r\n        if (modalEl !== null) {\r\n            const modal = bootstrap.Modal.getInstance(modalEl);\r\n            modal === null || modal === void 0 ? void 0 : modal.hide();\r\n        }\r\n        const experience = {\r\n            id: uuid(),\r\n            name,\r\n            tag,\r\n        };\r\n        setExperiences((prevState) => [...prevState, experience]);\r\n    }\r\n    function handleClick(key) {\r\n        if (bottomSheet !== null) {\r\n            const offcanvas = bootstrap.Offcanvas.getInstance(bottomSheet);\r\n            offcanvas === null || offcanvas === void 0 ? void 0 : offcanvas.hide(); // fix\r\n        }\r\n        setExperiences((prevState) => prevState.map(i => i.id === key ? Object.assign(Object.assign({}, i), { last: new Date().getTime() }) : i));\r\n        setToastMessage(\"Marked as done\");\r\n        setShowToast(true);\r\n        window.clearTimeout(timerId);\r\n        timerId = window.setTimeout(() => {\r\n            setShowToast(false);\r\n        }, 1500);\r\n    }\r\n    function handleDelete(key) {\r\n        if (bottomSheet !== null) {\r\n            const offcanvas = bootstrap.Offcanvas.getInstance(bottomSheet);\r\n            offcanvas === null || offcanvas === void 0 ? void 0 : offcanvas.hide(); // fix\r\n        }\r\n        setExperiences((prevState) => (prevState.filter(e => e.id !== key)));\r\n        setToastMessage(\"Removed\");\r\n        setShowToast(true);\r\n        window.clearTimeout(timerId);\r\n        timerId = window.setTimeout(() => {\r\n            setShowToast(false);\r\n        }, 1500);\r\n    }\r\n    function handleOpenOptions(id) {\r\n        const exp = experiences.find(x => x.id === id);\r\n        setActiveId(id);\r\n        setActiveExperience(exp);\r\n        if (bottomSheet !== null) {\r\n            const offcanvas = new bootstrap.Offcanvas(bottomSheet);\r\n            offcanvas.show(bottomSheet); // fix\r\n        }\r\n    }\r\n    function handleEditOpenClick(id) {\r\n        const exp = experiences.find(x => x.id === id);\r\n        setActiveExperience(exp);\r\n        const el = document.getElementById('bottomSheet');\r\n        if (el !== null) {\r\n            const offcanvas = bootstrap.Offcanvas.getInstance(el);\r\n            offcanvas === null || offcanvas === void 0 ? void 0 : offcanvas.hide(); // fix\r\n        }\r\n        const modalEl = document.getElementById('editModal');\r\n        if (modalEl !== null) {\r\n            const modal = new bootstrap.Modal(modalEl, { backdrop: 'static' });\r\n            modal.show(); // fix\r\n        }\r\n    }\r\n    function handleEditSaveClick(experience) {\r\n        const modalEl = document.getElementById('editModal');\r\n        if (modalEl !== null) {\r\n            const modal = bootstrap.Modal.getInstance(modalEl);\r\n            modal === null || modal === void 0 ? void 0 : modal.hide();\r\n        }\r\n        setExperiences((prevState) => (prevState.map(e => {\r\n            if (e.id === experience.id) {\r\n                e = experience;\r\n            }\r\n            return e;\r\n        })));\r\n        setToastMessage(\"Edited: \" + experience.name);\r\n        setShowToast(true);\r\n        window.clearTimeout(timerId);\r\n        timerId = window.setTimeout(() => {\r\n            setShowToast(false);\r\n        }, 1500);\r\n    }\r\n    function handleChange(event) {\r\n        setSearch(event.currentTarget.value);\r\n    }\r\n    function handleDropdownClick(event) {\r\n        event.target.parentElement.classList.toggle(\"dropup\");\r\n        setShowTags((prevState) => !prevState);\r\n    }\r\n    function handleSort() {\r\n        setReverse((prevState) => !prevState);\r\n    }\r\n    function handleTagClick(tag) {\r\n        setTag(tag);\r\n    }\r\n    function randomExperience(experiences) {\r\n        return experiences[Math.floor(Math.random() * experiences.length)];\r\n    }\r\n    let myExperiences;\r\n    if (search !== \"\" || tag !== \"\") {\r\n        myExperiences = experiences.filter(x => x.name.toLowerCase().includes(search.toLowerCase()));\r\n        if (tag !== \"\") {\r\n            myExperiences = myExperiences.filter(x => x.tag != null && x.tag.includes(tag));\r\n        }\r\n    }\r\n    else {\r\n        myExperiences = experiences.filter(x => x.last != null);\r\n    }\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"header\", { className: \"bg-white fixed-top shadow-sm\" },\r\n            React.createElement(\"nav\", { className: \"navbar navbar-expand-lg navbar-light bg-white\" },\r\n                React.createElement(\"div\", { className: \"container-fluid\" },\r\n                    React.createElement(\"div\", { className: \"d-flex flex-grow-1\" },\r\n                        React.createElement(\"span\", { className: \"navbar-brand d-none d-xl-block\" }, \"Cocoberry\"),\r\n                        React.createElement(\"div\", { className: \"me-auto\" },\r\n                            React.createElement(\"div\", { className: \"input-group\" },\r\n                                React.createElement(\"input\", { className: \"form-control\", type: \"search\", accessKey: \"s\", placeholder: \"Search\\u2026\", title: \"Search\", onChange: handleChange, \"aria-label\": \"Search\" }),\r\n                                React.createElement(\"button\", { className: \"btn btn-outline-success dropdown-toggle\", type: \"button\", onClick: handleDropdownClick, \"aria-label\": \"Show tags\" }))),\r\n                        React.createElement(\"div\", { className: \"d-flex ms-2\" },\r\n                            React.createElement(PwaInstaller, null),\r\n                            React.createElement(\"button\", { className: \"btn btn-outline-success me-2 d-none d-xl-inline\", accessKey: \"?\", onClick: () => setShowShortcutsDialog(true), title: \"Shortcuts\", \"data-bs-toggle\": \"modal\", \"data-bs-target\": \"#shortcutsModal\" }, \"K\"),\r\n                            React.createElement(\"button\", { className: \"btn btn-outline-success me-2 d-none d-xl-inline\", accessKey: \"r\", onClick: handleSort, title: \"Sort\" }, \"\\u25B2\"),\r\n                            React.createElement(\"button\", { className: \"btn btn-outline-success me-2\", accessKey: \"n\", title: \"Add new experience\", \"data-bs-toggle\": \"modal\", \"data-bs-target\": \"#addModal\" }, \"+\"),\r\n                            React.createElement(\"button\", { className: \"btn btn-outline-success\", accessKey: \"p\", onClick: () => props.onNavigation(\"Preferences\") }, \"\\u2630\"))))),\r\n            showTags &&\r\n                React.createElement(\"div\", { className: \"container\" },\r\n                    React.createElement(TagList, { activeTag: tag, tags: props.tags, onClick: handleTagClick }))),\r\n        React.createElement(\"main\", { className: \"App container\" },\r\n            showMaybeAgainCard && search === \"\" && tag === \"\" && maybeAgainCardExperience &&\r\n                React.createElement(MaybeAgainCard, { experience: maybeAgainCardExperience }),\r\n            showNeverCard && search === \"\" && tag === \"\" && neverCardExperience &&\r\n                React.createElement(NeverCard, { experience: neverCardExperience }),\r\n            React.createElement(ExperienceList, { experiences: myExperiences, reverse: reverse, onClick: handleOpenOptions, onEdit: handleEditOpenClick }),\r\n            search !== \"\" && myExperiences.length === 0 &&\r\n                React.createElement(React.Fragment, null,\r\n                    React.createElement(\"p\", null, \"There are no matched experiences.\"),\r\n                    React.createElement(\"button\", { className: \"btn btn-outline-secondary\", \"data-bs-toggle\": \"modal\", \"data-bs-target\": \"#addModal\" }, \"Add new experience\"))),\r\n        React.createElement(AddExperienceDialog, { name: search, tags: props.tags, onAdd: handleAddExperience }),\r\n        activeExperience &&\r\n            React.createElement(EditExperienceDialog, { experience: activeExperience, tags: props.tags, onSave: handleEditSaveClick }),\r\n        React.createElement(ShortcutsDialog, { isOpen: showShortcutsDialog, onClose: () => setShowShortcutsDialog(false) }),\r\n        React.createElement(BottomSheet, null,\r\n            React.createElement(\"div\", { className: \"list-group list-group-flush\" },\r\n                React.createElement(\"a\", { className: \"list-group-item list-group-item-action\", onClick: () => handleClick(activeId) }, \"Mark as done\"),\r\n                React.createElement(\"a\", { className: \"list-group-item list-group-item-action\", onClick: () => handleEditOpenClick(activeId) }, \"Edit\"),\r\n                React.createElement(\"a\", { className: \"list-group-item list-group-item-action\", onClick: () => handleDelete(activeId) }, \"Delete\"))),\r\n        React.createElement(Toast, { message: toastMessage, show: showToast })));\r\n};\r\n//# sourceMappingURL=Home.js.map","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { IExperience } from \"../IExperience\";\r\nimport { IStorage } from \"../IStorage\";\r\n\r\ninterface IProps {\r\n    storage: IStorage;\r\n    onNavigation(component: string): void;\r\n}\r\n\r\ninterface IPreferences {\r\n    showMaybeAgainCard: boolean;\r\n    showNeverCard: boolean;\r\n}\r\n\r\nexport const Preferences: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    const fileInput: any = React.createRef();\r\n\r\n    const prefShowMaybeAgainCard = localStorage.getItem(\"showMaybeAgainCard\") || \"false\";\r\n    const prefShowNeverCard = localStorage.getItem(\"showNeverCard\") || \"true\";\r\n\r\n    const [preferences, setPreferences] = useState<IPreferences>({\r\n        showMaybeAgainCard: prefShowMaybeAgainCard === \"true\",\r\n        showNeverCard: prefShowNeverCard === \"true\",\r\n    });\r\n\r\n    function handleExport(): void {\r\n        const json = JSON.stringify(props.storage.get());\r\n        const file = new File([json], \"cocoberry.json\", { type: \"octet/stream\" });\r\n        const url = window.URL.createObjectURL(file);\r\n        window.location.assign(url);\r\n    }\r\n\r\n    function handleBrowse(): void {\r\n        const elem = document.getElementById(\"file\");\r\n        const input = elem as HTMLInputElement;\r\n        input.click();\r\n    }\r\n\r\n    function handleImport(): void {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n            if (typeof reader.result === \"string\") {\r\n                try {\r\n                    const experiences = JSON.parse(reader.result) as IExperience[];\r\n                    //props.onImport(experiences);\r\n                    props.storage.add_many(experiences);\r\n                } catch (e) {\r\n                    alert(e);\r\n                }\r\n            }\r\n        };\r\n        const file: File = fileInput.current.files[0];\r\n        reader.readAsText(file);\r\n    }\r\n\r\n    function handlePreferenceChanged(event: React.ChangeEvent<HTMLInputElement>): void {\r\n        const currentTarget = event.currentTarget;\r\n        setPreferences((prevState: IPreferences) => {\r\n            const preferences: any = { ...prevState };\r\n            preferences[currentTarget.id] = currentTarget.checked;\r\n            return preferences;\r\n        });\r\n        localStorage.setItem(currentTarget.id, currentTarget.checked.toString());\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <header className=\"fixed-top shadow-sm\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-white\">\r\n                    <div className=\"container-fluid\">\r\n                        <button className=\"btn btn-outline-success\" accessKey=\"b\" onClick={() => props.onNavigation(\"\")}>Back</button>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n            <main className=\"App container\">\r\n\r\n                <div className=\"list-group mb-3\">\r\n                    <div className=\"list-group-item\">\r\n                        <div className=\"form-check form-switch\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                id=\"showMaybeAgainCard\"\r\n                                type=\"checkbox\"\r\n                                checked={preferences.showMaybeAgainCard}\r\n                                onChange={handlePreferenceChanged}\r\n                            />\r\n                            <label className=\"form-check-label\" htmlFor=\"showMaybeAgainCard\">Show the maybe-again card</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"list-group-item\">\r\n                        <div className=\"form-check form-switch\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                id=\"showNeverCard\"\r\n                                type=\"checkbox\"\r\n                                checked={preferences.showNeverCard}\r\n                                onChange={handlePreferenceChanged}\r\n                            />\r\n                            <label className=\"form-check-label\" htmlFor=\"showNeverCard\">Show the you-have-never card</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Export and import experiences</h5>\r\n                        <p className=\"card-text\">Your experiences can be imported and exported. They are stored in the JSON format.</p>\r\n                        <input className=\"form-control-file\" id=\"file\" type=\"file\" accept=\"application/json\" onChange={handleImport} ref={fileInput} hidden required />\r\n                    </div>\r\n                    <div className=\"list-group list-group-flush\">\r\n                        <button className=\"list-group-item list-group-item-action\" type=\"button\" accessKey=\"i\" onClick={handleBrowse}>Import from file</button>\r\n                        <button className=\"list-group-item list-group-item-action\" type=\"button\" accessKey=\"e\" onClick={handleExport}>Export to file</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </main>\r\n\r\n            <footer className=\"container mt-3\">\r\n                <p><a href=\"https://github.com/vanillajonathan/cocoberry\" rel=\"noopener noreferrer\" target=\"_blank\">Cocoberry on GitHub</a></p>\r\n                <p>Built with ❤ by Jonathan</p>\r\n            </footer>\r\n\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Home } from \"./views/Home\";\r\nimport { Preferences } from \"./views/Preferences\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\r\nconst App = (props) => {\r\n    const experiences = props.storage.get();\r\n    if (experiences.length === 0) {\r\n        props.storage.add_many(props.seed);\r\n    }\r\n    const [nav, setNav] = useState(\"\");\r\n    function handleNavigation(component) {\r\n        setNav(component);\r\n    }\r\n    if (nav === \"Preferences\") {\r\n        return (React.createElement(Preferences, { storage: props.storage, onNavigation: handleNavigation }));\r\n    }\r\n    return (React.createElement(Home, { experiences: props.storage.get(), onNavigation: handleNavigation, tags: props.tags }));\r\n};\r\nApp.defaultProps = {\r\n    seed: [],\r\n    tags: [],\r\n};\r\nexport default App;\r\n//# sourceMappingURL=App.js.map","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { v4 as uuid } from \"uuid\";\r\nimport { IStorage, INewExperience } from \"./IStorage\";\r\nimport { IExperience } from \"./IExperience\";\r\n\r\nexport class LocalStorage implements IStorage {\r\n    public add(experience: INewExperience): void {\r\n        const experiences = this.get();\r\n        const item: IExperience = {\r\n            id: uuid(),\r\n            last: experience.last,\r\n            name: experience.name,\r\n            tag: experience.tag,\r\n        };\r\n        experiences.push(item);\r\n        localStorage.setItem(\"experiences\", JSON.stringify(experiences));\r\n    }\r\n\r\n    public add_many(experiences: INewExperience[]): void {\r\n        const data = this.get();\r\n        for (const experience of experiences) {\r\n            const item: IExperience = {\r\n                id: uuid(),\r\n                last: experience.last,\r\n                name: experience.name,\r\n                tag: experience.tag,\r\n            };\r\n            data.push(item);\r\n        }\r\n        localStorage.setItem(\"experiences\", JSON.stringify(data));\r\n    }\r\n\r\n    public delete(id: string): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    public get(): IExperience[] {\r\n        const experiences = localStorage.getItem(\"experiences\");\r\n        if (experiences === null || experiences === \"\") {\r\n            return [];\r\n        }\r\n        return JSON.parse(experiences);\r\n    }\r\n\r\n    public update(experience: IExperience): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { IStorage, INewExperience } from \"./IStorage\";\r\nimport { LocalStorage } from \"./localStorage\";\r\n//import * as data from \"./seed.json\";\r\n\r\nimport seed from \"./seed.json\";\r\n\r\nconst experiences: INewExperience[] = [\r\n    { name: \"Eat apple 🍏\", last: new Date(2018, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat avocado 🥑\", last: new Date(2016, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat banana 🍌\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat bell pepper 🫑\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat blueberries 🫐\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat broccoli 🥦\", tag: \"vegetable\" },\r\n    { name: \"Eat carrot 🥕\", tag: \"vegetable\" },\r\n    { name: \"Eat cherries 🍒\", last: new Date(2017, 5, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat chili 🌶️\", tag: \"fruit\" },\r\n    { name: \"Eat cucumber 🥒\", last: new Date(2017, 6, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat corn 🌽\", last: new Date(2017, 6, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat coconut 🥥\", last: new Date(2017, 7, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat eggplant 🍆\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat garlic 🧄\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat grapes 🍇\", last: new Date(2017, 9, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat leafy green 🥬\", tag: \"fruit\" },\r\n    { name: \"Eat lemon 🍋\", tag: \"fruit\" },\r\n    { name: \"Eat kiwi 🥝\", last: new Date(2017, 10, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat mango 🥭\", last: new Date(2017, 11, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat melon 🍈\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat mushroom 🍄\", last: new Date(2017, 4, 3).getTime() },\r\n    { name: \"Eat olives 🫒\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat onion 🧅\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat orange 🍊\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat peach 🍑\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat peanuts 🥜\", tag: \"fruit\" },\r\n    { name: \"Eat pear 🍐\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat pineapple 🍍\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat potato 🥔\", last: new Date(2018, 10, 1).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat tomato 🍅\", last: new Date(2018, 10, 1).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat strawberry 🍓\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat watermelon 🍉\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Get a massage 💆‍♂️💆‍♀️\", tag: \"activity\" },\r\n    { name: \"Bake a applepie 🥧🍪\", last: new Date(2018, 7, 13).getTime() },\r\n    { name: \"Basketball 🏀\", tag: \"activity\" },\r\n    { name: \"Bike 🚴\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Bowling 🎳\", last: null, tag: \"activity\" },\r\n    { name: \"Box 🥊\", last: null, tag: \"activity\" },\r\n    { name: \"Climb 🧗\", last: null, tag: \"activity\" },\r\n    { name: \"Cold shower 🥶🚿\", tag: \"activity\" },\r\n    { name: \"Dance 💃🕺\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Fasting 🍽\" },\r\n    { name: \"Football ⚽\", tag: \"activity\" },\r\n    { name: \"Guitar 🎸\", last: null, tag: \"activity\" },\r\n    { name: \"Ice bath 🥶🛀\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Ice skate ⛸️\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Meditate 🧘‍\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Read 📖\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Run 🏃\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Paint 🎨\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Play chess ♟️\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Play pool 🎱\", last: null, tag: \"activity\" },\r\n    { name: \"Sauna 🧖‍♂️🧖‍♀️\", tag: \"activity\" },\r\n    { name: \"Ski 🎿\", tag: \"activity\" },\r\n    { name: \"Swim 🏊\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Theatre 🎭\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Yoga 🧘\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Watch a movie 🎬\", last: null, tag: \"activity\" },\r\n    { name: \"Volleyball 🏐\", last: null, tag: \"activity\" },\r\n    { name: \"Wrestle 🤼\", last: null, tag: \"activity\" },\r\n    { name: \"Cook pasta 🍝\", last: null },\r\n    { name: \"Beach 🏖\", last: null, tag: \"places\" },\r\n    { name: \"Botanical garden 🌿\", last: null, tag: \"places\" },\r\n    { name: \"Cemetery ⚱️\", last: null, tag: \"places\" },\r\n    { name: \"Museum 🖼\", last: null, tag: \"places\" },\r\n    { name: \"Park 🏞\", last: null, tag: \"places\" },\r\n];\r\n\r\nconst storage: IStorage = new LocalStorage();\r\nconst tags: string[] = [\"Activity\", \"Fruit\", \"Places\", \"Vegetable\"];\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App seed={experiences} storage={storage} tags={tags} />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}