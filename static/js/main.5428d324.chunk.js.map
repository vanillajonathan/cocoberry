{"version":3,"sources":["components/TagList.tsx","components/AddExperienceDialog.tsx","components/EditExperienceDialog.tsx","components/ExperienceList.tsx","components/OptionsSheet.tsx","components/MaybeAgainCard.tsx","components/NeverCard.tsx","components/PwaInstaller.tsx","components/ShortcutsDialog.tsx","components/Toast.tsx","views/Home.tsx","views/Preferences.tsx","App.tsx","serviceWorker.ts","localStorage.tsx","index.tsx"],"names":["TagList","props","handleClick","event","activeTag","currentTarget","innerText","toLowerCase","onClick","className","tags","map","tag","AddExperienceDialog","useState","name","setName","setTag","nameInput","React","useEffect","current","focus","myModal","document","getElementById","myInput","addEventListener","id","tabIndex","role","type","onSubmit","preventDefault","onAdd","htmlFor","value","onChange","target","ref","autoFocus","required","defaultProps","EditExperienceDialog","experience","last","setLast","onSave","tagName","Date","toISOString","substring","date","getTime","ExperienceList","compare","a","b","weekAgo","experiences","filter","x","DateTime","local","minus","weeks","valueOf","sort","monthAgo","months","yearAgo","years","reverse","weekGroup","onEdit","monthGroup","yearGroup","length","ExperienceListGroup","toLocaleDateString","dateTime","title","toLocaleString","fromMillis","toRelative","BottomSheet","style","height","children","MaybeAgainCard","timeAgo","NeverCard","PwaInstaller","deferredPrompt","showInstallPrompt","setShowInstallPrompt","beforeInstallPrompt","window","removeEventListener","prompt","userChoice","then","choiceResult","outcome","console","log","ShortcutsDialog","onClose","Toast","show","message","Home","myExperiences","activeId","setActiveId","activeExperience","setActiveExperience","setExperiences","maybeAgainCardExperience","setMaybeAgainCardExperience","neverCardExperience","setNeverCardExperience","setReverse","search","setSearch","showShortcutsDialog","setShowShortcutsDialog","showTags","setShowTags","showToast","setShowToast","toastMessage","setToastMessage","prefShowMaybeAgainCard","localStorage","getItem","prefShowNeverCard","showMaybeAgainCard","showNeverCard","bottomSheet","timerId","handleEditOpenClick","exp","find","el","offcanvas","bootstrap","getInstance","hide","modalEl","backdrop","randomExperience","Math","floor","random","maybeExp","undefined","includes","accessKey","placeholder","parentElement","classList","toggle","prevState","onNavigation","modal","uuid","e","clearTimeout","setTimeout","isOpen","key","i","handleDelete","Preferences","fileInput","preferences","setPreferences","handlePreferenceChanged","checked","setItem","toString","accept","reader","FileReader","onloadend","result","JSON","parse","storage","add_many","alert","file","files","readAsText","hidden","click","json","stringify","get","File","url","URL","createObjectURL","location","assign","href","rel","App","seed","nav","setNav","handleNavigation","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","LocalStorage","this","item","push","data","Error","ReactDOM","process","origin","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5428d324.chunk.js","sourcesContent":["import * as React from \"react\";\n\ninterface IProps {\n    activeTag: string;\n    tags: string[];\n    onClick(tag: string): void;\n}\n\nexport const TagList: React.FunctionComponent<IProps> = (props: IProps) => {\n    function handleClick(event: React.MouseEvent<HTMLElement>): void {\n        let activeTag = event.currentTarget.innerText.toLowerCase();\n        if (activeTag === props.activeTag) {\n            activeTag = \"\";\n        }\n        props.onClick(activeTag);\n    }\n\n    return (\n        <ul className=\"list-inline\">\n            {props.tags.map(tag => {\n                let className = \"badge \";\n                className += (tag.toLowerCase() === props.activeTag ? \"bg-primary\" : \"bg-light text-dark\");\n                return <li className=\"list-inline-item\" key={tag}><span className={className} onClick={handleClick}>{tag}</span></li>;\n            })}\n        </ul>\n    );\n};\n","import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { TagList } from \"./TagList\";\n\ninterface IProps {\n    name: string;\n    tags: string[];\n    onAdd(name: string, tag: string): void;\n}\n\nexport const AddExperienceDialog: React.FunctionComponent<IProps> = (props: IProps) => {\n    const [name, setName] = useState(props.name);\n    const [tag, setTag] = useState(\"\");\n    const nameInput = React.createRef<HTMLInputElement>();\n\n    useEffect(() => {\n        if (nameInput.current) {\n            nameInput.current.focus();\n        }\n\n        var myModal = document.getElementById('addModal');\n        var myInput = document.getElementById('name');\n        if (myModal !== null && myInput !== null) {\n            myModal.addEventListener('shown.bs.modal',\n                () => {\n                    if (myInput !== null) {\n                        myInput.focus();\n                    }\n                });\n        }\n    });\n\n    function handleChange(event: React.ChangeEvent<HTMLInputElement>): void {\n        setName(event.target.value);\n    }\n\n    function handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\n        event.preventDefault();\n        props.onAdd(name, tag);\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"modal fade\" id=\"addModal\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabIndex={-1} role=\"dialog\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\">Add experience</h5>\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                        </div>\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"modal-body\">\n                                <div className=\"mb-3\">\n                                    <label className=\"form-label\" htmlFor=\"name\">Title</label>\n                                    <input className=\"form-control\" id=\"name\" type=\"text\" value={name} onChange={handleChange} ref={nameInput} autoFocus required />\n                                </div>\n                                <div className=\"mb-3\">\n                                    <label className=\"form-label\">Tag</label>\n                                    <TagList\n                                        activeTag={tag}\n                                        tags={props.tags}\n                                        onClick={tag => setTag(tag)}\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                                <button type=\"submit\" className=\"btn btn-primary\">Add</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nAddExperienceDialog.defaultProps = {\n    name: \"\",\n};\n","import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { TagList } from \"./TagList\";\nimport { IExperience } from \"../IExperience\";\n\ninterface IProps {\n    experience: IExperience;\n    tags: string[];\n    onSave(experience: IExperience): void;\n}\n\nexport const EditExperienceDialog: React.FunctionComponent<IProps> = (props: IProps) => {\n    const [name, setName] = useState(props.experience.name);\n    const [tag, setTag] = useState(props.experience.tag || \"\");\n    const [last, setLast] = useState(props.experience.last || 0);\n    const nameInput = React.createRef<HTMLInputElement>();\n\n    useEffect(() => {\n        setName(props.experience.name);\n        setTag(props.experience.tag || \"\");\n        setLast(props.experience.last || 0);\n    }, [props.experience]);\n\n    useEffect(() => {\n        if (nameInput.current) {\n            nameInput.current.focus();\n        }\n\n        var myModal = document.getElementById('editModal');\n        var myInput = document.getElementById('name');\n        if (myModal !== null && myInput !== null) {\n            myModal.addEventListener('shown.bs.modal',\n                () => {\n                    if (myInput !== null) {\n                        myInput.focus();\n                    }\n                });\n        }\n    });\n\n    function handleChange(event: React.ChangeEvent<HTMLInputElement>): void {\n        setName(event.target.value);\n    }\n\n    function handleSetTag(tagName: string): void {\n        setTag(tagName);\n    }\n\n    function handleTimeChange(event: React.ChangeEvent<HTMLInputElement>): void {\n        const date = new Date(event.target.value);\n        setLast(date.getTime());\n    }\n\n    function handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\n        event.preventDefault();\n        const experience: IExperience = { id: props.experience.id, name: name, tag: tag, last: last };\n        props.onSave(experience);\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"modal fade\" id=\"editModal\" data-bs-keyboard=\"false\" tabIndex={-1} role=\"dialog\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\">Edit experience</h5>\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                        </div>\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"modal-body\">\n                                <div className=\"mb-3\">\n                                    <label className=\"form-label\" htmlFor=\"name\">Title</label>\n                                    <input className=\"form-control\" id=\"name\" type=\"text\" value={name} onChange={handleChange} ref={nameInput} autoFocus required />\n                                </div>\n                                <div className=\"mb-3\">\n                                    <label className=\"form-label\">Tag</label>\n                                    <TagList activeTag={tag} tags={props.tags} onClick={handleSetTag} />\n                                </div>\n                                <div className=\"mb-3\">\n                                    <label className=\"form-label\" htmlFor=\"time\">Last</label>\n                                    <input className=\"form-control\" id=\"time\" type=\"datetime-local\" value={new Date(last).toISOString().substring(0, 16)} onChange={handleTimeChange} />\n                                </div>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                                <button type=\"submit\" className=\"btn btn-primary\">Save</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n","import * as React from \"react\";\nimport { DateTime } from \"luxon\";\nimport { IExperience } from \"../IExperience\";\n\ninterface IProps {\n    experiences: IExperience[];\n    reverse?: boolean;\n    onClick(id: string): void;\n    onEdit(id: string): void;\n}\n\nexport const ExperienceList: React.FunctionComponent<IProps> = (props: IProps) => {\n    function compare(a: IExperience, b: IExperience): number {\n        if (a.last == null || b.last == null) {\n            return 0;\n        }\n        if (a.last < b.last) {\n            return -1;\n        }\n        if (a.last > b.last) {\n            return 1;\n        }\n        return 0;\n    }\n\n    const weekAgo = props.experiences\n        .filter(x => x.last != null &&\n            x.last < DateTime.local().minus({ weeks: 1 }).valueOf() &&\n            x.last > DateTime.local().minus({ weeks: 2 }).valueOf()).sort(compare);\n\n    const monthAgo = props.experiences\n        .filter(x => x.last != null &&\n            x.last < DateTime.local().minus({ months: 1 }).valueOf() &&\n            x.last > DateTime.local().minus({ months: 2 }).valueOf()).sort(compare);\n\n    const yearAgo = props.experiences\n        .filter(x => x.last != null &&\n            x.last < DateTime.local().minus({ years: 1 }).valueOf() &&\n            x.last > DateTime.local().minus({ years: 2 }).valueOf()).sort(compare);\n\n    let experiences = props.experiences.sort(compare);\n    if (props.reverse) {\n        experiences = experiences.reverse();\n    }\n\n    const weekGroup = (\n        <React.Fragment>\n            <h2 className=\"h5\">A week ago</h2>\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={weekAgo} />\n        </React.Fragment>);\n\n    const monthGroup = (\n        <React.Fragment>\n            <h2 className=\"h5\">A month ago</h2>\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={monthAgo} />\n        </React.Fragment>);\n\n    const yearGroup = (\n        <React.Fragment>\n            <h2 className=\"h5\">A year ago</h2>\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={yearAgo} />\n        </React.Fragment>);\n\n    return (\n        <React.Fragment>\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={experiences} />\n            {weekAgo.length > 0 && weekGroup}\n            {monthAgo.length > 0 && monthGroup}\n            {yearAgo.length > 0 && yearGroup}\n        </React.Fragment>\n    );\n};\n\ninterface IExperienceListGroupProps {\n    experiences: IExperience[];\n    onClick(id: string): void;\n    onEdit(id: string): void;\n}\n\nconst ExperienceListGroup: React.FunctionComponent<IExperienceListGroupProps> = (props: IExperienceListGroupProps) => {\n    return (\n        <div className=\"list-group mb-3\">\n            {props.experiences.map(experience =>\n                <a className=\"list-group-item list-group-item-action\" key={experience.id} onClick={() => props.onClick(experience.id)}>\n                    {experience.name}\n                    {experience.last != null && last(experience)}\n                </a>\n            )}\n        </div>);\n};\n\nfunction last(experience: any): JSX.Element {\n    return (\n        <React.Fragment>\n            <div><small className=\"float-end text-muted\">{new Date(experience.last).toLocaleDateString(\"sv-se\")}</small></div>\n            <time className=\"d-block text-muted small\" dateTime={new Date(experience.last).toISOString()} title={new Date(experience.last).toLocaleString()}>{DateTime.fromMillis(experience.last).toRelative()}</time>\n        </React.Fragment>);\n}","import * as React from \"react\";\n\ninterface IBottomSheetProps {\n    children: JSX.Element;\n}\n\nexport const BottomSheet: React.FunctionComponent<IBottomSheetProps> = (props: IBottomSheetProps) => {\n    const className = \"offcanvas offcanvas-bottom\";\n\n    return (\n        <React.Fragment>\n            <div className={className} id=\"bottomSheet\" tabIndex={-1} role=\"dialog\" style={{ height: 'initial' }}>\n                {props.children}\n            </div>\n        </React.Fragment>\n    );\n};\n\ninterface IOptionSheetProps {\n    id: string;\n    onClose(): void;\n    onDone(id: string): void;\n    onEdit(id: string): void;\n    onDelete(id: string): void;\n}\n\nexport const OptionsSheet: React.FunctionComponent<IOptionSheetProps> = (props: IOptionSheetProps) => {\n    return (\n        <BottomSheet>\n            <div className=\"list-group list-group-flush\">\n                <a className=\"list-group-item list-group-item-action\" onClick={() => props.onDone(props.id)}>Mark as done</a>\n                <a className=\"list-group-item list-group-item-action\" onClick={() => props.onEdit(props.id)}>Edit</a>\n                <a className=\"list-group-item list-group-item-action\" onClick={() => props.onDelete(props.id)}>Delete</a>\n            </div>\n        </BottomSheet>\n    );\n};\n","import * as React from \"react\";\nimport { DateTime } from \"luxon\";\nimport { IExperience } from \"../IExperience\";\n\ninterface IProps {\n    experience: IExperience;\n}\n\nexport const MaybeAgainCard: React.FunctionComponent<IProps> = (props: IProps) => {\n    const timeAgo = DateTime.fromMillis(props.experience.last || 0).toRelative();\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body\">\n                <small className=\"text-muted text-uppercase\">It was {timeAgo}, Maybe again…</small>\n                <div>{props.experience.name}</div>\n            </div>\n        </div>\n    );\n};\n","import * as React from \"react\";\nimport { IExperience } from \"../IExperience\";\n\ninterface IProps {\n    experience: IExperience;\n}\n\nexport const NeverCard: React.FunctionComponent<IProps> = (props: IProps) => {\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body\">\n                <small className=\"text-muted text-uppercase\">You have never…</small>\n                <div>{props.experience.name}</div>\n            </div>\n        </div>\n    );\n};\n","import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\n\nexport const PwaInstaller: React.FunctionComponent = () => {\n    let deferredPrompt: any;\n    const [showInstallPrompt, setShowInstallPrompt] = useState(false);\n\n    function handleInstall(): void {\n        setShowInstallPrompt(false);\n        deferredPrompt.prompt();\n        deferredPrompt.userChoice.then((choiceResult: any) => {\n            if (choiceResult.outcome === \"accepted\") {\n                console.log(\"User accepted the A2HS prompt\");\n            } else {\n                console.log(\"User dismissed the A2HS prompt\");\n            }\n            deferredPrompt = null;\n        });\n    }\n\n    function beforeInstallPrompt(event: Event): void {\n        deferredPrompt = event;\n        setShowInstallPrompt(true);\n    }\n\n    useEffect(() => {\n        window.addEventListener(\"beforeinstallprompt\", beforeInstallPrompt);\n        return () => {\n            window.removeEventListener(\"beforeinstallprompt\", beforeInstallPrompt);\n        };\n    });\n\n    if (showInstallPrompt) {\n        return (\n            <button className=\"btn btn-outline-success me-sm-2 d-none d-xl-inline\" onClick={handleInstall} title=\"Install web application\">Install</button>\n        );\n    }\n\n    return null;\n};\n","import * as React from \"react\";\n\ninterface IProps {\n    isOpen: boolean;\n    onClose(): void;\n}\n\nexport const ShortcutsDialog: React.FunctionComponent<IProps> = (props: IProps) => {\n    return (\n        <React.Fragment>\n            <div className=\"modal fade\" id=\"shortcutsModal\" tabIndex={-1} role=\"dialog\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\">Keyboard Shortcuts</h5>\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" onClick={props.onClose}></button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <div className=\"container-fluid\">\n                                <div className=\"row\">\n                                    <div className=\"col\">\n                                        <kbd><kbd>Shift</kbd> + <kbd>Alt</kbd> + <kbd>N</kbd></kbd>\n                                    </div>\n                                    <div className=\"col\">Add new experience</div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col\">\n                                        <kbd><kbd>Shift</kbd> + <kbd>Alt</kbd> + <kbd>S</kbd></kbd>\n                                    </div>\n                                    <div className=\"col\">Search</div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col\">\n                                        <kbd><kbd>Shift</kbd> + <kbd>Alt</kbd> + <kbd>P</kbd></kbd>\n                                    </div>\n                                    <div className=\"col\">Preferences</div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col\">\n                                        <kbd><kbd>Shift</kbd> + <kbd>Alt</kbd> + <kbd>R</kbd></kbd>\n                                    </div>\n                                    <div className=\"col\">Reverse sort</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\" onClick={props.onClose}>Close</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n","import * as React from \"react\";\n\ninterface IProps {\n    message: string;\n    show: boolean;\n}\n\nexport const Toast: React.FunctionComponent<IProps> = (props: IProps) => {\n    let className = \"toast fixed-bottom bg-dark text-white mx-auto mb-3 fade\";\n    if (props.show) {\n        className += \" show\";\n    }\n    return (\n        <div className={className} role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n            <div className=\"toast-body\">\n                {props.message}\n            </div>\n        </div>\n    );\n};\n","import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport { AddExperienceDialog } from \"../components/AddExperienceDialog\";\nimport { EditExperienceDialog } from \"../components/EditExperienceDialog\";\nimport { IExperience } from \"../IExperience\";\nimport { ExperienceList } from \"../components/ExperienceList\";\nimport { BottomSheet } from \"../components/OptionsSheet\";\nimport { MaybeAgainCard } from \"../components/MaybeAgainCard\";\nimport { NeverCard } from \"../components/NeverCard\";\nimport { PwaInstaller } from \"../components/PwaInstaller\";\nimport { ShortcutsDialog } from \"../components/ShortcutsDialog\";\nimport { TagList } from \"../components/TagList\";\nimport { Toast } from \"../components/Toast\";\nimport \"./Home.css\";\nimport * as bootstrap from \"bootstrap\";\n\ninterface IProps {\n    experiences: IExperience[];\n    tags: string[];\n    onNavigation(component: string): void;\n}\n\nexport const Home: React.FunctionComponent<IProps> = (props: IProps) => {\n    const [activeId, setActiveId] = useState(\"\");\n    const [activeExperience, setActiveExperience] = useState<IExperience>();\n    //const [experiences, setExperiences] = useState(props.storage.get());\n    const [experiences, setExperiences] = useState(props.experiences);\n    const [maybeAgainCardExperience, setMaybeAgainCardExperience] = useState<IExperience | null>(null);\n    const [neverCardExperience, setNeverCardExperience] = useState<IExperience | null>(null);\n    const [reverse, setReverse] = useState(false);\n    const [search, setSearch] = useState(\"\");\n    const [showShortcutsDialog, setShowShortcutsDialog] = useState(false);\n    const [showTags, setShowTags] = useState(false);\n    const [showToast, setShowToast] = useState(false);\n    const [tag, setTag] = useState(\"\");\n    const [toastMessage, setToastMessage] = useState(\"\");\n\n    const prefShowMaybeAgainCard = localStorage.getItem(\"showMaybeAgainCard\") || \"false\";\n    const prefShowNeverCard = localStorage.getItem(\"showNeverCard\") || \"true\";\n\n    const [showMaybeAgainCard] = useState(prefShowMaybeAgainCard === \"true\");\n    const [showNeverCard] = useState(prefShowNeverCard === \"true\");\n    const bottomSheet = document.getElementById(\"bottomSheet\");\n\n    let timerId = 0;\n\n    useEffect(() => {\n        if (props.experiences.length !== 0) {\n            const maybeExp = randomExperience(props.experiences.filter(x => x.last !== null && x.last !== undefined));\n            setMaybeAgainCardExperience(maybeExp);\n            const exp = randomExperience(props.experiences.filter(x => x.last === null));\n            setNeverCardExperience(exp);\n        }\n    }, [props.experiences]);\n\n    function handleAddExperience(name: string, tag: string): void {\n        const modalEl = document.getElementById('addModal');\n        if (modalEl !== null) {\n            const modal = bootstrap.Modal.getInstance(modalEl);\n            modal?.hide();\n        }\n        const experience: IExperience = {\n            id: uuid(),\n            name,\n            tag,\n        };\n        setExperiences((prevState: IExperience[]) => [...prevState, experience]);\n    }\n\n    function handleClick(key: string): void {\n        if (bottomSheet !== null) {\n            const offcanvas = bootstrap.Offcanvas.getInstance(bottomSheet);\n            offcanvas?.hide(); // fix\n        }\n        setExperiences((prevState: IExperience[]) => prevState.map(i => i.id === key ? { ...i, last: new Date().getTime() } : i));\n        setToastMessage(\"Marked as done\");\n        setShowToast(true);\n        window.clearTimeout(timerId);\n        timerId = window.setTimeout(() => {\n            setShowToast(false);\n        }, 1500);\n    }\n\n    function handleDelete(key: string): void {\n        if (bottomSheet !== null) {\n            const offcanvas = bootstrap.Offcanvas.getInstance(bottomSheet);\n            offcanvas?.hide(); // fix\n        }\n        setExperiences((prevState: IExperience[]) => (prevState.filter(e => e.id !== key)));\n        setToastMessage(\"Removed\");\n        setShowToast(true);\n        window.clearTimeout(timerId);\n        timerId = window.setTimeout(() => {\n            setShowToast(false);\n        }, 1500);\n    }\n\n    function handleOpenOptions(id: string): void {\n        const exp = experiences.find(x => x.id === id);\n        setActiveId(id);\n        setActiveExperience(exp);\n        if (bottomSheet !== null) {\n            const offcanvas = new bootstrap.Offcanvas(bottomSheet);\n            offcanvas.show(bottomSheet); // fix\n        }\n    }\n\n    function handleEditOpenClick(id: string): void {\n        const exp = experiences.find(x => x.id === id);\n        setActiveExperience(exp);\n        const el = document.getElementById('bottomSheet');\n        if (el !== null) {\n            const offcanvas = bootstrap.Offcanvas.getInstance(el);\n            offcanvas?.hide(); // fix\n        }\n\n        const modalEl = document.getElementById('editModal');\n        if (modalEl !== null) {\n            const modal = new bootstrap.Modal(modalEl, { backdrop: 'static' });\n            modal.show(); // fix\n        }\n    }\n\n    function handleEditSaveClick(experience: IExperience): void {\n        const modalEl = document.getElementById('editModal');\n        if (modalEl !== null) {\n            const modal = bootstrap.Modal.getInstance(modalEl);\n            modal?.hide();\n        }\n        setExperiences((prevState: IExperience[]) => (prevState.map(e => {\n            if (e.id === experience.id) {\n                e = experience;\n            }\n            return e;\n        })));\n        setToastMessage(\"Edited: \" + experience.name);\n        setShowToast(true);\n        window.clearTimeout(timerId);\n        timerId = window.setTimeout(() => {\n            setShowToast(false);\n        }, 1500);\n    }\n\n    function handleChange(event: React.FormEvent<HTMLInputElement>): void {\n        setSearch(event.currentTarget.value);\n    }\n\n    function handleDropdownClick(event: any): void {\n        event.target.parentElement.classList.toggle(\"dropup\");\n        setShowTags((prevState: boolean) => !prevState);\n    }\n\n    function handleSort(): void {\n        setReverse((prevState: boolean) => !prevState);\n    }\n\n    function handleTagClick(tag: string): void {\n        setTag(tag);\n    }\n\n    function randomExperience(experiences: IExperience[]): IExperience {\n        return experiences[Math.floor(Math.random() * experiences.length)];\n    }\n\n    let myExperiences: IExperience[];\n    if (search !== \"\" || tag !== \"\") {\n        myExperiences = experiences.filter(x => x.name.toLowerCase().includes(search.toLowerCase()));\n        if (tag !== \"\") {\n            myExperiences = myExperiences.filter(x => x.tag != null && x.tag.includes(tag));\n        }\n    } else {\n        myExperiences = experiences.filter(x => x.last != null);\n    }\n\n    return (\n        <React.Fragment>\n            <header className=\"bg-white fixed-top shadow-sm\">\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-white\">\n                    <div className=\"container-fluid\">\n                        <div className=\"d-flex flex-grow-1\">\n                            <span className=\"navbar-brand d-none d-xl-block\">Cocoberry</span>\n                            <div className=\"me-auto\">\n                                <div className=\"input-group\">\n                                    <input className=\"form-control\" type=\"search\" accessKey=\"s\" placeholder=\"Search…\" title=\"Search\" onChange={handleChange} aria-label=\"Search\" />\n                                    <button className=\"btn btn-outline-success dropdown-toggle\" type=\"button\" onClick={handleDropdownClick} aria-label=\"Show tags\" />\n                                </div>\n                            </div>\n                            <div className=\"d-flex ms-2\">\n                                <PwaInstaller />\n                                <button className=\"btn btn-outline-success me-2 d-none d-xl-inline\" accessKey=\"?\" onClick={() => setShowShortcutsDialog(true)} title=\"Shortcuts\" data-bs-toggle=\"modal\" data-bs-target=\"#shortcutsModal\">K</button>\n                                <button className=\"btn btn-outline-success me-2 d-none d-xl-inline\" accessKey=\"r\" onClick={handleSort} title=\"Sort\">▲</button>\n                                <button className=\"btn btn-outline-success me-2\" accessKey=\"n\" title=\"Add new experience\" data-bs-toggle=\"modal\" data-bs-target=\"#addModal\">+</button>\n                                <button className=\"btn btn-outline-success\" accessKey=\"p\" onClick={() => props.onNavigation(\"Preferences\")}>☰</button>\n                            </div>\n                        </div>\n                    </div>\n                </nav>\n                {showTags &&\n                    <div className=\"container\">\n                        <TagList activeTag={tag} tags={props.tags} onClick={handleTagClick} />\n                    </div>\n                }\n            </header>\n            <main className=\"App container\">\n                {showMaybeAgainCard && search === \"\" && tag === \"\" && maybeAgainCardExperience &&\n                    <MaybeAgainCard experience={maybeAgainCardExperience} />\n                }\n                {showNeverCard && search === \"\" && tag === \"\" && neverCardExperience &&\n                    <NeverCard experience={neverCardExperience} />\n                }\n                <ExperienceList experiences={myExperiences} reverse={reverse} onClick={handleOpenOptions} onEdit={handleEditOpenClick} />\n                {search !== \"\" && myExperiences.length === 0 &&\n                    <React.Fragment>\n                        <p>There are no matched experiences.</p>\n                        <button className=\"btn btn-outline-secondary\" data-bs-toggle=\"modal\" data-bs-target=\"#addModal\">Add new experience</button>\n                    </React.Fragment>\n                }\n            </main>\n            <AddExperienceDialog name={search} tags={props.tags} onAdd={handleAddExperience} />\n            {activeExperience &&\n            <EditExperienceDialog experience={activeExperience} tags={props.tags} onSave={handleEditSaveClick} />\n                }\n            <ShortcutsDialog isOpen={showShortcutsDialog} onClose={() => setShowShortcutsDialog(false)} />\n            <BottomSheet>\n                <div className=\"list-group list-group-flush\">\n                    <a className=\"list-group-item list-group-item-action\" onClick={() => handleClick(activeId)}>Mark as done</a>\n                    <a className=\"list-group-item list-group-item-action\" onClick={() => handleEditOpenClick(activeId)}>Edit</a>\n                    <a className=\"list-group-item list-group-item-action\" onClick={() => handleDelete(activeId)}>Delete</a>\n                </div>\n            </BottomSheet>\n            <Toast message={toastMessage} show={showToast} />\n        </React.Fragment>\n    );\n};\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport { IExperience } from \"../IExperience\";\nimport { IStorage } from \"../IStorage\";\n\ninterface IProps {\n    storage: IStorage;\n    onNavigation(component: string): void;\n}\n\ninterface IPreferences {\n    showMaybeAgainCard: boolean;\n    showNeverCard: boolean;\n}\n\nexport const Preferences: React.FunctionComponent<IProps> = (props: IProps) => {\n    const fileInput: any = React.createRef();\n\n    const prefShowMaybeAgainCard = localStorage.getItem(\"showMaybeAgainCard\") || \"false\";\n    const prefShowNeverCard = localStorage.getItem(\"showNeverCard\") || \"true\";\n\n    const [preferences, setPreferences] = useState<IPreferences>({\n        showMaybeAgainCard: prefShowMaybeAgainCard === \"true\",\n        showNeverCard: prefShowNeverCard === \"true\",\n    });\n\n    function handleExport(): void {\n        const json = JSON.stringify(props.storage.get());\n        const file = new File([json], \"cocoberry.json\", { type: \"octet/stream\" });\n        const url = window.URL.createObjectURL(file);\n        window.location.assign(url);\n    }\n\n    function handleBrowse(): void {\n        const elem = document.getElementById(\"file\");\n        const input = elem as HTMLInputElement;\n        input.click();\n    }\n\n    function handleImport(): void {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            if (typeof reader.result === \"string\") {\n                try {\n                    const experiences = JSON.parse(reader.result) as IExperience[];\n                    //props.onImport(experiences);\n                    props.storage.add_many(experiences);\n                } catch (e) {\n                    alert(e);\n                }\n            }\n        };\n        const file: File = fileInput.current.files[0];\n        reader.readAsText(file);\n    }\n\n    function handlePreferenceChanged(event: React.ChangeEvent<HTMLInputElement>): void {\n        const currentTarget = event.currentTarget;\n        setPreferences((prevState: IPreferences) => {\n            const preferences: any = { ...prevState };\n            preferences[currentTarget.id] = currentTarget.checked;\n            return preferences;\n        });\n        localStorage.setItem(currentTarget.id, currentTarget.checked.toString());\n    }\n\n    return (\n        <React.Fragment>\n            <header className=\"fixed-top shadow-sm\">\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-white\">\n                    <div className=\"container-fluid\">\n                        <button className=\"btn btn-outline-success\" accessKey=\"b\" onClick={() => props.onNavigation(\"\")}>Back</button>\n                    </div>\n                </nav>\n            </header>\n            <main className=\"App container\">\n\n                <div className=\"list-group mb-3\">\n                    <div className=\"list-group-item form-switch\">\n                        <label className=\"form-check-label\" htmlFor=\"showMaybeAgainCard\">Show the maybe-again card</label>\n                        <input\n                            className=\"form-check-input float-end\"\n                            id=\"showMaybeAgainCard\"\n                            type=\"checkbox\"\n                            role=\"switch\"\n                            checked={preferences.showMaybeAgainCard}\n                            onChange={handlePreferenceChanged}\n                        />\n                    </div>\n                    <div className=\"list-group-item form-switch\">\n                        <label className=\"form-check-label\" htmlFor=\"showNeverCard\">Show the you-have-never card</label>\n                        <input\n                            className=\"form-check-input float-end\"\n                            id=\"showNeverCard\"\n                            type=\"checkbox\"\n                            role=\"switch\"\n                            checked={preferences.showNeverCard}\n                            onChange={handlePreferenceChanged}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Export and import experiences</h5>\n                        <p className=\"card-text\">Your experiences can be imported and exported. They are stored in the JSON format.</p>\n                        <input className=\"form-control-file\" id=\"file\" type=\"file\" accept=\"application/json\" onChange={handleImport} ref={fileInput} hidden required />\n                    </div>\n                    <div className=\"list-group list-group-flush\">\n                        <button className=\"list-group-item list-group-item-action\" type=\"button\" accessKey=\"i\" onClick={handleBrowse}>Import from file</button>\n                        <button className=\"list-group-item list-group-item-action\" type=\"button\" accessKey=\"e\" onClick={handleExport}>Export to file</button>\n                    </div>\n                </div>\n\n            </main>\n\n            <footer className=\"container mt-3\">\n                <p><a href=\"https://github.com/vanillajonathan/cocoberry\" rel=\"noopener noreferrer\" target=\"_blank\">Cocoberry on GitHub</a></p>\n                <p>Built with ❤ by Jonathan</p>\n            </footer>\n\n        </React.Fragment>\n    );\n};\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport { IStorage, INewExperience } from \"./IStorage\";\nimport { Home } from \"./views/Home\";\nimport { Preferences } from \"./views/Preferences\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\n\ninterface IProps {\n    seed: INewExperience[];\n    storage: IStorage;\n    tags: string[];\n}\n\nconst App: React.FunctionComponent<IProps> = (props: IProps) => {\n    const experiences = props.storage.get();\n    if (experiences.length === 0) {\n        props.storage.add_many(props.seed);\n    }\n    const [nav, setNav] = useState(\"\");\n\n    function handleNavigation(component: string): void {\n        setNav(component);\n    }\n\n    if (nav === \"Preferences\") {\n        return (\n            <Preferences\n                storage={props.storage}\n                onNavigation={handleNavigation}\n            />\n        );\n    }\n\n    return (\n        <Home\n            experiences={props.storage.get()}\n            onNavigation={handleNavigation}\n            tags={props.tags}\n        />\n    );\n};\n\nApp.defaultProps = {\n    seed: [],\n    tags: [],\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { v4 as uuid } from \"uuid\";\nimport { IStorage, INewExperience } from \"./IStorage\";\nimport { IExperience } from \"./IExperience\";\n\nexport class LocalStorage implements IStorage {\n    public add(experience: INewExperience): void {\n        const experiences = this.get();\n        const item: IExperience = {\n            id: uuid(),\n            last: experience.last,\n            name: experience.name,\n            tag: experience.tag,\n        };\n        experiences.push(item);\n        localStorage.setItem(\"experiences\", JSON.stringify(experiences));\n    }\n\n    public add_many(experiences: INewExperience[]): void {\n        const data = this.get();\n        for (const experience of experiences) {\n            const item: IExperience = {\n                id: uuid(),\n                last: experience.last,\n                name: experience.name,\n                tag: experience.tag,\n            };\n            data.push(item);\n        }\n        localStorage.setItem(\"experiences\", JSON.stringify(data));\n    }\n\n    public delete(id: string): void {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    public get(): IExperience[] {\n        const experiences = localStorage.getItem(\"experiences\");\n        if (experiences === null || experiences === \"\") {\n            return [];\n        }\n        return JSON.parse(experiences);\n    }\n\n    public update(experience: IExperience): void {\n        throw new Error(\"Method not implemented.\");\n    }\n}\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { IStorage, INewExperience } from \"./IStorage\";\nimport { LocalStorage } from \"./localStorage\";\n//import * as data from \"./seed.json\";\n\nimport seed from \"./seed.json\";\n\nconst experiences: INewExperience[] = [\n    { name: \"Eat apple 🍏\", last: new Date(2018, 4, 3).getTime(), tag: \"fruit\" },\n    { name: \"Eat avocado 🥑\", last: new Date(2016, 4, 3).getTime(), tag: \"fruit\" },\n    { name: \"Eat banana 🍌\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\n    { name: \"Eat bell pepper 🫑\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\n    { name: \"Eat blueberries 🫐\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\n    { name: \"Eat broccoli 🥦\", tag: \"vegetable\" },\n    { name: \"Eat carrot 🥕\", tag: \"vegetable\" },\n    { name: \"Eat cherries 🍒\", last: new Date(2017, 5, 3).getTime(), tag: \"fruit\" },\n    { name: \"Eat chili 🌶️\", tag: \"fruit\" },\n    { name: \"Eat cucumber 🥒\", last: new Date(2017, 6, 3).getTime(), tag: \"vegetable\" },\n    { name: \"Eat corn 🌽\", last: new Date(2017, 6, 3).getTime(), tag: \"vegetable\" },\n    { name: \"Eat coconut 🥥\", last: new Date(2017, 7, 3).getTime(), tag: \"fruit\" },\n    { name: \"Eat eggplant 🍆\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\n    { name: \"Eat garlic 🧄\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\n    { name: \"Eat grapes 🍇\", last: new Date(2017, 9, 3).getTime(), tag: \"fruit\" },\n    { name: \"Eat leafy green 🥬\", tag: \"fruit\" },\n    { name: \"Eat lemon 🍋\", tag: \"fruit\" },\n    { name: \"Eat kiwi 🥝\", last: new Date(2017, 10, 3).getTime(), tag: \"fruit\" },\n    { name: \"Eat mango 🥭\", last: new Date(2017, 11, 3).getTime(), tag: \"fruit\" },\n    { name: \"Eat melon 🍈\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\n    { name: \"Eat mushroom 🍄\", last: new Date(2017, 4, 3).getTime() },\n    { name: \"Eat olives 🫒\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\n    { name: \"Eat onion 🧅\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\n    { name: \"Eat orange 🍊\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\n    { name: \"Eat peach 🍑\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\n    { name: \"Eat peanuts 🥜\", tag: \"fruit\" },\n    { name: \"Eat pear 🍐\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\n    { name: \"Eat pineapple 🍍\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\n    { name: \"Eat potato 🥔\", last: new Date(2018, 10, 1).getTime(), tag: \"vegetable\" },\n    { name: \"Eat tomato 🍅\", last: new Date(2018, 10, 1).getTime(), tag: \"vegetable\" },\n    { name: \"Eat strawberry 🍓\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\n    { name: \"Eat watermelon 🍉\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\n    { name: \"Get a massage 💆‍♂️💆‍♀️\", tag: \"activity\" },\n    { name: \"Bake a applepie 🥧🍪\", last: new Date(2018, 7, 13).getTime() },\n    { name: \"Basketball 🏀\", tag: \"activity\" },\n    { name: \"Bike 🚴\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\n    { name: \"Bowling 🎳\", last: null, tag: \"activity\" },\n    { name: \"Box 🥊\", last: null, tag: \"activity\" },\n    { name: \"Climb 🧗\", last: null, tag: \"activity\" },\n    { name: \"Cold shower 🥶🚿\", tag: \"activity\" },\n    { name: \"Dance 💃🕺\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\n    { name: \"Fasting 🍽\" },\n    { name: \"Football ⚽\", tag: \"activity\" },\n    { name: \"Guitar 🎸\", last: null, tag: \"activity\" },\n    { name: \"Ice bath 🥶🛀\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\n    { name: \"Ice skate ⛸️\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\n    { name: \"Meditate 🧘‍\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\n    { name: \"Read 📖\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\n    { name: \"Run 🏃\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\n    { name: \"Paint 🎨\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\n    { name: \"Play chess ♟️\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\n    { name: \"Play pool 🎱\", last: null, tag: \"activity\" },\n    { name: \"Sauna 🧖‍♂️🧖‍♀️\", tag: \"activity\" },\n    { name: \"Ski 🎿\", tag: \"activity\" },\n    { name: \"Swim 🏊\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\n    { name: \"Theatre 🎭\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\n    { name: \"Yoga 🧘\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\n    { name: \"Watch a movie 🎬\", last: null, tag: \"activity\" },\n    { name: \"Volleyball 🏐\", last: null, tag: \"activity\" },\n    { name: \"Wrestle 🤼\", last: null, tag: \"activity\" },\n    { name: \"Cook pasta 🍝\", last: null },\n    { name: \"Beach 🏖\", last: null, tag: \"places\" },\n    { name: \"Botanical garden 🌿\", last: null, tag: \"places\" },\n    { name: \"Cemetery ⚱️\", last: null, tag: \"places\" },\n    { name: \"Museum 🖼\", last: null, tag: \"places\" },\n    { name: \"Park 🏞\", last: null, tag: \"places\" },\n];\n\nconst storage: IStorage = new LocalStorage();\nconst tags: string[] = [\"Activity\", \"Fruit\", \"Places\", \"Vegetable\"];\n\nReactDOM.render(\n    <React.StrictMode>\n        <App seed={experiences} storage={storage} tags={tags} />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}