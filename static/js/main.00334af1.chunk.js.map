{"version":3,"sources":["components/TagList.tsx","components/AddExperienceDialog.tsx","components/EditExperienceDialog.tsx","components/ExperienceList.tsx","components/OptionsSheet.tsx","components/MaybeAgainCard.tsx","components/NeverCard.tsx","components/PwaInstaller.tsx","components/ShortcutsDialog.tsx","components/Toast.tsx","views/Home.tsx","views/Preferences.tsx","App.tsx","serviceWorker.ts","localStorage.tsx","index.tsx"],"names":["TagList","props","handleClick","event","activeTag","currentTarget","innerText","toLowerCase","onClick","className","tags","map","tag","AddExperienceDialog","useState","name","setName","setTag","nameInput","React","useEffect","current","focus","myModal","document","getElementById","myInput","addEventListener","id","data-bs-backdrop","data-bs-keyboard","tabIndex","role","type","data-bs-dismiss","aria-label","onSubmit","preventDefault","onAdd","htmlFor","value","onChange","target","ref","autoFocus","required","defaultProps","EditExperienceDialog","experience","last","setLast","onSave","tagName","Date","toISOString","substring","date","getTime","ExperienceList","compare","a","b","weekAgo","experiences","filter","x","DateTime","local","minus","weeks","valueOf","sort","monthAgo","months","yearAgo","years","reverse","weekGroup","onEdit","monthGroup","yearGroup","length","ExperienceListGroup","toLocaleDateString","dateTime","title","toLocaleString","fromMillis","toRelative","BottomSheet","style","height","children","MaybeAgainCard","timeAgo","NeverCard","PwaInstaller","deferredPrompt","showInstallPrompt","setShowInstallPrompt","beforeInstallPrompt","window","removeEventListener","prompt","userChoice","then","choiceResult","outcome","console","log","ShortcutsDialog","onClose","Toast","show","aria-live","aria-atomic","message","Home","myExperiences","activeId","setActiveId","activeExperience","setActiveExperience","setExperiences","maybeAgainCardExperience","setMaybeAgainCardExperience","neverCardExperience","setNeverCardExperience","setReverse","search","setSearch","showShortcutsDialog","setShowShortcutsDialog","showTags","setShowTags","showToast","setShowToast","toastMessage","setToastMessage","prefShowMaybeAgainCard","localStorage","getItem","prefShowNeverCard","showMaybeAgainCard","showNeverCard","bottomSheet","timerId","handleEditOpenClick","exp","find","el","offcanvas","bootstrap","getInstance","hide","modalEl","backdrop","randomExperience","Math","floor","random","maybeExp","undefined","includes","accessKey","placeholder","parentElement","classList","toggle","prevState","data-bs-toggle","data-bs-target","onNavigation","modal","uuid","e","clearTimeout","setTimeout","isOpen","key","i","handleDelete","Preferences","fileInput","preferences","setPreferences","handlePreferenceChanged","checked","setItem","toString","accept","reader","FileReader","onloadend","result","JSON","parse","storage","add_many","alert","file","files","readAsText","hidden","click","json","stringify","get","File","url","URL","createObjectURL","location","assign","href","rel","App","seed","nav","setNav","handleNavigation","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","LocalStorage","this","item","push","data","Error","ReactDOM","process","origin","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.00334af1.chunk.js","sourcesContent":["import * as React from \"react\";\r\n\r\ninterface IProps {\r\n    activeTag: string;\r\n    tags: string[];\r\n    onClick(tag: string): void;\r\n}\r\n\r\nexport const TagList: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    function handleClick(event: React.MouseEvent<HTMLElement>): void {\r\n        let activeTag = event.currentTarget.innerText.toLowerCase();\r\n        if (activeTag === props.activeTag) {\r\n            activeTag = \"\";\r\n        }\r\n        props.onClick(activeTag);\r\n    }\r\n\r\n    return (\r\n        <ul className=\"list-inline\">\r\n            {props.tags.map(tag => {\r\n                let className = \"badge \";\r\n                className += (tag.toLowerCase() === props.activeTag ? \"bg-primary\" : \"bg-light text-dark\");\r\n                return <li className=\"list-inline-item\" key={tag}><span className={className} onClick={handleClick}>{tag}</span></li>;\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { TagList } from \"./TagList\";\r\n\r\ninterface IProps {\r\n    name: string;\r\n    tags: string[];\r\n    onAdd(name: string, tag: string): void;\r\n}\r\n\r\nexport const AddExperienceDialog: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    const [name, setName] = useState(props.name);\r\n    const [tag, setTag] = useState(\"\");\r\n    const nameInput = React.createRef<HTMLInputElement>();\r\n\r\n    useEffect(() => {\r\n        if (nameInput.current) {\r\n            nameInput.current.focus();\r\n        }\r\n\r\n        var myModal = document.getElementById('addModal');\r\n        var myInput = document.getElementById('name');\r\n        if (myModal !== null && myInput !== null) {\r\n            myModal.addEventListener('shown.bs.modal',\r\n                () => {\r\n                    if (myInput !== null) {\r\n                        myInput.focus();\r\n                    }\r\n                });\r\n        }\r\n    });\r\n\r\n    function handleChange(event: React.ChangeEvent<HTMLInputElement>): void {\r\n        setName(event.target.value);\r\n    }\r\n\r\n    function handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\r\n        event.preventDefault();\r\n        props.onAdd(name, tag);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"modal fade\" id=\"addModal\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabIndex={-1} role=\"dialog\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\">Add experience</h5>\r\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                        </div>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"mb-3\">\r\n                                    <label className=\"form-label\" htmlFor=\"name\">Title</label>\r\n                                    <input className=\"form-control\" id=\"name\" type=\"text\" value={name} onChange={handleChange} ref={nameInput} autoFocus required />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label className=\"form-label\">Tag</label>\r\n                                    <TagList\r\n                                        activeTag={tag}\r\n                                        tags={props.tags}\r\n                                        onClick={tag => setTag(tag)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Add</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nAddExperienceDialog.defaultProps = {\r\n    name: \"\",\r\n};\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { TagList } from \"./TagList\";\r\nimport { IExperience } from \"../IExperience\";\r\n\r\ninterface IProps {\r\n    experience: IExperience;\r\n    tags: string[];\r\n    onSave(experience: IExperience): void;\r\n}\r\n\r\nexport const EditExperienceDialog: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    const [name, setName] = useState(props.experience.name);\r\n    const [tag, setTag] = useState(props.experience.tag || \"\");\r\n    const [last, setLast] = useState(props.experience.last || 0);\r\n    const nameInput = React.createRef<HTMLInputElement>();\r\n\r\n    useEffect(() => {\r\n        setName(props.experience.name);\r\n        setTag(props.experience.tag || \"\");\r\n        setLast(props.experience.last || 0);\r\n    }, [props.experience]);\r\n\r\n    useEffect(() => {\r\n        if (nameInput.current) {\r\n            nameInput.current.focus();\r\n        }\r\n\r\n        var myModal = document.getElementById('editModal');\r\n        var myInput = document.getElementById('name');\r\n        if (myModal !== null && myInput !== null) {\r\n            myModal.addEventListener('shown.bs.modal',\r\n                () => {\r\n                    if (myInput !== null) {\r\n                        myInput.focus();\r\n                    }\r\n                });\r\n        }\r\n    });\r\n\r\n    function handleChange(event: React.ChangeEvent<HTMLInputElement>): void {\r\n        setName(event.target.value);\r\n    }\r\n\r\n    function handleSetTag(tagName: string): void {\r\n        setTag(tagName);\r\n    }\r\n\r\n    function handleTimeChange(event: React.ChangeEvent<HTMLInputElement>): void {\r\n        const date = new Date(event.target.value);\r\n        setLast(date.getTime());\r\n    }\r\n\r\n    function handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\r\n        event.preventDefault();\r\n        const experience: IExperience = { id: props.experience.id, name: name, tag: tag, last: last };\r\n        props.onSave(experience);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"modal fade\" id=\"editModal\" data-bs-keyboard=\"false\" tabIndex={-1} role=\"dialog\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\">Edit experience</h5>\r\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                        </div>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"mb-3\">\r\n                                    <label className=\"form-label\" htmlFor=\"name\">Title</label>\r\n                                    <input className=\"form-control\" id=\"name\" type=\"text\" value={name} onChange={handleChange} ref={nameInput} autoFocus required />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label className=\"form-label\">Tag</label>\r\n                                    <TagList activeTag={tag} tags={props.tags} onClick={handleSetTag} />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label className=\"form-label\" htmlFor=\"time\">Last</label>\r\n                                    <input className=\"form-control\" id=\"time\" type=\"datetime-local\" value={new Date(last).toISOString().substring(0, 16)} onChange={handleTimeChange} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { DateTime } from \"luxon\";\r\nimport { IExperience } from \"../IExperience\";\r\n\r\ninterface IProps {\r\n    experiences: IExperience[];\r\n    reverse?: boolean;\r\n    onClick(id: string): void;\r\n    onEdit(id: string): void;\r\n}\r\n\r\nexport const ExperienceList: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    function compare(a: IExperience, b: IExperience): number {\r\n        if (a.last == null || b.last == null) {\r\n            return 0;\r\n        }\r\n        if (a.last < b.last) {\r\n            return -1;\r\n        }\r\n        if (a.last > b.last) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    const weekAgo = props.experiences\r\n        .filter(x => x.last != null &&\r\n            x.last < DateTime.local().minus({ weeks: 1 }).valueOf() &&\r\n            x.last > DateTime.local().minus({ weeks: 2 }).valueOf()).sort(compare);\r\n\r\n    const monthAgo = props.experiences\r\n        .filter(x => x.last != null &&\r\n            x.last < DateTime.local().minus({ months: 1 }).valueOf() &&\r\n            x.last > DateTime.local().minus({ months: 2 }).valueOf()).sort(compare);\r\n\r\n    const yearAgo = props.experiences\r\n        .filter(x => x.last != null &&\r\n            x.last < DateTime.local().minus({ years: 1 }).valueOf() &&\r\n            x.last > DateTime.local().minus({ years: 2 }).valueOf()).sort(compare);\r\n\r\n    let experiences = props.experiences.sort(compare);\r\n    if (props.reverse) {\r\n        experiences = experiences.reverse();\r\n    }\r\n\r\n    const weekGroup = (\r\n        <React.Fragment>\r\n            <h2 className=\"h5\">A week ago</h2>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={weekAgo} />\r\n        </React.Fragment>);\r\n\r\n    const monthGroup = (\r\n        <React.Fragment>\r\n            <h2 className=\"h5\">A month ago</h2>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={monthAgo} />\r\n        </React.Fragment>);\r\n\r\n    const yearGroup = (\r\n        <React.Fragment>\r\n            <h2 className=\"h5\">A year ago</h2>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={yearAgo} />\r\n        </React.Fragment>);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ExperienceListGroup onClick={props.onClick} onEdit={props.onEdit} experiences={experiences} />\r\n            {weekAgo.length > 0 && weekGroup}\r\n            {monthAgo.length > 0 && monthGroup}\r\n            {yearAgo.length > 0 && yearGroup}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\ninterface IExperienceListGroupProps {\r\n    experiences: IExperience[];\r\n    onClick(id: string): void;\r\n    onEdit(id: string): void;\r\n}\r\n\r\nconst ExperienceListGroup: React.FunctionComponent<IExperienceListGroupProps> = (props: IExperienceListGroupProps) => {\r\n    return (\r\n        <div className=\"list-group mb-3\">\r\n            {props.experiences.map(experience =>\r\n                <a className=\"list-group-item list-group-item-action\" key={experience.id} onClick={() => props.onClick(experience.id)}>\r\n                    {experience.name}\r\n                    {experience.last != null && last(experience)}\r\n                </a>\r\n            )}\r\n        </div>);\r\n};\r\n\r\nfunction last(experience: any): JSX.Element {\r\n    return (\r\n        <React.Fragment>\r\n            <div><small className=\"float-end text-muted\">{new Date(experience.last).toLocaleDateString(\"sv-se\")}</small></div>\r\n            <time className=\"d-block text-muted small\" dateTime={new Date(experience.last).toISOString()} title={new Date(experience.last).toLocaleString()}>{DateTime.fromMillis(experience.last).toRelative()}</time>\r\n        </React.Fragment>);\r\n}","import * as React from \"react\";\r\n\r\ninterface IBottomSheetProps {\r\n    children: JSX.Element;\r\n}\r\n\r\nexport const BottomSheet: React.FunctionComponent<IBottomSheetProps> = (props: IBottomSheetProps) => {\r\n    const className = \"offcanvas offcanvas-bottom\";\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={className} id=\"bottomSheet\" tabIndex={-1} role=\"dialog\" style={{ height: 'initial' }}>\r\n                {props.children}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\ninterface IOptionSheetProps {\r\n    id: string;\r\n    onClose(): void;\r\n    onDone(id: string): void;\r\n    onEdit(id: string): void;\r\n    onDelete(id: string): void;\r\n}\r\n\r\nexport const OptionsSheet: React.FunctionComponent<IOptionSheetProps> = (props: IOptionSheetProps) => {\r\n    return (\r\n        <BottomSheet>\r\n            <div className=\"list-group list-group-flush\">\r\n                <a className=\"list-group-item list-group-item-action\" onClick={() => props.onDone(props.id)}>Mark as done</a>\r\n                <a className=\"list-group-item list-group-item-action\" onClick={() => props.onEdit(props.id)}>Edit</a>\r\n                <a className=\"list-group-item list-group-item-action\" onClick={() => props.onDelete(props.id)}>Delete</a>\r\n            </div>\r\n        </BottomSheet>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { DateTime } from \"luxon\";\r\nimport { IExperience } from \"../IExperience\";\r\n\r\ninterface IProps {\r\n    experience: IExperience;\r\n}\r\n\r\nexport const MaybeAgainCard: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    const timeAgo = DateTime.fromMillis(props.experience.last || 0).toRelative();\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n                <small className=\"text-muted text-uppercase\">It was {timeAgo}, Maybe again…</small>\r\n                <div>{props.experience.name}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { IExperience } from \"../IExperience\";\r\n\r\ninterface IProps {\r\n    experience: IExperience;\r\n}\r\n\r\nexport const NeverCard: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n                <small className=\"text-muted text-uppercase\">You have never…</small>\r\n                <div>{props.experience.name}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport const PwaInstaller: React.FunctionComponent = () => {\r\n    let deferredPrompt: any;\r\n    const [showInstallPrompt, setShowInstallPrompt] = useState(false);\r\n\r\n    function handleInstall(): void {\r\n        setShowInstallPrompt(false);\r\n        deferredPrompt.prompt();\r\n        deferredPrompt.userChoice.then((choiceResult: any) => {\r\n            if (choiceResult.outcome === \"accepted\") {\r\n                console.log(\"User accepted the A2HS prompt\");\r\n            } else {\r\n                console.log(\"User dismissed the A2HS prompt\");\r\n            }\r\n            deferredPrompt = null;\r\n        });\r\n    }\r\n\r\n    function beforeInstallPrompt(event: Event): void {\r\n        deferredPrompt = event;\r\n        setShowInstallPrompt(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"beforeinstallprompt\", beforeInstallPrompt);\r\n        return () => {\r\n            window.removeEventListener(\"beforeinstallprompt\", beforeInstallPrompt);\r\n        };\r\n    });\r\n\r\n    if (showInstallPrompt) {\r\n        return (\r\n            <button className=\"btn btn-outline-success me-sm-2 d-none d-xl-inline\" onClick={handleInstall} title=\"Install web application\">Install</button>\r\n        );\r\n    }\r\n\r\n    return null;\r\n};\r\n","import * as React from \"react\";\r\n\r\ninterface IProps {\r\n    isOpen: boolean;\r\n    onClose(): void;\r\n}\r\n\r\nexport const ShortcutsDialog: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"modal fade\" id=\"shortcutsModal\" tabIndex={-1} role=\"dialog\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\">Keyboard Shortcuts</h5>\r\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" onClick={props.onClose}></button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <kbd><kbd>Shift</kbd> + <kbd>Alt</kbd> + <kbd>N</kbd></kbd>\r\n                                    </div>\r\n                                    <div className=\"col\">Add new experience</div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <kbd><kbd>Shift</kbd> + <kbd>Alt</kbd> + <kbd>S</kbd></kbd>\r\n                                    </div>\r\n                                    <div className=\"col\">Search</div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <kbd><kbd>Shift</kbd> + <kbd>Alt</kbd> + <kbd>P</kbd></kbd>\r\n                                    </div>\r\n                                    <div className=\"col\">Preferences</div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <kbd><kbd>Shift</kbd> + <kbd>Alt</kbd> + <kbd>R</kbd></kbd>\r\n                                    </div>\r\n                                    <div className=\"col\">Reverse sort</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\" onClick={props.onClose}>Close</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\n\r\ninterface IProps {\r\n    message: string;\r\n    show: boolean;\r\n}\r\n\r\nexport const Toast: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    let className = \"toast fixed-bottom bg-dark text-white mx-auto mb-3 fade\";\r\n    if (props.show) {\r\n        className += \" show\";\r\n    }\r\n    return (\r\n        <div className={className} role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\r\n            <div className=\"toast-body\">\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { AddExperienceDialog } from \"../components/AddExperienceDialog\";\r\nimport { EditExperienceDialog } from \"../components/EditExperienceDialog\";\r\nimport { IExperience } from \"../IExperience\";\r\nimport { ExperienceList } from \"../components/ExperienceList\";\r\nimport { BottomSheet } from \"../components/OptionsSheet\";\r\nimport { MaybeAgainCard } from \"../components/MaybeAgainCard\";\r\nimport { NeverCard } from \"../components/NeverCard\";\r\nimport { PwaInstaller } from \"../components/PwaInstaller\";\r\nimport { ShortcutsDialog } from \"../components/ShortcutsDialog\";\r\nimport { TagList } from \"../components/TagList\";\r\nimport { Toast } from \"../components/Toast\";\r\nimport \"./Home.css\";\r\nimport * as bootstrap from \"bootstrap\";\r\n\r\ninterface IProps {\r\n    experiences: IExperience[];\r\n    tags: string[];\r\n    onNavigation(component: string): void;\r\n}\r\n\r\nexport const Home: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    const [activeId, setActiveId] = useState(\"\");\r\n    const [activeExperience, setActiveExperience] = useState<IExperience>();\r\n    //const [experiences, setExperiences] = useState(props.storage.get());\r\n    const [experiences, setExperiences] = useState(props.experiences);\r\n    const [maybeAgainCardExperience, setMaybeAgainCardExperience] = useState<IExperience | null>(null);\r\n    const [neverCardExperience, setNeverCardExperience] = useState<IExperience | null>(null);\r\n    const [reverse, setReverse] = useState(false);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [showShortcutsDialog, setShowShortcutsDialog] = useState(false);\r\n    const [showTags, setShowTags] = useState(false);\r\n    const [showToast, setShowToast] = useState(false);\r\n    const [tag, setTag] = useState(\"\");\r\n    const [toastMessage, setToastMessage] = useState(\"\");\r\n\r\n    const prefShowMaybeAgainCard = localStorage.getItem(\"showMaybeAgainCard\") || \"false\";\r\n    const prefShowNeverCard = localStorage.getItem(\"showNeverCard\") || \"true\";\r\n\r\n    const [showMaybeAgainCard] = useState(prefShowMaybeAgainCard === \"true\");\r\n    const [showNeverCard] = useState(prefShowNeverCard === \"true\");\r\n    const bottomSheet = document.getElementById(\"bottomSheet\");\r\n\r\n    let timerId = 0;\r\n\r\n    useEffect(() => {\r\n        if (props.experiences.length !== 0) {\r\n            const maybeExp = randomExperience(props.experiences.filter(x => x.last !== null && x.last !== undefined));\r\n            setMaybeAgainCardExperience(maybeExp);\r\n            const exp = randomExperience(props.experiences.filter(x => x.last === null));\r\n            setNeverCardExperience(exp);\r\n        }\r\n    }, [props.experiences]);\r\n\r\n    function handleAddExperience(name: string, tag: string): void {\r\n        const modalEl = document.getElementById('addModal');\r\n        if (modalEl !== null) {\r\n            const modal = bootstrap.Modal.getInstance(modalEl);\r\n            modal?.hide();\r\n        }\r\n        const experience: IExperience = {\r\n            id: uuid(),\r\n            name,\r\n            tag,\r\n        };\r\n        setExperiences((prevState: IExperience[]) => [...prevState, experience]);\r\n    }\r\n\r\n    function handleClick(key: string): void {\r\n        if (bottomSheet !== null) {\r\n            const offcanvas = bootstrap.Offcanvas.getInstance(bottomSheet);\r\n            offcanvas?.hide(); // fix\r\n        }\r\n        setExperiences((prevState: IExperience[]) => prevState.map(i => i.id === key ? { ...i, last: new Date().getTime() } : i));\r\n        setToastMessage(\"Marked as done\");\r\n        setShowToast(true);\r\n        window.clearTimeout(timerId);\r\n        timerId = window.setTimeout(() => {\r\n            setShowToast(false);\r\n        }, 1500);\r\n    }\r\n\r\n    function handleDelete(key: string): void {\r\n        if (bottomSheet !== null) {\r\n            const offcanvas = bootstrap.Offcanvas.getInstance(bottomSheet);\r\n            offcanvas?.hide(); // fix\r\n        }\r\n        setExperiences((prevState: IExperience[]) => (prevState.filter(e => e.id !== key)));\r\n        setToastMessage(\"Removed\");\r\n        setShowToast(true);\r\n        window.clearTimeout(timerId);\r\n        timerId = window.setTimeout(() => {\r\n            setShowToast(false);\r\n        }, 1500);\r\n    }\r\n\r\n    function handleOpenOptions(id: string): void {\r\n        const exp = experiences.find(x => x.id === id);\r\n        setActiveId(id);\r\n        setActiveExperience(exp);\r\n        if (bottomSheet !== null) {\r\n            const offcanvas = new bootstrap.Offcanvas(bottomSheet);\r\n            offcanvas.show(bottomSheet); // fix\r\n        }\r\n    }\r\n\r\n    function handleEditOpenClick(id: string): void {\r\n        const exp = experiences.find(x => x.id === id);\r\n        setActiveExperience(exp);\r\n        const el = document.getElementById('bottomSheet');\r\n        if (el !== null) {\r\n            const offcanvas = bootstrap.Offcanvas.getInstance(el);\r\n            offcanvas?.hide(); // fix\r\n        }\r\n\r\n        const modalEl = document.getElementById('editModal');\r\n        if (modalEl !== null) {\r\n            const modal = new bootstrap.Modal(modalEl, { backdrop: 'static' });\r\n            modal.show(); // fix\r\n        }\r\n    }\r\n\r\n    function handleEditSaveClick(experience: IExperience): void {\r\n        const modalEl = document.getElementById('editModal');\r\n        if (modalEl !== null) {\r\n            const modal = bootstrap.Modal.getInstance(modalEl);\r\n            modal?.hide();\r\n        }\r\n        setExperiences((prevState: IExperience[]) => (prevState.map(e => {\r\n            if (e.id === experience.id) {\r\n                e = experience;\r\n            }\r\n            return e;\r\n        })));\r\n        setToastMessage(\"Edited: \" + experience.name);\r\n        setShowToast(true);\r\n        window.clearTimeout(timerId);\r\n        timerId = window.setTimeout(() => {\r\n            setShowToast(false);\r\n        }, 1500);\r\n    }\r\n\r\n    function handleChange(event: React.FormEvent<HTMLInputElement>): void {\r\n        setSearch(event.currentTarget.value);\r\n    }\r\n\r\n    function handleDropdownClick(event: any): void {\r\n        event.target.parentElement.classList.toggle(\"dropup\");\r\n        setShowTags((prevState: boolean) => !prevState);\r\n    }\r\n\r\n    function handleSort(): void {\r\n        setReverse((prevState: boolean) => !prevState);\r\n    }\r\n\r\n    function handleTagClick(tag: string): void {\r\n        setTag(tag);\r\n    }\r\n\r\n    function randomExperience(experiences: IExperience[]): IExperience {\r\n        return experiences[Math.floor(Math.random() * experiences.length)];\r\n    }\r\n\r\n    let myExperiences: IExperience[];\r\n    if (search !== \"\" || tag !== \"\") {\r\n        myExperiences = experiences.filter(x => x.name.toLowerCase().includes(search.toLowerCase()));\r\n        if (tag !== \"\") {\r\n            myExperiences = myExperiences.filter(x => x.tag != null && x.tag.includes(tag));\r\n        }\r\n    } else {\r\n        myExperiences = experiences.filter(x => x.last != null);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <header className=\"bg-white fixed-top shadow-sm\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-white\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"d-flex flex-grow-1\">\r\n                            <span className=\"navbar-brand d-none d-xl-block\">Cocoberry</span>\r\n                            <div className=\"me-auto\">\r\n                                <div className=\"input-group\">\r\n                                    <input className=\"form-control\" type=\"search\" accessKey=\"s\" placeholder=\"Search…\" title=\"Search\" onChange={handleChange} aria-label=\"Search\" />\r\n                                    <button className=\"btn btn-outline-success dropdown-toggle\" type=\"button\" onClick={handleDropdownClick} aria-label=\"Show tags\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex ms-2\">\r\n                                <PwaInstaller />\r\n                                <button className=\"btn btn-outline-success me-2 d-none d-xl-inline\" accessKey=\"?\" onClick={() => setShowShortcutsDialog(true)} title=\"Shortcuts\" data-bs-toggle=\"modal\" data-bs-target=\"#shortcutsModal\">K</button>\r\n                                <button className=\"btn btn-outline-success me-2 d-none d-xl-inline\" accessKey=\"r\" onClick={handleSort} title=\"Sort\">▲</button>\r\n                                <button className=\"btn btn-outline-success me-2\" accessKey=\"n\" title=\"Add new experience\" data-bs-toggle=\"modal\" data-bs-target=\"#addModal\">+</button>\r\n                                <button className=\"btn btn-outline-success\" accessKey=\"p\" onClick={() => props.onNavigation(\"Preferences\")}>☰</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                {showTags &&\r\n                    <div className=\"container\">\r\n                        <TagList activeTag={tag} tags={props.tags} onClick={handleTagClick} />\r\n                    </div>\r\n                }\r\n            </header>\r\n            <main className=\"App container\">\r\n                {showMaybeAgainCard && search === \"\" && tag === \"\" && maybeAgainCardExperience &&\r\n                    <MaybeAgainCard experience={maybeAgainCardExperience} />\r\n                }\r\n                {showNeverCard && search === \"\" && tag === \"\" && neverCardExperience &&\r\n                    <NeverCard experience={neverCardExperience} />\r\n                }\r\n                <ExperienceList experiences={myExperiences} reverse={reverse} onClick={handleOpenOptions} onEdit={handleEditOpenClick} />\r\n                {search !== \"\" && myExperiences.length === 0 &&\r\n                    <React.Fragment>\r\n                        <p>There are no matched experiences.</p>\r\n                        <button className=\"btn btn-outline-secondary\" data-bs-toggle=\"modal\" data-bs-target=\"#addModal\">Add new experience</button>\r\n                    </React.Fragment>\r\n                }\r\n            </main>\r\n            <AddExperienceDialog name={search} tags={props.tags} onAdd={handleAddExperience} />\r\n            {activeExperience &&\r\n            <EditExperienceDialog experience={activeExperience} tags={props.tags} onSave={handleEditSaveClick} />\r\n                }\r\n            <ShortcutsDialog isOpen={showShortcutsDialog} onClose={() => setShowShortcutsDialog(false)} />\r\n            <BottomSheet>\r\n                <div className=\"list-group list-group-flush\">\r\n                    <a className=\"list-group-item list-group-item-action\" onClick={() => handleClick(activeId)}>Mark as done</a>\r\n                    <a className=\"list-group-item list-group-item-action\" onClick={() => handleEditOpenClick(activeId)}>Edit</a>\r\n                    <a className=\"list-group-item list-group-item-action\" onClick={() => handleDelete(activeId)}>Delete</a>\r\n                </div>\r\n            </BottomSheet>\r\n            <Toast message={toastMessage} show={showToast} />\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { IExperience } from \"../IExperience\";\r\nimport { IStorage } from \"../IStorage\";\r\n\r\ninterface IProps {\r\n    storage: IStorage;\r\n    onNavigation(component: string): void;\r\n}\r\n\r\ninterface IPreferences {\r\n    showMaybeAgainCard: boolean;\r\n    showNeverCard: boolean;\r\n}\r\n\r\nexport const Preferences: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    const fileInput: any = React.createRef();\r\n\r\n    const prefShowMaybeAgainCard = localStorage.getItem(\"showMaybeAgainCard\") || \"false\";\r\n    const prefShowNeverCard = localStorage.getItem(\"showNeverCard\") || \"true\";\r\n\r\n    const [preferences, setPreferences] = useState<IPreferences>({\r\n        showMaybeAgainCard: prefShowMaybeAgainCard === \"true\",\r\n        showNeverCard: prefShowNeverCard === \"true\",\r\n    });\r\n\r\n    function handleExport(): void {\r\n        const json = JSON.stringify(props.storage.get());\r\n        const file = new File([json], \"cocoberry.json\", { type: \"octet/stream\" });\r\n        const url = window.URL.createObjectURL(file);\r\n        window.location.assign(url);\r\n    }\r\n\r\n    function handleBrowse(): void {\r\n        const elem = document.getElementById(\"file\");\r\n        const input = elem as HTMLInputElement;\r\n        input.click();\r\n    }\r\n\r\n    function handleImport(): void {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n            if (typeof reader.result === \"string\") {\r\n                try {\r\n                    const experiences = JSON.parse(reader.result) as IExperience[];\r\n                    //props.onImport(experiences);\r\n                    props.storage.add_many(experiences);\r\n                } catch (e) {\r\n                    alert(e);\r\n                }\r\n            }\r\n        };\r\n        const file: File = fileInput.current.files[0];\r\n        reader.readAsText(file);\r\n    }\r\n\r\n    function handlePreferenceChanged(event: React.ChangeEvent<HTMLInputElement>): void {\r\n        const currentTarget = event.currentTarget;\r\n        setPreferences((prevState: IPreferences) => {\r\n            const preferences: any = { ...prevState };\r\n            preferences[currentTarget.id] = currentTarget.checked;\r\n            return preferences;\r\n        });\r\n        localStorage.setItem(currentTarget.id, currentTarget.checked.toString());\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <header className=\"fixed-top shadow-sm\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-white\">\r\n                    <div className=\"container-fluid\">\r\n                        <button className=\"btn btn-outline-success\" accessKey=\"b\" onClick={() => props.onNavigation(\"\")}>Back</button>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n            <main className=\"App container\">\r\n\r\n                <div className=\"list-group mb-3\">\r\n                    <div className=\"list-group-item form-switch\">\r\n                        <label className=\"form-check-label\" htmlFor=\"showMaybeAgainCard\">Show the maybe-again card</label>\r\n                        <input\r\n                            className=\"form-check-input float-end\"\r\n                            id=\"showMaybeAgainCard\"\r\n                            type=\"checkbox\"\r\n                            role=\"switch\"\r\n                            checked={preferences.showMaybeAgainCard}\r\n                            onChange={handlePreferenceChanged}\r\n                        />\r\n                    </div>\r\n                    <div className=\"list-group-item form-switch\">\r\n                        <label className=\"form-check-label\" htmlFor=\"showNeverCard\">Show the you-have-never card</label>\r\n                        <input\r\n                            className=\"form-check-input float-end\"\r\n                            id=\"showNeverCard\"\r\n                            type=\"checkbox\"\r\n                            role=\"switch\"\r\n                            checked={preferences.showNeverCard}\r\n                            onChange={handlePreferenceChanged}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Export and import experiences</h5>\r\n                        <p className=\"card-text\">Your experiences can be imported and exported. They are stored in the JSON format.</p>\r\n                        <input className=\"form-control-file\" id=\"file\" type=\"file\" accept=\"application/json\" onChange={handleImport} ref={fileInput} hidden required />\r\n                    </div>\r\n                    <div className=\"list-group list-group-flush\">\r\n                        <button className=\"list-group-item list-group-item-action\" type=\"button\" accessKey=\"i\" onClick={handleBrowse}>Import from file</button>\r\n                        <button className=\"list-group-item list-group-item-action\" type=\"button\" accessKey=\"e\" onClick={handleExport}>Export to file</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </main>\r\n\r\n            <footer className=\"container mt-3\">\r\n                <p><a href=\"https://github.com/vanillajonathan/cocoberry\" rel=\"noopener noreferrer\" target=\"_blank\">Cocoberry on GitHub</a></p>\r\n                <p>Built with ❤ by Jonathan</p>\r\n            </footer>\r\n\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { IStorage, INewExperience } from \"./IStorage\";\r\nimport { Home } from \"./views/Home\";\r\nimport { Preferences } from \"./views/Preferences\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\r\n\r\ninterface IProps {\r\n    seed: INewExperience[];\r\n    storage: IStorage;\r\n    tags: string[];\r\n}\r\n\r\nconst App: React.FunctionComponent<IProps> = (props: IProps) => {\r\n    const experiences = props.storage.get();\r\n    if (experiences.length === 0) {\r\n        props.storage.add_many(props.seed);\r\n    }\r\n    const [nav, setNav] = useState(\"\");\r\n\r\n    function handleNavigation(component: string): void {\r\n        setNav(component);\r\n    }\r\n\r\n    if (nav === \"Preferences\") {\r\n        return (\r\n            <Preferences\r\n                storage={props.storage}\r\n                onNavigation={handleNavigation}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Home\r\n            experiences={props.storage.get()}\r\n            onNavigation={handleNavigation}\r\n            tags={props.tags}\r\n        />\r\n    );\r\n};\r\n\r\nApp.defaultProps = {\r\n    seed: [],\r\n    tags: [],\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { v4 as uuid } from \"uuid\";\r\nimport { IStorage, INewExperience } from \"./IStorage\";\r\nimport { IExperience } from \"./IExperience\";\r\n\r\nexport class LocalStorage implements IStorage {\r\n    public add(experience: INewExperience): void {\r\n        const experiences = this.get();\r\n        const item: IExperience = {\r\n            id: uuid(),\r\n            last: experience.last,\r\n            name: experience.name,\r\n            tag: experience.tag,\r\n        };\r\n        experiences.push(item);\r\n        localStorage.setItem(\"experiences\", JSON.stringify(experiences));\r\n    }\r\n\r\n    public add_many(experiences: INewExperience[]): void {\r\n        const data = this.get();\r\n        for (const experience of experiences) {\r\n            const item: IExperience = {\r\n                id: uuid(),\r\n                last: experience.last,\r\n                name: experience.name,\r\n                tag: experience.tag,\r\n            };\r\n            data.push(item);\r\n        }\r\n        localStorage.setItem(\"experiences\", JSON.stringify(data));\r\n    }\r\n\r\n    public delete(id: string): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    public get(): IExperience[] {\r\n        const experiences = localStorage.getItem(\"experiences\");\r\n        if (experiences === null || experiences === \"\") {\r\n            return [];\r\n        }\r\n        return JSON.parse(experiences);\r\n    }\r\n\r\n    public update(experience: IExperience): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { IStorage, INewExperience } from \"./IStorage\";\r\nimport { LocalStorage } from \"./localStorage\";\r\n//import * as data from \"./seed.json\";\r\n\r\nimport seed from \"./seed.json\";\r\n\r\nconst experiences: INewExperience[] = [\r\n    { name: \"Eat apple 🍏\", last: new Date(2018, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat avocado 🥑\", last: new Date(2016, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat banana 🍌\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat bell pepper 🫑\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat blueberries 🫐\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat broccoli 🥦\", tag: \"vegetable\" },\r\n    { name: \"Eat carrot 🥕\", tag: \"vegetable\" },\r\n    { name: \"Eat cherries 🍒\", last: new Date(2017, 5, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat chili 🌶️\", tag: \"fruit\" },\r\n    { name: \"Eat cucumber 🥒\", last: new Date(2017, 6, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat corn 🌽\", last: new Date(2017, 6, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat coconut 🥥\", last: new Date(2017, 7, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat eggplant 🍆\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat garlic 🧄\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat grapes 🍇\", last: new Date(2017, 9, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat leafy green 🥬\", tag: \"fruit\" },\r\n    { name: \"Eat lemon 🍋\", tag: \"fruit\" },\r\n    { name: \"Eat kiwi 🥝\", last: new Date(2017, 10, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat mango 🥭\", last: new Date(2017, 11, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat melon 🍈\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat mushroom 🍄\", last: new Date(2017, 4, 3).getTime() },\r\n    { name: \"Eat olives 🫒\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat onion 🧅\", last: new Date(2017, 8, 3).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat orange 🍊\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat peach 🍑\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat peanuts 🥜\", tag: \"fruit\" },\r\n    { name: \"Eat pear 🍐\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat pineapple 🍍\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat potato 🥔\", last: new Date(2018, 10, 1).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat tomato 🍅\", last: new Date(2018, 10, 1).getTime(), tag: \"vegetable\" },\r\n    { name: \"Eat strawberry 🍓\", last: new Date(2018, 10, 1).getTime(), tag: \"fruit\" },\r\n    { name: \"Eat watermelon 🍉\", last: new Date(2017, 4, 3).getTime(), tag: \"fruit\" },\r\n    { name: \"Get a massage 💆‍♂️💆‍♀️\", tag: \"activity\" },\r\n    { name: \"Bake a applepie 🥧🍪\", last: new Date(2018, 7, 13).getTime() },\r\n    { name: \"Basketball 🏀\", tag: \"activity\" },\r\n    { name: \"Bike 🚴\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Bowling 🎳\", last: null, tag: \"activity\" },\r\n    { name: \"Box 🥊\", last: null, tag: \"activity\" },\r\n    { name: \"Climb 🧗\", last: null, tag: \"activity\" },\r\n    { name: \"Cold shower 🥶🚿\", tag: \"activity\" },\r\n    { name: \"Dance 💃🕺\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Fasting 🍽\" },\r\n    { name: \"Football ⚽\", tag: \"activity\" },\r\n    { name: \"Guitar 🎸\", last: null, tag: \"activity\" },\r\n    { name: \"Ice bath 🥶🛀\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Ice skate ⛸️\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Meditate 🧘‍\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Read 📖\", last: new Date(2019, 0, 13).getTime(), tag: \"activity\" },\r\n    { name: \"Run 🏃\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Paint 🎨\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Play chess ♟️\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Play pool 🎱\", last: null, tag: \"activity\" },\r\n    { name: \"Sauna 🧖‍♂️🧖‍♀️\", tag: \"activity\" },\r\n    { name: \"Ski 🎿\", tag: \"activity\" },\r\n    { name: \"Swim 🏊\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Theatre 🎭\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Yoga 🧘\", last: new Date(2019, 0, 11).getTime(), tag: \"activity\" },\r\n    { name: \"Watch a movie 🎬\", last: null, tag: \"activity\" },\r\n    { name: \"Volleyball 🏐\", last: null, tag: \"activity\" },\r\n    { name: \"Wrestle 🤼\", last: null, tag: \"activity\" },\r\n    { name: \"Cook pasta 🍝\", last: null },\r\n    { name: \"Beach 🏖\", last: null, tag: \"places\" },\r\n    { name: \"Botanical garden 🌿\", last: null, tag: \"places\" },\r\n    { name: \"Cemetery ⚱️\", last: null, tag: \"places\" },\r\n    { name: \"Museum 🖼\", last: null, tag: \"places\" },\r\n    { name: \"Park 🏞\", last: null, tag: \"places\" },\r\n];\r\n\r\nconst storage: IStorage = new LocalStorage();\r\nconst tags: string[] = [\"Activity\", \"Fruit\", \"Places\", \"Vegetable\"];\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App seed={experiences} storage={storage} tags={tags} />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}